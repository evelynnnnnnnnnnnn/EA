this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,a,n,s,i,r,o,c,h,g,l,d,C){"use strict";const m={name:"TitleInput",props:{modelValue:{type:String,default:""},placeholder:{type:String,required:true}},emits:["update:modelValue"],data(){return{}},mounted(){this.$refs.titleInput.focus()},methods:{onInput(t){this.$emit("update:modelValue",t.target.value)}},template:`\n\t\t<div class="bx-im-content-create-chat__title_container">\n\t\t\t<input\n\t\t\t\t:value="modelValue"\n\t\t\t\t:placeholder="placeholder"\n\t\t\t\t@input="onInput"\n\t\t\t\tclass="bx-im-content-create-chat__title_input"\n\t\t\t\tref="titleInput"\n\t\t\t/>\n\t\t</div>\n\t`};const u={name:"ChatAvatar",props:{avatarFile:{required:true,validator(t){return t instanceof File||n.Type.isNull(t)}},chatTitle:{type:String,required:true},squared:{type:Boolean,required:false,default:false}},emits:["avatarChange"],data(){return{}},computed:{preparedAvatar(){if(!this.avatarFile){return null}return URL.createObjectURL(this.avatarFile)}},methods:{onAvatarChangeClick(){this.$refs.avatarInput.click()},async onAvatarSelect(t){const e=t.target;const a=e.files[0];if(!a){return}const n=await this.getChatService().prepareAvatar(a);if(!n){return}this.$emit("avatarChange",n)},getChatService(){if(!this.chatService){this.chatService=new d.ChatService}return this.chatService}},template:`\n\t\t<div class="bx-im-content-create-chat__avatar_container" :class="{'--squared': squared}" @click="onAvatarChangeClick">\n\t\t\t<img v-if="preparedAvatar" class="bx-im-content-create-chat__avatar_image" :src="preparedAvatar" :alt="chatTitle" />\n\t\t</div>\n\t\t<input type="file" @change="onAvatarSelect" accept="image/*" class="bx-im-content-create-chat__avatar_input" ref="avatarInput">\n\t`};const p={props:{chatMembers:{type:Array,required:true}},emits:["membersChange"],data(){return{}},computed:{currentUserId(){return h.Core.getUserId()}},created(){const t=this.chatMembers.map((t=>["user",t]));const e=[["user",this.currentUserId],...t];this.membersSelector=new a.TagSelector({maxHeight:99,placeholder:"",addButtonCaption:this.loc("IM_CREATE_CHAT_USER_SELECTOR_ADD_MEMBERS"),addButtonCaptionMore:this.loc("IM_CREATE_CHAT_USER_SELECTOR_ADD_MEMBERS"),showCreateButton:false,dialogOptions:{enableSearch:false,context:"IM_CHAT_CREATE",entities:[{id:"user"},{id:"department"}],preselectedItems:e,undeselectedItems:[["user",this.currentUserId]]},events:{onAfterTagAdd:t=>{const e=t.getTarget();this.$emit("membersChange",e.getTags().map((t=>t.id)))},onAfterTagRemove:t=>{const e=t.getTarget();this.$emit("membersChange",e.getTags().map((t=>t.id)))}}})},mounted(){this.membersSelector.renderTo(this.$refs.members)},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-create-chat__members" ref="members"></div>\n\t`};const _={components:{MessengerButton:s.Button},props:{isCreating:{type:Boolean,required:true},createButtonTitle:{type:String,required:true}},emits:["create","cancel"],data(){return{}},computed:{ButtonSize:()=>s.ButtonSize,ButtonColor:()=>s.ButtonColor},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-create-chat__buttons">\n\t\t\t<div class="bx-im-content-create-chat__buttons_create">\n\t\t\t\t<MessengerButton\n\t\t\t\t\t:size="ButtonSize.XL"\n\t\t\t\t\t:color="ButtonColor.Success"\n\t\t\t\t\t:text="createButtonTitle"\n\t\t\t\t\t:isLoading="isCreating"\n\t\t\t\t\t:isDisabled="isCreating"\n\t\t\t\t\t@click="$emit('create')"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-chat__buttons_cancel">\n\t\t\t\t<MessengerButton\n\t\t\t\t\t:size="ButtonSize.XL"\n\t\t\t\t\t:color="ButtonColor.Link"\n\t\t\t\t\t:text="loc('IM_CREATE_CHAT_CANCEL')"\n\t\t\t\t\t:isDisabled="isCreating"\n\t\t\t\t\t@click="$emit('cancel')"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const v={components:{ExpandAnimation:e.ExpandAnimation},props:{name:{type:String,required:true},title:{type:String,required:true},openByDefault:{type:Boolean,required:false,default:false}},data(){return{isOpened:false}},computed:{containerClasses(){return[`--${this.name}`,{"--active":this.isOpened}]}},created(){if(this.openByDefault){this.isOpened=true}},methods:{onContainerClick(){if(!this.isOpened){this.isOpened=true}}},template:`\n\t\t<div :class="containerClasses" class="bx-im-content-create-chat__section bx-im-content-create-chat__section_scope">\n\t\t\t<div @click="isOpened = !isOpened" class="bx-im-content-create-chat__section_header">\n\t\t\t\t<div class="bx-im-content-create-chat__section_left">\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_icon"></div>\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_text">{{ title }}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-content-create-chat__section_right"></div>\t\n\t\t\t</div>\n\t\t\t<ExpandAnimation>\n\t\t\t\t<div v-if="isOpened" class="bx-im-content-create-chat__section_content_container">\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_content">\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</ExpandAnimation>\n\t\t</div>\n\t`};const M={name:"TextareaInput",props:{value:{type:String,default:""},placeholder:{type:String,required:true},border:{type:Boolean,required:false,default:true},rounded:{type:Boolean,required:false,default:true}},emits:["input"],data(){return{}},computed:{containerClasses(){return{"--no-border":!this.border,"--rounded":this.rounded}}},methods:{onInput(t){this.$emit("input",t.target.value)}},template:`\n\t\t<div class="bx-im-content-create-chat__textarea_container" :class="containerClasses">\n\t\t\t<div class="ui-ctl ui-ctl-textarea ui-ctl-w100 ui-ctl-no-resize">\n\t\t\t\t<textarea\n\t\t\t\t\t:value="value"\n\t\t\t\t\t:placeholder="placeholder"\n\t\t\t\t\t@input="onInput"\n\t\t\t\t\tclass="bx-im-content-create-chat__textarea ui-ctl-element"\n\t\t\t\t></textarea>\n\t\t\t</div>\n\t\t</div>\n\t`};const T={name:"RadioOption",props:{items:{type:Array,required:true}},emits:["change"],data(){return{groupName:n.Text.getRandom()}},computed:{options(){return this.items},selectedValue(){return this.options.find((t=>t.selected===true))}},methods:{onInput(t){this.$emit("change",t.value)}},template:`\n\t\t<div class="bx-im-content-create-chat-radio__container">\n\t\t\t<label v-for="option in options" class="bx-im-content-create-chat-radio__item ui-ctl ui-ctl-radio">\n\t\t\t\t<input type="radio" class="ui-ctl-element" :name="groupName" :checked="option.selected" @input="onInput(option)">\n\t\t\t\t<div class="ui-ctl-label-text">\n\t\t\t\t\t\x3c!-- Text --\x3e\n\t\t\t\t\t<div v-if="option.html" class="bx-im-content-create-chat-radio__label_title" v-html="option.text"></div>\n\t\t\t\t\t<div v-else class="bx-im-content-create-chat-radio__label_title">{{ option.text }}</div>\n\t\t\t\t\t\x3c!-- Subtext --\x3e\n\t\t\t\t\t<template v-if="option.subtext">\n\t\t\t\t\t\t<div v-if="option.html" class="bx-im-content-create-chat-radio__label_subtitle" v-html="option.subtext"></div>\n\t\t\t\t\t\t<div v-else class="bx-im-content-create-chat-radio__label_subtitle">{{ option.subtext }}</div>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t</label>\n\t\t</div>\n\t`};const I={components:{CreateChatSection:v,Dropdown:s.Dropdown,TextareaInput:M,RadioOption:T},props:{description:{type:String,required:true},withSearchOption:{type:Boolean,default:true},isAvailableInSearch:{type:Boolean,default:false}},emits:["chatTypeChange","descriptionChange"],data(){return{}},computed:{privacyOptions(){return[{value:false,text:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_PRIVATE_TITLE"),subtext:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_PRIVATE_SUBTITLE"),selected:!this.isAvailableInSearch},{value:true,text:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_OPEN_TITLE"),subtext:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_OPEN_SUBTITLE"),selected:this.isAvailableInSearch}]},descriptionPlaceholderText(){return this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_DESCRIPTION_PLACEHOLDER",{"#BR#":"\n","#QUOTE_START#":'"',"#QUOTE_END#":'"'})}},methods:{onTypeChange(t){this.$emit("chatTypeChange",t)},onDescriptionChange(t){this.$emit("descriptionChange",t)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection name="settings" :title="loc('IM_CREATE_CHAT_SETTINGS_SECTION')">\n\t\t\t<div v-if="withSearchOption" class="bx-im-content-create-chat__section_block">\n\t\t\t\t<div class="bx-im-content-create-chat__heading">\n\t\t\t\t\t{{ loc('IM_CREATE_CHAT_SETTINGS_SECTION_PRIVACY') }}\n\t\t\t\t</div>\n\t\t\t\t<RadioOption :items="privacyOptions" @change="onTypeChange" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<div class="bx-im-content-create-chat__heading">{{ loc('IM_CREATE_CHAT_SETTINGS_SECTION_DESCRIPTION') }}</div>\n\t\t\t\t<div class="bx-im-content-create-chat-settings__description_container">\n\t\t\t\t\t<TextareaInput\n\t\t\t\t\t\t:value="description"\n\t\t\t\t\t\t:placeholder="descriptionPlaceholderText"\n\t\t\t\t\t\t:rounded="false"\n\t\t\t\t\t\t@input="onDescriptionChange"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</CreateChatSection>\n\t`};const S={name:"OwnerSelector",props:{ownerId:{type:Number,required:true}},emits:["ownerChange"],data(){return{}},created(){this.membersSelector=new a.TagSelector({multiple:false,maxHeight:33,placeholder:"",addButtonCaption:this.loc("IM_CREATE_CHAT_USER_SELECTOR_CHANGE_OWNER"),addButtonCaptionMore:this.loc("IM_CREATE_CHAT_USER_SELECTOR_CHANGE_OWNER"),showCreateButton:false,dialogOptions:{enableSearch:false,context:"IM_CHAT_CREATE",entities:[{id:"user"},{id:"department"}],preselectedItems:[["user",this.ownerId]]},events:{onBeforeTagAdd:t=>{const{tag:e}=t.getData();e.setDeselectable(false)},onAfterTagAdd:t=>{const{tag:e}=t.getData();this.$emit("ownerChange",e.id)}}})},mounted(){this.membersSelector.renderTo(this.$refs.owner)},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-create-chat__owner" ref="owner"></div>\n\t`};const E={props:{managerIds:{type:Array,required:true}},emits:["managersChange"],data(){return{}},computed:{currentUserId(){return h.Core.getUserId()}},created(){const t=this.managerIds.map((t=>["user",t]));this.membersSelector=new a.TagSelector({maxHeight:99,placeholder:"",addButtonCaption:this.loc("IM_CREATE_CHAT_RIGHTS_SECTION_ADD_MANAGERS"),addButtonCaptionMore:this.loc("IM_CREATE_CHAT_RIGHTS_SECTION_ADD_MANAGERS"),showCreateButton:false,dialogOptions:{enableSearch:false,context:"IM_CHAT_CREATE",entities:[{id:"user"},{id:"department"}],preselectedItems:t},events:{onAfterTagAdd:t=>{const e=t.getTarget();this.$emit("managersChange",e.getTags().map((t=>t.id)))},onAfterTagRemove:t=>{const e=t.getTarget();this.$emit("managersChange",e.getTags().map((t=>t.id)))}}})},mounted(){this.membersSelector.renderTo(this.$refs.managers)},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-create-chat__managers" ref="managers"></div>\n\t`};const A=[{value:C.UserRole.member,text:n.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_ROLE_MEMBER")},{value:C.UserRole.manager,text:n.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_ROLE_MANAGER")},{value:C.UserRole.owner,text:n.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_ROLE_OWNER"),default:true}];const b={components:{CreateChatSection:v,Dropdown:s.Dropdown,OwnerSelector:S,ManagersSelector:E},props:{ownerId:{type:Number,required:true},managerIds:{type:Array,required:true},manageUsersAdd:{type:String,required:true},manageUsersDelete:{type:String,required:true},manageSettings:{type:String,required:true},manageUi:{type:String,required:true},manageMessages:{type:String,required:true}},emits:["ownerChange","managersChange","manageUsersAddChange","manageUsersDeleteChange","manageUiChange","manageMessagesChange"],data(){return{}},computed:{PopupType:()=>C.PopupType,manageUsersAddItems(){return A.map((t=>{if(t.value===this.manageUsersAdd){return{...t,default:true}}return{...t}}))},manageUsersDeleteItems(){return A.map((t=>{if(t.value===this.manageUsersDelete){return{...t,default:true}}return{...t}}))},manageUiItems(){return A.map((t=>{if(t.value===this.manageUi){return{...t,default:true}}return{...t}}))},manageMessagesItems(){return A.map((t=>{if(t.value===this.manageMessages){return{...t,default:true}}return{...t}}))}},methods:{onOwnerChange(t){this.$emit("ownerChange",t)},onManagersChange(t){this.$emit("managersChange",t)},onManageUsersAddChange(t){this.$emit("manageUsersAddChange",t)},onManageUsersDeleteChange(t){this.$emit("manageUsersDeleteChange",t)},onManageUiChange(t){this.$emit("manageUiChange",t)},onManageMessagesChange(t){this.$emit("manageMessagesChange",t)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection name="rights" :title="loc('IM_CREATE_CHAT_RIGHTS_SECTION')">\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<div class="bx-im-content-create-chat__heading">\n\t\t\t\t\t{{ loc('IM_CREATE_CHAT_SETTINGS_SECTION_OWNER') }}\n\t\t\t\t</div>\n\t\t\t\t<OwnerSelector :ownerId="ownerId" @ownerChange="onOwnerChange" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<div class="bx-im-content-create-chat__heading">\n\t\t\t\t\t{{ loc('IM_CREATE_CHAT_RIGHTS_SECTION_MANAGERS') }}\n\t\t\t\t</div>\n\t\t\t\t<ManagersSelector :managerIds="managerIds" @managersChange="onManagersChange" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<div class="bx-im-content-create-chat__heading">\n\t\t\t\t\t{{ loc('IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_USERS_ADD') }}\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-content-create-chat-settings__manage-select">\n\t\t\t\t\t<Dropdown :items="manageUsersAddItems" :id="PopupType.createChatManageUsersAddMenu" @itemChange="onManageUsersAddChange" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<div class="bx-im-content-create-chat__heading">\n\t\t\t\t\t{{ loc('IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_USERS_DELETE') }}\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-content-create-chat-settings__manage-select">\n\t\t\t\t\t<Dropdown :items="manageUsersDeleteItems" :id="PopupType.createChatManageUsersDeleteMenu" @itemChange="onManageUsersDeleteChange" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<div class="bx-im-content-create-chat__heading">\n\t\t\t\t\t{{ loc('IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_UI_MSGVER_2') }}\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-content-create-chat-settings__manage-select">\n\t\t\t\t\t<Dropdown :items="manageUiItems" :id="PopupType.createChatManageUiMenu" @itemChange="onManageUiChange" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<div class="bx-im-content-create-chat__heading">\n\t\t\t\t\t{{ loc('IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_SENDING_MSGVER_1') }}\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-content-create-chat-settings__manage-select">\n\t\t\t\t\t<Dropdown :items="manageMessagesItems" :id="PopupType.createChatManageMessagesMenu" @itemChange="onManageMessagesChange" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</CreateChatSection>\n\t`};const y={components:{CreateChatSection:v},data(){return{}},template:`\n\t\t<Section name="appearance" title="Appearance" />\n\t`};const U={name:"GroupChatCreation",components:{TitleInput:m,ChatAvatar:u,ChatMembersSelector:p,SettingsSection:I,RightsSection:b,AppearanceSection:y,ButtonPanel:_},data(){return{isCreating:false,avatarFile:null,chatTitle:"",chatMembers:[],settings:{isAvailableInSearch:false,description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageSettings:"",manageUi:"",manageMessages:""}}},watch:{chatTitle(t){g.CreateChatManager.getInstance().setChatTitle(t)}},created(){r.EventEmitter.subscribe(C.EventType.layout.onLayoutChange,this.onLayoutChange);this.rights.ownerId=h.Core.getUserId();this.initDefaultRolesForRights();this.restoreFields();g.CreateChatManager.getInstance().setChatType(C.ChatType.chat);g.CreateChatManager.getInstance().setCreationStatus(true);g.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){if(this.exitByCancel||this.exitByChatTypeSwitch||this.exitByCreation){return}this.saveFields()},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onChatTypeChange(t){this.settings.isAvailableInSearch=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},async onCreateClick(){this.isCreating=true;const{newDialogId:t}=await this.getChatService().createChat({title:this.chatTitle,avatar:this.avatarFile,members:this.chatMembers,ownerId:this.rights.ownerId,managers:this.rights.managerIds,isAvailableInSearch:this.settings.isAvailableInSearch,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageSettings:this.rights.manageSettings,manageMessages:this.rights.manageMessages}).catch((()=>{this.isCreating=false;BX.UI.Notification.Center.notify({content:this.loc("IM_CREATE_CHAT_ERROR")})}));this.isCreating=false;this.exitByCreation=true;g.CreateChatManager.getInstance().setCreationStatus(false);void c.Messenger.openChat(t)},onCancelClick(){this.exitByCancel=true;g.CreateChatManager.getInstance().setCreationStatus(false);c.Messenger.openChat()},onAvatarChange(t){this.avatarFile=t;g.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onScroll(){var t,e,a,n;(t=o.MenuManager.getMenuById(C.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=o.MenuManager.getMenuById(C.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=o.MenuManager.getMenuById(C.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=o.MenuManager.getMenuById(C.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},onLayoutChange(t){const{to:e}=t.getData();if(e.name===C.Layout.createChat.name&&e.entityId!==C.ChatType.chat){this.exitByChatTypeSwitch=true}},saveFields(){g.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,chatMembers:this.chatMembers,settings:this.settings,rights:this.rights})},restoreFields(){const t=g.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,chatMembers:n,settings:s,rights:i}=t;this.chatTitle=e;this.avatarFile=a;this.chatMembers=n;this.settings=s;this.rights=i},initDefaultRolesForRights(){const{manageUsersAdd:t,manageUsersDelete:e,manageUi:a,manageSettings:n,manageMessages:s}=l.PermissionManager.getInstance().getDefaultRolesForActionGroups();this.rights.manageUsersAdd=t;this.rights.manageUsersDelete=e;this.rights.manageUi=a;this.rights.manageSettings=n;this.rights.manageMessages=s},getChatService(){if(!this.chatService){this.chatService=new d.ChatService}return this.chatService},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-create-chat__content" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-create-chat__header">\n\t\t\t\t<ChatAvatar :avatarFile="avatarFile" :chatTitle="chatTitle" @avatarChange="onAvatarChange" />\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CHAT_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-chat__members_container">\n\t\t\t\t<ChatMembersSelector :chatMembers="chatMembers" @membersChange="onMembersChange" />\n\t\t\t</div>\n\t\t\t<SettingsSection\n\t\t\t\t:isAvailableInSearch="settings.isAvailableInSearch"\n\t\t\t\t:description="settings.description"\n\t\t\t\t@chatTypeChange="onChatTypeChange"\n\t\t\t\t@descriptionChange="onDescriptionChange"\n\t\t\t/>\n\t\t\t<RightsSection\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageSettings="rights.manageSettings"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/> \n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_CHAT_CONFIRM')"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const R={components:{CreateChatSection:v,Dropdown:s.Dropdown,Toggle:s.Toggle},props:{passwordNeeded:{type:Boolean,required:true},password:{type:String,required:true}},emits:["passwordNeededChange","passwordChange"],data(){return{}},computed:{ToggleSize:()=>s.ToggleSize},methods:{onPasswordNeededChange(t){this.$emit("passwordNeededChange",t)},onPasswordChange(t){this.$emit("passwordChange",t.target.value)},onToggleLabelClick(){this.onPasswordNeededChange(!this.passwordNeeded)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection name="conference" :title="loc('IM_CREATE_CHAT_CONFERENCE_SECTION')">\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<div class="bx-im-content-create-chat__heading">\n\t\t\t\t\t{{ loc('IM_CREATE_CHAT_CONFERENCE_SECTION_PRIVACY') }}\n\t\t\t\t</div>\n\t\t\t\t<div @click="onToggleLabelClick" class="bx-im-content-create-chat-settings__type-select">\n\t\t\t\t\t<Toggle :size="ToggleSize.M" :isEnabled="passwordNeeded" />\n\t\t\t\t\t<div class="bx-im-content-create-chat-settings__type-select_label">\n\t\t\t\t\t\t{{ loc('IM_CREATE_CHAT_CONFERENCE_SECTION_USE_PASSWORD') }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="passwordNeeded" class="bx-im-content-create-chat-conference__password-container ui-ctl ui-ctl-textbox">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\tclass="bx-im-content-create-chat-conference__password-input ui-ctl-element"\n\t\t\t\t\t\t:value="password"\n\t\t\t\t\t\t:placeholder="loc('IM_CREATE_CHAT_CONFERENCE_SECTION_PASSWORD_PLACEHOLDER')"\n\t\t\t\t\t\t@input="onPasswordChange"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</CreateChatSection>\n\t`};const f={name:"ConferenceCreation",components:{TitleInput:m,ChatAvatar:u,ChatMembersSelector:p,SettingsSection:I,RightsSection:b,AppearanceSection:y,ConferenceSection:R,ButtonPanel:_},data(){return{isCreating:false,avatarFile:null,chatTitle:"",chatMembers:[],conference:{passwordNeeded:false,password:""},settings:{description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageSettings:"",manageUi:"",manageMessages:""}}},watch:{chatTitle(t){g.CreateChatManager.getInstance().setChatTitle(t)}},created(){r.EventEmitter.subscribe(C.EventType.layout.onLayoutChange,this.onLayoutChange);this.rights.ownerId=h.Core.getUserId();this.initDefaultRolesForRights();this.restoreFields();g.CreateChatManager.getInstance().setChatType(C.ChatType.videoconf);g.CreateChatManager.getInstance().setCreationStatus(true);g.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){if(this.exitByCancel||this.exitByChatTypeSwitch){return}this.saveFields()},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},onAvatarChange(t){this.avatarFile=t;g.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onPasswordNeededChange(t){this.conference.passwordNeeded=t},onPasswordChange(t){this.conference.password=t},async onCreateClick(){if(!this.checkPassword()){this.showPasswordError();return}this.isCreating=true;const{newDialogId:t}=await this.getChatService().createChat({entityType:C.ChatType.videoconf,title:this.chatTitle,avatar:this.avatarFile,members:this.chatMembers,ownerId:this.rights.ownerId,managers:this.rights.managerIds,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageSettings:this.rights.manageSettings,manageMessages:this.rights.manageMessages,conferencePassword:this.conference.passwordNeeded?this.conference.password:""}).catch((()=>{this.isCreating=false;BX.UI.Notification.Center.notify({content:this.loc("IM_CREATE_CHAT_ERROR")})}));this.isCreating=false;g.CreateChatManager.getInstance().setCreationStatus(false);void c.Messenger.openChat(t)},onCancelClick(){this.exitByCancel=true;g.CreateChatManager.getInstance().setCreationStatus(false);c.Messenger.openChat()},onScroll(){var t,e,a,n;(t=o.MenuManager.getMenuById(C.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=o.MenuManager.getMenuById(C.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=o.MenuManager.getMenuById(C.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=o.MenuManager.getMenuById(C.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},onLayoutChange(t){const{to:e}=t.getData();if(e.name===C.Layout.createChat.name&&e.entityId!==C.ChatType.videoconf){this.exitByChatTypeSwitch=true}},saveFields(){g.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,chatMembers:this.chatMembers,settings:this.settings,rights:this.rights,conference:this.conference})},restoreFields(){const t=g.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,chatMembers:n,conference:s,settings:i,rights:r}=t;this.chatTitle=e;this.avatarFile=a;this.chatMembers=n;this.conference=s;this.settings=i;this.rights=r},initDefaultRolesForRights(){const{manageUsersAdd:t,manageUsersDelete:e,manageUi:a,manageSettings:n,manageMessages:s}=l.PermissionManager.getInstance().getDefaultRolesForActionGroups();this.rights.manageUsersAdd=t;this.rights.manageUsersDelete=e;this.rights.manageUi=a;this.rights.manageSettings=n;this.rights.manageMessages=s},checkPassword(){const t=3;if(!this.conference.passwordNeeded){return true}const e=this.conference.password.trim();return e!==""&&e.length>=t},showPasswordError(){BX.UI.Notification.Center.notify({content:this.loc("IM_CREATE_CHAT_CONFERENCE_PASSWORD_ERROR")})},getChatService(){if(!this.chatService){this.chatService=new d.ChatService}return this.chatService},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-create-chat__content" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-create-chat__header">\n\t\t\t\t<ChatAvatar :avatarFile="avatarFile" :chatTitle="chatTitle" @avatarChange="onAvatarChange" :squared="true" />\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CONFERENCE_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-chat__members_container">\n\t\t\t\t<ChatMembersSelector :chatMembers="chatMembers" @membersChange="onMembersChange" />\n\t\t\t</div>\n\t\t\t<ConferenceSection\n\t\t\t\t:passwordNeeded="conference.passwordNeeded"\n\t\t\t\t:password="conference.password"\n\t\t\t\t@passwordNeededChange="onPasswordNeededChange"\n\t\t\t\t@passwordChange="onPasswordChange"\n\t\t\t/>\n\t\t\t<SettingsSection\n\t\t\t\t:withSearchOption="false"\n\t\t\t\t:description="settings.description"\n\t\t\t\t@descriptionChange="onDescriptionChange"\n\t\t\t/>\n\t\t\t<RightsSection\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageSettings="rights.manageSettings"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_CONFERENCE_CONFIRM')"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const x={components:{CreateChatSection:v,RadioOption:T},props:{withSearchOption:{type:Boolean,default:true},isAvailableInSearch:{type:Boolean,default:false}},emits:["chatTypeChange"],data(){return{}},computed:{privacyOptions(){return[{value:true,text:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_OPEN_TITLE"),subtext:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_OPEN_SUBTITLE"),selected:this.isAvailableInSearch},{value:false,text:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_PRIVATE_TITLE"),subtext:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_PRIVATE_SUBTITLE"),selected:!this.isAvailableInSearch}]}},methods:{onTypeChange(t){this.$emit("chatTypeChange",t)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection name="privacy" :title="loc('IM_CREATE_CHAT_PRIVACY_SECTION')" :openByDefault="true">\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<RadioOption :items="privacyOptions" @change="onTypeChange" />\n\t\t\t</div>\n\t\t</CreateChatSection>\n\t`};const w={name:"ChannelCreation",components:{TitleInput:m,ChatAvatar:u,ChatMembersSelector:p,SettingsSection:I,RightsSection:b,AppearanceSection:y,PrivacySection:x,ButtonPanel:_,TextareaInput:M},data(){return{isCreating:false,avatarFile:null,chatTitle:"",chatMembers:[],settings:{isAvailableInSearch:true,description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageSettings:"",manageUi:"",manageMessages:""}}},watch:{chatTitle(t){g.CreateChatManager.getInstance().setChatTitle(t)}},created(){r.EventEmitter.subscribe(C.EventType.layout.onLayoutChange,this.onLayoutChange);this.rights.ownerId=h.Core.getUserId();this.initDefaultRolesForRights();this.restoreFields();g.CreateChatManager.getInstance().setChatType(C.ChatType.channel);g.CreateChatManager.getInstance().setCreationStatus(true);g.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){r.EventEmitter.unsubscribe(C.EventType.layout.onLayoutChange,this.onLayoutChange);if(this.exitByCancel||this.exitByChatTypeSwitch||this.exitByCreation){return}this.saveFields()},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onChatTypeChange(t){this.settings.isAvailableInSearch=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},async onCreateClick(){this.isCreating=true;const{newDialogId:t}=await this.getChatService().createChat({type:C.ChatType.channel,title:this.chatTitle,avatar:this.avatarFile,members:this.chatMembers,ownerId:this.rights.ownerId,managers:this.rights.managerIds,isAvailableInSearch:this.settings.isAvailableInSearch,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageSettings:this.rights.manageSettings,manageMessages:this.rights.manageMessages}).catch((()=>{this.isCreating=false;BX.UI.Notification.Center.notify({content:this.loc("IM_CREATE_CHAT_ERROR")})}));this.isCreating=false;this.exitByCreation=true;g.CreateChatManager.getInstance().setCreationStatus(false);void c.Messenger.openChat(t)},onCancelClick(){this.exitByCancel=true;g.CreateChatManager.getInstance().setCreationStatus(false);c.Messenger.openChat()},onAvatarChange(t){this.avatarFile=t;g.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onScroll(){var t,e,a,n;(t=o.MenuManager.getMenuById(C.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=o.MenuManager.getMenuById(C.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=o.MenuManager.getMenuById(C.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=o.MenuManager.getMenuById(C.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},onLayoutChange(t){const{to:e}=t.getData();if(e.name===C.Layout.createChat.name&&e.entityId!==C.ChatType.channel){this.exitByChatTypeSwitch=true}},saveFields(){g.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,chatMembers:this.chatMembers,settings:this.settings,rights:this.rights})},restoreFields(){const t=g.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,chatMembers:n,settings:s,rights:i}=t;this.chatTitle=e;this.avatarFile=a;this.chatMembers=n;this.settings=s;this.rights=i},initDefaultRolesForRights(){const{manageUsersAdd:t,manageUsersDelete:e,manageUi:a,manageSettings:n,manageMessages:s}=l.PermissionManager.getInstance().getDefaultRolesForActionGroups(C.ChatType.channel);this.rights.manageUsersAdd=t;this.rights.manageUsersDelete=e;this.rights.manageUi=a;this.rights.manageSettings=n;this.rights.manageMessages=s},getChatService(){if(!this.chatService){this.chatService=new d.ChatService}return this.chatService},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-create-chat__content" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-create-chat__header">\n\t\t\t\t<ChatAvatar :avatarFile="avatarFile" :chatTitle="chatTitle" @avatarChange="onAvatarChange" :squared="true" />\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CHANNEL_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-channel__description_container">\n\t\t\t\t<TextareaInput\n\t\t\t\t\t:value="settings.description"\n\t\t\t\t\t:placeholder="loc('IM_CREATE_CHANNEL_DESCRIPTION_PLACEHOLDER')"\n\t\t\t\t\t:border="false"\n\t\t\t\t\t@input="onDescriptionChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<PrivacySection\n\t\t\t\t:isAvailableInSearch="settings.isAvailableInSearch"\n\t\t\t\t@chatTypeChange="onChatTypeChange"\n\t\t\t/>\n\t\t\t<RightsSection\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageSettings="rights.manageSettings"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/>\n\t\t\t<div class="bx-im-content-create-channel__members_container">\n\t\t\t\t<ChatMembersSelector :chatMembers="chatMembers" @membersChange="onMembersChange" />\n\t\t\t</div>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_CHANNEL_CONFIRM')"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const B={name:"CreateChatContent",components:{GroupChatCreation:U,ConferenceCreation:f,ChannelCreation:w},props:{entityId:{type:String,required:true}},data(){return{}},computed:{ChatType:()=>C.ChatType,chatType(){return this.entityId}},template:`\n\t\t<div class="bx-im-content-create-chat__container bx-im-content-create-chat__scope">\n\t\t\t<GroupChatCreation v-if="chatType === ChatType.chat" />\n\t\t\t<ConferenceCreation v-else-if="chatType === ChatType.videoconf" />\n\t\t\t<ChannelCreation v-else-if="chatType === ChatType.channel" />\n\t\t</div>\n\t`};t.CreateChatContent=B})(this.BX.Messenger.v2.Component.Content=this.BX.Messenger.v2.Component.Content||{},BX.Messenger.v2.Component.Animation,BX.UI.EntitySelector,BX,BX.Messenger.v2.Component.Elements,BX,BX.Event,BX.Main,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Const);
//# sourceMappingURL=create-chat-content.bundle.map.js