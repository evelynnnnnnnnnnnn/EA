{"version":3,"file":"registry.bundle.js","sources":["../src/classes/recent-data-extractor.js","../src/recent.js","../src/classes/chat-data-extractor.js","../src/classes/chat/load.js","../src/classes/chat/create.js","../src/classes/chat/update.js","../src/classes/chat/rename.js","../src/classes/chat/mute.js","../src/classes/chat/pin.js","../src/classes/chat/read.js","../src/classes/chat/user.js","../src/chat.js","../src/classes/message/load.js","../src/classes/message/pin.js","../src/classes/message/edit.js","../src/classes/message/delete.js","../src/classes/message/mark.js","../src/classes/message/favorite.js","../src/message.js","../src/sending.js","../src/notification.js","../src/disk.js","../src/classes/recent/unread-recent.js","../src/classes/uploading/uploader-wrapper.js","../src/uploading.js","../src/settings.js","../src/lines.js","../src/copilot.js"],"sourcesContent":["import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, UserRole, MessageStatus, FakeMessagePrefix } from 'im.v2.const';\n\nimport type { ImModelMessage } from 'im.v2.model';\nimport type { RecentRestResult, RawUser, RawChat, RawRecentItem, RawMessage } from '../types/rest';\n\ntype RecentFile = {\n\tid: number,\n\tname: string,\n\ttype: string,\n};\n\ntype ExtractionResult = {\n\tusers: RawUser[],\n\tchats: RawChat[],\n\tmessages: RawMessage[],\n\tfiles: RecentFile[],\n\trecentItems: RawRecentItem[]\n};\n\nexport class RecentDataExtractor\n{\n\t#restResult: RecentRestResult;\n\t#withBirthdays: boolean;\n\n\t#users: { [id: string]: RawUser } = {};\n\t#chats: { [id: string]: RawChat } = {};\n\t#messages: { [id: string]: RawMessage } = {};\n\t#files: { [id: string]: RecentFile } = {};\n\t#recentItems: { [id: string]: RawRecentItem } = {};\n\n\tconstructor(params: { rawData: RecentRestResult, withBirthdays?: boolean })\n\t{\n\t\tconst { rawData, withBirthdays = true } = params;\n\t\tthis.#withBirthdays = withBirthdays;\n\t\tthis.#restResult = rawData;\n\t}\n\n\tgetItems(): ExtractionResult\n\t{\n\t\tconst { items = [] } = this.#restResult;\n\t\titems.forEach((item: RawRecentItem) => {\n\t\t\tthis.#extractUser(item);\n\t\t\tthis.#extractChat(item);\n\t\t\tthis.#extractMessage(item);\n\t\t\tthis.#extractRecentItem(item);\n\t\t});\n\n\t\tthis.#extractBirthdayItems();\n\n\t\treturn {\n\t\t\tusers: Object.values(this.#users),\n\t\t\tchats: Object.values(this.#chats),\n\t\t\tmessages: Object.values(this.#messages),\n\t\t\tfiles: Object.values(this.#files),\n\t\t\trecentItems: Object.values(this.#recentItems),\n\t\t};\n\t}\n\n\t#extractUser(item: RawRecentItem)\n\t{\n\t\tif (item.user?.id && !this.#users[item.user.id])\n\t\t{\n\t\t\tthis.#users[item.user.id] = item.user;\n\t\t}\n\t}\n\n\t#extractChat(item: RawRecentItem)\n\t{\n\t\tif (item.chat)\n\t\t{\n\t\t\tthis.#chats[item.id] = this.#prepareGroupChat(item);\n\n\t\t\tif (item.user.id && !this.#chats[item.user.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForAdditionalUser(item.user);\n\t\t\t}\n\t\t}\n\t\telse if (item.user.id)\n\t\t{\n\t\t\tconst existingRecentItem = Core.getStore().getters['recent/get'](item.user.id);\n\t\t\t// we should not update real chat with \"default\" chat data\n\t\t\tif (!existingRecentItem || !item.options.default_user_record)\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForUser(item);\n\t\t\t}\n\t\t}\n\t}\n\n\t#extractMessage(item: RawRecentItem): void\n\t{\n\t\tconst message = item.message;\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (message.id === 0)\n\t\t{\n\t\t\tmessage.id = `${FakeMessagePrefix}-${item.id}`;\n\t\t}\n\n\t\tlet viewedByOthers = false;\n\t\tif (message.status === MessageStatus.delivered)\n\t\t{\n\t\t\tviewedByOthers = true;\n\t\t}\n\n\t\tif (Type.isPlainObject(message.file))\n\t\t{\n\t\t\tconst file: RecentFile = message.file;\n\t\t\tmessage.files = [file.id];\n\n\t\t\tconst existingFile = Core.getStore().getters['files/get'](file.id);\n\t\t\t// recent has shortened file format, we should not rewrite file if model has it\n\t\t\tif (!existingFile)\n\t\t\t{\n\t\t\t\tthis.#files[file.id] = file;\n\t\t\t}\n\t\t}\n\n\t\tconst existingMessage: ImModelMessage = Core.getStore().getters['messages/getById'](message.id);\n\t\t// recent has shortened attach format, we should not rewrite attach if model has it\n\t\tif (Type.isArrayFilled(existingMessage?.attach))\n\t\t{\n\t\t\tdelete message.attach;\n\t\t}\n\n\t\tthis.#messages[message.id] = { ...message, viewedByOthers };\n\t}\n\n\t#extractRecentItem(item: RawRecentItem): void\n\t{\n\t\tconst messageId = item.message?.id ?? 0;\n\t\tthis.#recentItems[item.id] = { ...item, messageId };\n\t}\n\n\t#extractBirthdayItems()\n\t{\n\t\tif (!this.#withBirthdays)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst { birthdayList = [] } = this.#restResult;\n\t\tbirthdayList.forEach((item) => {\n\t\t\tif (!this.#users[item.id])\n\t\t\t{\n\t\t\t\tthis.#users[item.id] = item;\n\t\t\t}\n\n\t\t\tif (!this.#chats[item.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.id] = this.#prepareChatForAdditionalUser(item);\n\t\t\t}\n\n\t\t\tif (!this.#recentItems[item.id])\n\t\t\t{\n\t\t\t\tconst messageId = `${FakeMessagePrefix}-${item.id}`;\n\t\t\t\tthis.#recentItems[item.id] = { ...this.#getBirthdayPlaceholder(item), messageId };\n\t\t\t\tthis.#messages[messageId] = { id: messageId };\n\t\t\t}\n\t\t});\n\t}\n\n\t#prepareGroupChat(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\t...item.chat,\n\t\t\tcounter: item.counter,\n\t\t\tdialogId: item.id,\n\t\t};\n\t}\n\n\t#prepareChatForUser(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\tchatId: item.chat_id,\n\t\t\tavatar: item.user.avatar,\n\t\t\tcolor: item.user.color,\n\t\t\tdialogId: item.id,\n\t\t\tname: item.user.name,\n\t\t\ttype: ChatType.user,\n\t\t\tcounter: item.counter,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#prepareChatForAdditionalUser(user: RawUser): RawChat\n\t{\n\t\treturn {\n\t\t\tdialogId: user.id,\n\t\t\tavatar: user.avatar,\n\t\t\tcolor: user.color,\n\t\t\tname: user.name,\n\t\t\ttype: ChatType.user,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#getBirthdayPlaceholder(item: RawRecentItem): { id: string, isBirthdayPlaceholder: true }\n\t{\n\t\treturn {\n\t\t\tid: item.id,\n\t\t\tisBirthdayPlaceholder: true,\n\t\t};\n\t}\n}\n","import { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { RecentDataExtractor } from './classes/recent-data-extractor';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelRecentItem } from 'im.v2.model';\n\nexport class RecentService\n{\n\tstatic instance = null;\n\n\tdataIsPreloaded: boolean = false;\n\tfirstPageIsLoaded: boolean = false;\n\titemsPerPage: number = 50;\n\tisLoading: boolean = false;\n\tpagesLoaded: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\tlastMessageDate: string = null;\n\n\tstatic getInstance(): RecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\t// region public\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn Core.getStore().getters['recent/getRecentCollection'];\n\t}\n\n\tasync loadFirstPage({ ignorePreloadedItems = false } = {}): Promise\n\t{\n\t\tif (this.dataIsPreloaded && !ignorePreloadedItems)\n\t\t{\n\t\t\tLogger.warn('Im.RecentList: first page was preloaded');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\tconst result = await this.requestItems({ firstPage: true });\n\t\tthis.firstPageIsLoaded = true;\n\n\t\treturn result;\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tsetPreloadedData(params)\n\t{\n\t\tLogger.warn('Im.RecentList: setting preloaded data', params);\n\t\tconst { items, hasMore } = params;\n\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.dataIsPreloaded = true;\n\n\t\tthis.updateModels(params);\n\t}\n\n\thideChat(dialogId): void\n\t{\n\t\tLogger.warn('Im.RecentList: hide chat', dialogId);\n\t\tconst recentItem = Core.getStore().getters['recent/get'](dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/delete', {\n\t\t\tid: dialogId,\n\t\t});\n\n\t\tconst chatIsOpened = Core.getStore().getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\n\t\tCore.getRestClient().callMethod(RestMethod.imRecentHide, { DIALOG_ID: dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: hide chat error', error);\n\t\t\t});\n\t}\n\t// endregion public\n\n\tasync requestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst queryParams = this.getQueryParams(firstPage);\n\n\t\tconst result = await Core.getRestClient().callMethod(this.getQueryMethod(), queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: page request error', error);\n\t\t\t});\n\n\t\tthis.pagesLoaded++;\n\t\tLogger.warn(`Im.RecentList: ${firstPage ? 'First' : this.pagesLoaded} page request result`, result.data());\n\t\tconst { items, hasMore } = result.data();\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.isLoading = false;\n\n\t\treturn this.updateModels(result.data());\n\t}\n\n\tgetQueryMethod(): string\n\t{\n\t\treturn RestMethod.imRecentList;\n\t}\n\n\tgetQueryParams(firstPage: boolean): JsonObject\n\t{\n\t\treturn {\n\t\t\tSKIP_OPENLINES: 'Y',\n\t\t\tLIMIT: this.itemsPerPage,\n\t\t\tLAST_MESSAGE_DATE: firstPage ? null : this.lastMessageDate,\n\t\t\tGET_ORIGINAL_TEXT: 'Y',\n\t\t\tPARSE_TEXT: 'Y',\n\t\t};\n\t}\n\n\tgetModelSaveMethod(): string\n\t{\n\t\treturn 'recent/setRecent';\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst extractor = new RecentDataExtractor({ rawData, ...this.getExtractorOptions() });\n\t\tconst extractedItems = extractor.getItems();\n\t\tconst {\n\t\t\tusers,\n\t\t\tchats,\n\t\t\tmessages,\n\t\t\tfiles,\n\t\t\trecentItems,\n\t\t} = extractedItems;\n\t\tLogger.warn('RecentService: prepared data for models', extractedItems);\n\n\t\tconst usersPromise = Core.getStore().dispatch('users/set', users);\n\t\tconst dialoguesPromise = Core.getStore().dispatch('chats/set', chats);\n\t\tconst messagesPromise = Core.getStore().dispatch('messages/store', messages);\n\t\tconst filesPromise = Core.getStore().dispatch('files/set', files);\n\t\tconst recentPromise = Core.getStore().dispatch(this.getModelSaveMethod(), recentItems);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, messagesPromise, filesPromise, recentPromise]);\n\t}\n\n\tgetLastMessageDate(items: Array): string\n\t{\n\t\tif (items.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn items.slice(-1)[0].message.date;\n\t}\n\n\tgetExtractorOptions(): { withBirthdays?: boolean }\n\t{\n\t\treturn {};\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type {\n\tChatLoadRestResult,\n\tRawChat,\n\tRawFile,\n\tRawUser,\n\tRawShortUser,\n\tRawMessage,\n\tRawCommentInfo,\n\tRawPin,\n\tRawReaction,\n} from '../types/rest';\n\nexport class ChatDataExtractor\n{\n\t#restResult: ChatLoadRestResult;\n\n\tconstructor(restResult: ChatLoadRestResult)\n\t{\n\t\tthis.#restResult = restResult;\n\t}\n\n\tgetChatId(): number\n\t{\n\t\treturn this.#restResult.chat.id;\n\t}\n\n\tgetDialogId(): string\n\t{\n\t\treturn this.#restResult.chat.dialogId;\n\t}\n\n\tisOpenlinesChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === ChatType.lines;\n\t}\n\n\tisCopilotChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === ChatType.copilot;\n\t}\n\n\tgetChats(): RawChat[]\n\t{\n\t\tconst mainChat = {\n\t\t\t...this.#restResult.chat,\n\t\t\thasPrevPage: this.#restResult.hasPrevPage,\n\t\t\thasNextPage: this.#restResult.hasNextPage,\n\t\t};\n\t\tconst chats = {\n\t\t\t[this.#restResult.chat.dialogId]: mainChat,\n\t\t};\n\t\tthis.#restResult.users.forEach((user) => {\n\t\t\tif (chats[user.id])\n\t\t\t{\n\t\t\t\tchats[user.id] = { ...chats[user.id], ...UserManager.getDialogForUser(user) };\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tchats[user.id] = UserManager.getDialogForUser(user);\n\t\t\t}\n\t\t});\n\n\t\treturn Object.values(chats);\n\t}\n\n\tgetFiles(): RawFile[]\n\t{\n\t\treturn this.#restResult.files ?? [];\n\t}\n\n\tgetUsers(): RawUser[]\n\t{\n\t\treturn this.#restResult.users ?? [];\n\t}\n\n\tgetAdditionalUsers(): RawShortUser[]\n\t{\n\t\treturn this.#restResult.usersShort ?? [];\n\t}\n\n\tgetMessages(): RawMessage[]\n\t{\n\t\treturn this.#restResult.messages ?? [];\n\t}\n\n\tgetCommentInfo(): RawCommentInfo[]\n\t{\n\t\treturn this.#restResult.commentInfo ?? [];\n\t}\n\n\tgetMessagesToStore(): RawMessage[]\n\t{\n\t\treturn this.#restResult.additionalMessages ?? [];\n\t}\n\n\tgetPinnedMessageIds(): number[]\n\t{\n\t\tconst pinnedMessageIds = [];\n\t\tconst pins: RawPin[] = this.#restResult.pins ?? [];\n\t\tpins.forEach((pin) => {\n\t\t\tpinnedMessageIds.push(pin.messageId);\n\t\t});\n\n\t\treturn pinnedMessageIds;\n\t}\n\n\tgetReactions(): RawReaction[]\n\t{\n\t\treturn this.#restResult.reactions ?? [];\n\t}\n}\n","import { ImModelMessage } from 'im.v2.model';\nimport { Type } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, Layout } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { MessageService } from 'im.v2.provider.service';\nimport { UserManager } from 'im.v2.lib.user';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport { ChatDataExtractor } from '../chat-data-extractor';\n\nimport type { ImModelChat } from 'im.v2.model';\nimport type { ChatLoadRestResult, CommentInfoRestResult } from '../../types/rest';\n\ntype UpdateModelsResult = {\n\tdialogId: string,\n\tchatId: number,\n};\n\nexport class LoadService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadChat(dialogId: string): Promise\n\t{\n\t\tconst params = { dialogId };\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatShallowLoad, params);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoad, params);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoadInContext, params);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\tif (!Utils.dialog.isExternalId(dialogId))\n\t\t{\n\t\t\treturn Promise.resolve(dialogId);\n\t\t}\n\n\t\treturn runAction(RestMethod.imV2ChatGetDialogId, {\n\t\t\tdata: { externalId: dialogId },\n\t\t})\n\t\t\t.then((result: {dialogId: string}) => {\n\t\t\t\treturn result.dialogId;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error preparing external id', error);\n\t\t\t});\n\t}\n\n\tasync loadComments(postId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tpostId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t\tautoJoin: true,\n\t\t\tcreateIfNotExists: true,\n\t\t};\n\n\t\tconst { chatId } = await this.#requestChat(RestMethod.imV2ChatLoad, params);\n\n\t\treturn this.#store.dispatch('messages/comments/set', {\n\t\t\tmessageId: postId,\n\t\t\tchatId,\n\t\t});\n\t}\n\n\tasync loadCommentInfo(channelDialogId: string): Promise\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](channelDialogId, true);\n\t\tconst messages = this.#store.getters['messages/getByChatId'](dialog.chatId);\n\t\tconst messageIds = messages.map((message: ImModelMessage) => message.id);\n\t\tconst { commentInfo, usersShort }: CommentInfoRestResult = await runAction(\n\t\t\tRestMethod.imV2ChatMessageCommentInfoList,\n\t\t\t{ data: { messageIds } },\n\t\t)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading comment info', error);\n\t\t\t});\n\n\t\tconst userManager = new UserManager();\n\n\t\tvoid this.#store.dispatch('messages/comments/set', commentInfo);\n\t\tvoid userManager.addUsersToModel(usersShort);\n\t}\n\n\tresetChat(dialogId: string): Promise\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId, true);\n\t\tthis.#store.dispatch('messages/clearChatCollection', { chatId: dialog.chatId });\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { inited: false },\n\t\t});\n\t}\n\n\tasync #requestChat(actionName: string, params: Object<string, any>): Promise<{ dialogId: string, chatId: number }>\n\t{\n\t\tconst { dialogId, messageId } = params;\n\t\tthis.#markDialogAsLoading(dialogId);\n\n\t\tconst actionResult = await runAction(actionName, { data: params })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading chat', error);\n\t\t\t\tthis.#markDialogAsNotLoaded(dialogId);\n\t\t\t\tthrow error;\n\t\t\t});\n\n\t\tif (this.#needLayoutRedirect(actionResult))\n\t\t{\n\t\t\treturn this.#redirectToLayout(actionResult, messageId);\n\t\t}\n\n\t\tconst {\n\t\t\tdialogId: loadedDialogId,\n\t\t\tchatId,\n\t\t} = await this.#updateModels(actionResult);\n\n\t\tif (this.#isDialogLoadedMarkNeeded(actionName))\n\t\t{\n\t\t\tawait this.#markDialogAsLoaded(loadedDialogId);\n\t\t}\n\n\t\treturn { dialogId: loadedDialogId, chatId };\n\t}\n\n\t#markDialogAsLoading(dialogId: string)\n\t{\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: true,\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsNotLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#isDialogLoadedMarkNeeded(actionName: string): boolean\n\t{\n\t\treturn actionName !== RestMethod.imV2ChatShallowLoad;\n\t}\n\n\tasync #updateModels(restResult: ChatLoadRestResult): Promise<UpdateModelsResult>\n\t{\n\t\tconst extractor = new ChatDataExtractor(restResult);\n\n\t\tconst chatsPromise = this.#store.dispatch('chats/set', extractor.getChats());\n\t\tconst filesPromise = this.#store.dispatch('files/set', extractor.getFiles());\n\n\t\tconst userManager = new UserManager();\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#store.dispatch('users/set', extractor.getUsers()),\n\t\t\tuserManager.addUsersToModel(extractor.getAdditionalUsers()),\n\t\t]);\n\t\tconst messagesPromise = Promise.all([\n\t\t\tthis.#store.dispatch('messages/setChatCollection', {\n\t\t\t\tmessages: extractor.getMessages(),\n\t\t\t\tclearCollection: true,\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/store', extractor.getMessagesToStore()),\n\t\t\tthis.#store.dispatch('messages/pin/setPinned', {\n\t\t\t\tchatId: extractor.getChatId(),\n\t\t\t\tpinnedMessages: extractor.getPinnedMessageIds(),\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/reactions/set', extractor.getReactions()),\n\t\t\tthis.#store.dispatch('messages/comments/set', extractor.getCommentInfo()),\n\t\t]);\n\n\t\tawait Promise.all([\n\t\t\tchatsPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\tmessagesPromise,\n\t\t]);\n\n\t\treturn { dialogId: extractor.getDialogId(), chatId: extractor.getChatId() };\n\t}\n\n\t#needLayoutRedirect(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\treturn this.#needRedirectToCopilotLayout(actionResult) || this.#needRedirectToOpenLinesLayout(actionResult);\n\t}\n\n\t#redirectToLayout(actionResult: ChatLoadRestResult, contextId: number = 0): Promise\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\t\tLayoutManager.getInstance().setLastOpenedElement(Layout.chat.name, '');\n\n\t\tif (this.#needRedirectToCopilotLayout(actionResult))\n\t\t{\n\t\t\treturn Messenger.openCopilot(extractor.getDialogId(), contextId);\n\t\t}\n\n\t\tif (this.#needRedirectToOpenLinesLayout(actionResult))\n\t\t{\n\t\t\treturn Messenger.openLines(extractor.getDialogId());\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t#needRedirectToCopilotLayout(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\t\tconst currentLayoutName = LayoutManager.getInstance().getLayout().name;\n\n\t\treturn extractor.isCopilotChat() && currentLayoutName !== Layout.copilot.name;\n\t}\n\n\t#needRedirectToOpenLinesLayout(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\n\t\treturn extractor.isOpenlinesChat() && Type.isStringFilled(extractor.getDialogId());\n\t}\n}\n","import { Type } from 'main.core';\nimport { RestClient } from 'rest.client';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport type { ChatConfig, RestChatConfig } from '../../types/chat';\n\nconst PRIVATE_CHAT = 'CHAT';\nconst OPEN_CHAT = 'OPEN';\n\nexport class CreateService\n{\n\t#restClient: RestClient;\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync createChat(chatConfig: ChatConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\tLogger.warn('ChatService: createChat', chatConfig);\n\n\t\tconst preparedFields = await this.#prepareFields(chatConfig);\n\n\t\tconst createResult: RestResult = await this.#restClient.callMethod(RestMethod.imV2ChatAdd, {\n\t\t\tfields: preparedFields,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: createChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\n\t\tconst { chatId: newChatId } = createResult.data();\n\n\t\tLogger.warn('ChatService: createChat result', newChatId);\n\t\tconst newDialogId = `chat${newChatId}`;\n\t\tthis.#addChatToModel(newDialogId, preparedFields);\n\n\t\treturn { newDialogId, newChatId };\n\t}\n\n\tasync #prepareFields(chatConfig: ChatConfig): RestChatConfig\n\t{\n\t\tconst preparedConfig = { ...chatConfig };\n\t\tif (preparedConfig.avatar)\n\t\t{\n\t\t\tpreparedConfig.avatar = await Utils.file.getBase64(chatConfig.avatar);\n\t\t}\n\n\t\tpreparedConfig.managers = preparedConfig.managers ?? [];\n\t\tpreparedConfig.members = preparedConfig.members ?? [];\n\t\tconst allMembers = [...preparedConfig.members, ...preparedConfig.managers];\n\t\tif (preparedConfig.ownerId)\n\t\t{\n\t\t\tallMembers.push(preparedConfig.ownerId);\n\t\t}\n\t\tpreparedConfig.members = [...new Set(allMembers)];\n\n\t\tconst result = {\n\t\t\ttype: preparedConfig.type?.toUpperCase(),\n\t\t\tentityType: preparedConfig.entityType?.toUpperCase(),\n\t\t\ttitle: preparedConfig.title,\n\t\t\tavatar: preparedConfig.avatar,\n\t\t\tdescription: preparedConfig.description,\n\t\t\tusers: preparedConfig.members,\n\t\t\tmanagers: preparedConfig.managers,\n\t\t\townerId: preparedConfig.ownerId,\n\t\t\tsearchable: preparedConfig.isAvailableInSearch ? 'Y' : 'N',\n\t\t\tmanageUsersAdd: preparedConfig.manageUsersAdd,\n\t\t\tmanageUsersDelete: preparedConfig.manageUsersDelete,\n\t\t\tmanageUi: preparedConfig.manageUi,\n\t\t\tmanageSettings: preparedConfig.manageSettings,\n\t\t\tmanageMessages: preparedConfig.manageMessages,\n\t\t\tconferencePassword: preparedConfig.conferencePassword,\n\t\t};\n\n\t\tObject.entries(result).forEach(([key, value]) => {\n\t\t\tif (Type.isUndefined(value))\n\t\t\t{\n\t\t\t\tdelete result[key];\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t#addChatToModel(newDialogId: string, chatConfig: RestChatConfig)\n\t{\n\t\tlet chatType = chatConfig.searchable === 'Y' ? OPEN_CHAT : PRIVATE_CHAT;\n\t\tif (Type.isStringFilled(chatConfig.entityType))\n\t\t{\n\t\t\tchatType = chatConfig.entityType.toLowerCase();\n\t\t}\n\n\t\tif (Type.isStringFilled(chatConfig.type))\n\t\t{\n\t\t\tchatType = chatConfig.type.toLowerCase();\n\t\t}\n\n\t\tthis.#store.dispatch('chats/set', {\n\t\t\tdialogId: newDialogId,\n\t\t\ttype: chatType.toLowerCase(),\n\t\t\tname: chatConfig.title,\n\t\t\tuserCounter: chatConfig.users.length,\n\t\t\trole: UserRole.owner,\n\t\t\tpermissions: {\n\t\t\t\tmanageUi: chatConfig.manageUi,\n\t\t\t\tmanageSettings: chatConfig.manageSettings,\n\t\t\t\tmanageUsersAdd: chatConfig.manageUsersAdd,\n\t\t\t\tmanageUsersDelete: chatConfig.manageUsersDelete,\n\t\t\t\tmanageMessages: chatConfig.manageMessages,\n\t\t\t},\n\t\t});\n\t}\n}\n","import { isResizableImage, resizeImage } from 'ui.uploader.core';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Utils } from 'im.v2.lib.utils';\n\nconst MAX_AVATAR_SIZE = 180;\n\nexport class UpdateService\n{\n\tasync prepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\tif (!isResizableImage(avatarFile))\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\treturn Promise.reject(new Error('UpdateService: prepareAvatar: incorrect image'));\n\t\t}\n\n\t\tconst { preview: resizedAvatar } = await resizeImage(avatarFile, {\n\t\t\twidth: MAX_AVATAR_SIZE,\n\t\t\theight: MAX_AVATAR_SIZE,\n\t\t});\n\n\t\treturn resizedAvatar;\n\t}\n\n\tasync changeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\tLogger.warn('ChatService: changeAvatar', chatId, avatarFile);\n\t\tconst avatarInBase64 = await Utils.file.getBase64(avatarFile);\n\n\t\treturn runAction(RestMethod.imV2ChatUpdate, {\n\t\t\tdata: {\n\t\t\t\tid: chatId,\n\t\t\t\tfields: { avatar: avatarInBase64 },\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: changeAvatar error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\t}\n}\n","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nexport class RenameService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\tLogger.warn('ChatService: renameChat', dialogId, newName);\n\t\tif (newName === '')\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst dialog = this.#store.getters['chats/get'](dialogId);\n\t\tconst oldName = dialog.name;\n\n\t\tthis.#updateChatTitleInModel(dialogId, newName);\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUpdateTitle, {\n\t\t\tdialog_id: dialogId,\n\t\t\ttitle: newName\n\t\t}).then(result => {\n\t\t\tLogger.warn('ChatService: renameChat result', result.data());\n\t\t\treturn Promise.resolve();\n\t\t}).catch(() => {\n\t\t\tthis.#updateChatTitleInModel(dialogId, oldName);\n\n\t\t\tthrow new Error('Chat rename error');\n\t\t});\n\t}\n\n\t#updateChatTitleInModel(dialogId: string, title: string)\n\t{\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tname: title\n\t\t\t}\n\t\t});\n\t}\n}","import {Runtime} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nimport {ChatService} from '../../chat';\n\nexport class MuteService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#sendMuteRequestDebounced: Function;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\n\t\tthis.#sendMuteRequestDebounced = Runtime.debounce(this.#sendMuteRequest, ChatService.DEBOUNCE_TIME);\n\t}\n\n\tmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: muteChat', dialogId);\n\t\tthis.#store.dispatch('chats/mute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'Y'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: unmuteChat', dialogId);\n\t\tthis.#store.dispatch('chats/unmute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'N'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\t#sendMuteRequest(queryParams: {dialog_id: string, action: 'Y' | 'N'}): Promise\n\t{\n\t\tconst {dialog_id: dialogId, action} = queryParams;\n\t\treturn this.#restClient.callMethod(RestMethod.imChatMute, queryParams).catch(error => {\n\t\t\tconst actionText = action === 'Y' ? 'muting' : 'unmuting';\n\t\t\tconsole.error(`Im.RecentList: error ${actionText} chat`, error);\n\t\t\tconst actionType = action === 'Y' ? 'chats/unmute' : 'chats/mute';\n\t\t\tthis.#store.dispatch(actionType, {dialogId});\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: pinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'Y'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error pinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: false});\n\t\t});\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: unpinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'N'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error unpinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: true});\n\t\t});\n\t}\n}","import { ImModelCommentInfo } from 'im.v2.model';\nimport { Type } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, ChatType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UuidManager } from 'im.v2.lib.uuid';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat, ImModelRecentItem } from 'im.v2.model';\n\ntype ReadResult = {\n\tchatId: number,\n\tcounter: number,\n\tlastId: number,\n\tviewedMessages: number[]\n};\n\nconst READ_TIMEOUT = 300;\n\nexport class ReadService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#messagesToRead: {[chatId: string]: Set<number>} = {};\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\treadAll(): Promise\n\t{\n\t\tLogger.warn('ReadService: readAll');\n\t\tthis.#store.dispatch('chats/clearCounters');\n\t\tthis.#store.dispatch('recent/clearUnread');\n\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatReadAll)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: readAll error', error);\n\t\t\t});\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: readDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { counter: 0 },\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading chat', error);\n\t\t\t});\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: unreadDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatUnread, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error setting chat as unread', error);\n\t\t\t\tthis.#store.dispatch('recent/unread', { id: dialogId, action: false });\n\t\t\t});\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tif (!this.#messagesToRead[chatId])\n\t\t{\n\t\t\tthis.#messagesToRead[chatId] = new Set();\n\t\t}\n\t\tthis.#messagesToRead[chatId].add(messageId);\n\n\t\tclearTimeout(this.readTimeout);\n\t\tthis.readTimeout = setTimeout(() => {\n\t\t\tObject.entries(this.#messagesToRead).forEach(([rawChatId, messageIds]) => {\n\t\t\t\tthis.#readMessagesForChat(rawChatId, messageIds);\n\t\t\t});\n\t\t}, READ_TIMEOUT);\n\t}\n\n\tasync #readMessagesForChat(rawChatId: string, messageIds: Set<number>)\n\t{\n\t\tconst queueChatId = Number.parseInt(rawChatId, 10);\n\t\tLogger.warn('ReadService: readMessages', messageIds);\n\t\tif (messageIds.size === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst copiedMessageIds = [...messageIds];\n\t\tdelete this.#messagesToRead[queueChatId];\n\n\t\tconst readMessagesCount = await this.#readMessageOnClient(queueChatId, copiedMessageIds);\n\n\t\tLogger.warn('ReadService: readMessage, need to reduce counter by', readMessagesCount);\n\t\tawait this.#decreaseChatCounter(queueChatId, readMessagesCount);\n\n\t\tconst readResult = await this.#readMessageOnServer(queueChatId, copiedMessageIds)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading message', error);\n\t\t\t});\n\n\t\tthis.#checkChatCounter(readResult);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: clear dialog mark', dialogId);\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](dialogId);\n\t\tif (dialog.markedId === 0 && !recentItem?.unread)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: 0,\n\t\t\t},\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {\n\t\t\tdialogId,\n\t\t\tonlyRecent: 'Y',\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ReadService: error clearing dialog mark', error);\n\t\t});\n\t}\n\n\t#readMessageOnClient(chatId: number, messageIds: number[]): Promise<number>\n\t{\n\t\tconst maxMessageId = Math.max(...messageIds);\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (maxMessageId > dialog.lastReadId)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\t\tfields: {\n\t\t\t\t\tlastId: maxMessageId,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/readMessages', {\n\t\t\tchatId,\n\t\t\tmessageIds,\n\t\t});\n\t}\n\n\t#decreaseCommentCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\tconst chat = this.#getDialogByChatId(chatId);\n\t\tlet newCounter = chat.counter - readMessagesCount;\n\t\tif (newCounter < 0)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\n\t\tconst counters = {\n\t\t\t[chat.parentChatId]: {\n\t\t\t\t[chatId]: newCounter,\n\t\t\t},\n\t\t};\n\n\t\treturn Core.getStore().dispatch('counters/setCommentCounters', counters);\n\t}\n\n\t#decreaseChatCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\tconst chat = this.#getDialogByChatId(chatId);\n\t\tif (chat.type === ChatType.comment)\n\t\t{\n\t\t\treturn this.#decreaseCommentCounter(chatId, readMessagesCount);\n\t\t}\n\n\t\tlet newCounter = chat.counter - readMessagesCount;\n\t\tif (newCounter < 0)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\tfields: { counter: newCounter },\n\t\t});\n\t}\n\n\t#readMessageOnServer(chatId: number, messageIds: number[]): Promise\n\t{\n\t\tLogger.warn('ReadService: readMessages on server', messageIds);\n\n\t\treturn runAction(RestMethod.imV2ChatMessageRead, {\n\t\t\tdata: {\n\t\t\t\tchatId,\n\t\t\t\tids: messageIds,\n\t\t\t\tactionUuid: UuidManager.getInstance().getActionUuid(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#checkChatCounter(readResult: ReadResult)\n\t{\n\t\tconst { chatId, counter } = readResult;\n\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (dialog.counter > counter)\n\t\t{\n\t\t\tLogger.warn('ReadService: counter from server is lower than local one', dialog.counter, counter);\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: { counter },\n\t\t\t});\n\t\t}\n\t}\n\n\t#getDialogIdByChatId(chatId: number): number\n\t{\n\t\tconst dialog = this.#store.getters['chats/getByChatId'](chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn dialog.dialogId;\n\t}\n\n\t#getDialogByChatId(chatId: number): ?ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId);\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nexport class UserService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tchat_id: addConfig.chatId,\n\t\t\tusers: addConfig.members,\n\t\t\thide_history: !addConfig.showHistory,\n\t\t};\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUserAdd, queryParams);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: kick user ${userId} from chat ${dialogId}`);\n\t\tconst queryParams = { dialogId, userId };\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatDeleteUser, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error kicking user from chat', error);\n\t\t});\n\t}\n\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.kickUserFromChat(dialogId, Core.getUserId());\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: false,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('recent/delete', {\n\t\t\tid: dialogId,\n\t\t});\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tLogger.warn(`UserService: join chat ${dialogId}`);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\trole: UserRole.member,\n\t\t\t},\n\t\t});\n\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatJoin, {\n\t\t\tdialogId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error joining chat', error);\n\t\t});\n\t}\n\n\taddManager(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: add manager ${userId} to ${dialogId}`);\n\t\tconst { managerList }: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tif (managerList.includes(userId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tconst newManagerList = [...managerList, userId];\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { managerList: newManagerList },\n\t\t});\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tdialogId,\n\t\t\t\tuserIds: [userId],\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatAddManagers, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: add manager error', error);\n\t\t\t});\n\t}\n\n\tremoveManager(dialogId: string, userId: number): void\n\t{\n\t\tLogger.warn(`UserService: remove manager ${userId} from ${dialogId}`);\n\t\tconst { managerList }: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tif (!managerList.includes(userId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tconst newManagerList = managerList.filter((managerId) => managerId !== userId);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { managerList: newManagerList },\n\t\t});\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tdialogId,\n\t\t\t\tuserIds: [userId],\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatDeleteManagers, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: remove manager error', error);\n\t\t\t});\n\t}\n}\n","import { LoadService } from './classes/chat/load';\nimport { CreateService } from './classes/chat/create';\nimport { UpdateService } from './classes/chat/update';\nimport { RenameService } from './classes/chat/rename';\nimport { MuteService } from './classes/chat/mute';\nimport { PinService } from './classes/chat/pin';\nimport { ReadService } from './classes/chat/read';\nimport { UserService } from './classes/chat/user';\n\nexport class ChatService\n{\n\tstatic DEBOUNCE_TIME = 500;\n\n\t#loadService: LoadService;\n\t#createService: CreateService;\n\t#updateService: UpdateService;\n\t#renameService: RenameService;\n\t#muteService: MuteService;\n\t#pinService: PinService;\n\t#readService: ReadService;\n\t#userService: UserService;\n\n\tconstructor()\n\t{\n\t\tthis.#initServices();\n\t}\n\n\t// region 'load'\n\tloadChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChat(dialogId);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithMessages(dialogId);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithContext(dialogId, messageId);\n\t}\n\n\tloadComments(postId: number): Promise\n\t{\n\t\treturn this.#loadService.loadComments(postId);\n\t}\n\n\tloadCommentInfo(channelDialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadCommentInfo(channelDialogId);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\treturn this.#loadService.prepareDialogId(dialogId);\n\t}\n\n\tresetChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.resetChat(dialogId);\n\t}\n\t// endregion 'load'\n\n\t// region 'create'\n\tcreateChat(chatConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\treturn this.#createService.createChat(chatConfig);\n\t}\n\t// endregion 'create'\n\n\t// region 'update'\n\tprepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\treturn this.#updateService.prepareAvatar(avatarFile);\n\t}\n\n\tchangeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\treturn this.#updateService.changeAvatar(chatId, avatarFile);\n\t}\n\t// endregion 'update'\n\n\t// region 'rename'\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\treturn this.#renameService.renameChat(dialogId, newName);\n\t}\n\t// endregion 'rename'\n\n\t// region 'mute'\n\tmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.muteChat(dialogId);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.unmuteChat(dialogId);\n\t}\n\t// endregion 'mute'\n\n\t// region 'pin'\n\tpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.pinChat(dialogId);\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.unpinChat(dialogId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'read'\n\treadAll(): Promise\n\t{\n\t\treturn this.#readService.readAll();\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.readDialog(dialogId);\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.unreadDialog(dialogId);\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#readService.readMessage(chatId, messageId);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tthis.#readService.clearDialogMark(dialogId);\n\t}\n\t// endregion 'read'\n\n\t// region 'user'\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.#userService.leaveChat(dialogId);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.kickUserFromChat(dialogId, userId);\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\treturn this.#userService.addToChat(addConfig);\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tthis.#userService.joinChat(dialogId);\n\t}\n\n\taddManager(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.addManager(dialogId, userId);\n\t}\n\n\tremoveManager(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.removeManager(dialogId, userId);\n\t}\n\t// endregion 'user\n\n\t#initServices()\n\t{\n\t\tthis.#loadService = new LoadService();\n\t\tthis.#createService = new CreateService();\n\t\tthis.#updateService = new UpdateService();\n\t\tthis.#renameService = new RenameService();\n\t\tthis.#muteService = new MuteService();\n\t\tthis.#pinService = new PinService();\n\t\tthis.#readService = new ReadService();\n\t\tthis.#userService = new UserService();\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { callBatch, runAction } from 'im.v2.lib.rest';\nimport { UserManager } from 'im.v2.lib.user';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport type { PaginationRestResult } from '../../types/message';\nimport type { RawMessage, RawCommentInfo } from '../../types/rest';\n\nexport class LoadService\n{\n\tstatic MESSAGE_REQUEST_LIMIT = 25;\n\n\t#store: Store;\n\t#chatId: number;\n\t#userManager: UserManager;\n\n\t#preparedHistoryMessages: RawMessage[] = [];\n\t#preparedUnreadMessages: RawMessage[] = [];\n\t#isLoading: boolean = false;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#userManager = new UserManager();\n\n\t\tthis.#chatId = chatId;\n\t}\n\n\tloadUnread(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadUnread');\n\t\tconst lastUnreadMessageId = this.#store.getters['messages/getLastId'](this.#chatId);\n\t\tif (!lastUnreadMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastUnreadMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastUnreadMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'ASC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadUnread result', result);\n\t\t\tthis.#preparedUnreadMessages = result.messages;\n\n\t\t\treturn this.#updateModels(result);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadUnread error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasPrevPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadHistory');\n\t\tconst lastHistoryMessageId = this.#store.getters['messages/getFirstId'](this.#chatId);\n\t\tif (!lastHistoryMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastHistoryMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastHistoryMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'DESC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadHistory result', result);\n\t\t\tthis.#preparedHistoryMessages = result.messages;\n\t\t\tconst hasPrevPage = result.hasNextPage;\n\t\t\tconst rawData = { ...result, hasPrevPage, hasNextPage: null };\n\n\t\t\treturn this.#updateModels(rawData);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#preparedHistoryMessages.length > 0;\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedHistoryMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedHistoryMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedHistoryMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#preparedUnreadMessages.length > 0;\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedUnreadMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedUnreadMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedUnreadMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tasync loadFirstPage(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadFirstPage for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t\torder: { id: 'ASC' },\n\t\t\t},\n\t\t};\n\t\tconst restResult = await runAction(RestMethod.imV2ChatMessageTail, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadFirstPage error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tLogger.warn('MessageService: loadFirstPage result', restResult);\n\n\t\tawait this.#handleLoadedMessages(restResult);\n\t\tawait this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage: false,\n\t\t\t\thasNextPage: restResult.hasNextPage,\n\t\t\t},\n\t\t});\n\t\tthis.#isLoading = false;\n\t}\n\n\tloadContext(messageId: number): Promise\n\t{\n\t\tconst query = {\n\t\t\t[RestMethod.imV2ChatMessageGetContext]: {\n\t\t\t\tid: messageId,\n\t\t\t\trange: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t\t[RestMethod.imV2ChatMessageRead]: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tids: [messageId],\n\t\t\t},\n\t\t};\n\t\tLogger.warn('MessageService: loadContext for: ', messageId);\n\t\tthis.#isLoading = true;\n\n\t\treturn callBatch(query)\n\t\t\t.then((data) => {\n\t\t\t\tLogger.warn('MessageService: loadContext result', data);\n\n\t\t\t\treturn this.#handleLoadedMessages(data[RestMethod.imV2ChatMessageGetContext]);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadContext error:', error);\n\t\t\t\tthrow new Error(error);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#isLoading = false;\n\t\t\t});\n\t}\n\n\tasync loadContextByChatId(chatId: number): Promise<number>\n\t{\n\t\tconst queryParams = {\n\t\t\tdata: { commentChatId: chatId },\n\t\t};\n\t\tconst result = await runAction(RestMethod.imV2ChatMessageGetContext, queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\t});\n\n\t\tconst commentInfo: RawCommentInfo[] = result.commentInfo;\n\t\tconst targetCommentInfo: ?RawCommentInfo = commentInfo.find((item) => {\n\t\t\treturn item.chatId === chatId;\n\t\t});\n\t\tconst targetMessageId = targetCommentInfo?.messageId;\n\n\t\tLogger.warn('MessageService: loadContextByChatId result', result);\n\t\tvoid this.#handleLoadedMessages(result);\n\n\t\treturn targetMessageId;\n\t}\n\n\treloadMessageList(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadChatOnExit for: ', this.#chatId);\n\t\tlet targetMessageId = 0;\n\t\tif (this.#getDialog().chatId <= 0)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (this.#getDialog().markedId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().markedId;\n\t\t}\n\t\telse if (this.#getDialog().savedPositionMessageId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().savedPositionMessageId;\n\t\t}\n\n\t\tconst wasInitedBefore = this.#getDialog().inited;\n\t\tthis.#setDialogInited(false);\n\t\tif (targetMessageId)\n\t\t{\n\t\t\treturn this.loadContext(targetMessageId)\n\t\t\t\t.catch(() => {})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t\t});\n\t\t}\n\n\t\treturn this.loadInitialMessages()\n\t\t\t.catch(() => {})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t});\n\t}\n\n\tasync loadInitialMessages(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadInitialMessages for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t};\n\t\tconst restResult = await runAction(RestMethod.imV2ChatMessageList, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadInitialMessages error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages result', restResult);\n\t\trestResult.messages = this.#prepareInitialMessages(restResult.messages);\n\n\t\tawait this.#handleLoadedMessages(restResult);\n\t\tthis.#isLoading = false;\n\t}\n\n\t#prepareInitialMessages(rawMessages: RawMessage[]): RawMessage[]\n\t{\n\t\tif (rawMessages.length === 0)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst lastMessageId = this.#getDialog().lastMessageId;\n\t\tconst newMaxId = Math.max(...rawMessages.map((message) => message.id));\n\t\tif (newMaxId >= lastMessageId)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst messagesCollection: ImModelMessage[] = this.#store.getters['messages/getByChatId'](this.#chatId);\n\t\tconst additionalMessages = messagesCollection.filter((message) => {\n\t\t\treturn message.id > newMaxId;\n\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages: local id is higher than server one', additionalMessages);\n\n\t\treturn [...rawMessages, ...additionalMessages];\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#isLoading;\n\t}\n\n\t#handleLoadedMessages(restResult): Promise\n\t{\n\t\tconst { messages } = restResult;\n\t\tconst messagesPromise = this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages,\n\t\t\tclearCollection: true,\n\t\t});\n\t\tconst updateModelsPromise = this.#updateModels(restResult);\n\n\t\treturn Promise.all([messagesPromise, updateModelsPromise]);\n\t}\n\n\t#updateModels(rawData: PaginationRestResult): Promise\n\t{\n\t\tconst {\n\t\t\tfiles,\n\t\t\tusers,\n\t\t\tusersShort,\n\t\t\treactions,\n\t\t\thasPrevPage,\n\t\t\thasNextPage,\n\t\t\tadditionalMessages,\n\t\t\tcommentInfo,\n\t\t} = rawData;\n\n\t\tconst dialogPromise = this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage,\n\t\t\t\thasNextPage,\n\t\t\t},\n\t\t});\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#userManager.addUsersToModel(usersShort),\n\t\t]);\n\t\tconst filesPromise = this.#store.dispatch('files/set', files);\n\t\tconst reactionsPromise = this.#store.dispatch('messages/reactions/set', reactions);\n\t\tconst additionalMessagesPromise = this.#store.dispatch('messages/store', additionalMessages);\n\t\tconst commentInfoPromise = this.#store.dispatch('messages/comments/set', commentInfo);\n\n\t\treturn Promise.all([\n\t\t\tdialogPromise, filesPromise, usersPromise, reactionsPromise, additionalMessagesPromise, commentInfoPromise,\n\t\t]);\n\t}\n\n\t#setDialogInited(flag: boolean, wasInitedBefore: boolean = true)\n\t{\n\t\tconst fields = {\n\t\t\tinited: flag,\n\t\t\tloading: !flag,\n\t\t};\n\t\tif (flag === true && !wasInitedBefore)\n\t\t{\n\t\t\tdelete fields.inited;\n\t\t}\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields,\n\t\t});\n\t}\n\n\t#getDialog(): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](this.#chatId);\n\t}\n}\n","import {EventEmitter} from 'main.core.events';\nimport {RestClient} from 'rest.client';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {EventType, RestMethod} from 'im.v2.const';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: pin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\t// EventEmitter.emit(EventType.dialog.scrollToBottom, {chatId});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessagePin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error pinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: unpin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageUnpin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error unpinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n}","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelMessage } from 'im.v2.model';\n\nexport class EditService\n{\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tLogger.warn('MessageService: editMessageText', messageId, text);\n\t\tconst message = this.#getMessage(messageId);\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#updateMessageModel(messageId, text);\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tid: messageId,\n\t\t\t\tfields: { message: text },\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatMessageUpdate, payload)\n\t\t\t.catch((error) => {\n\t\t\t\tLogger.error('MessageService: editMessageText error:', error);\n\t\t\t});\n\t}\n\n\t#updateMessageModel(messageId: number, text: string): void\n\t{\n\t\tconst message = this.#getMessage(messageId);\n\t\tconst isEdited = message.viewedByOthers;\n\n\t\tCore.getStore().dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\ttext,\n\t\t\t\tisEdited,\n\t\t\t},\n\t\t});\n\t}\n\n\t#getMessage(messageId: number): ImModelMessage | null\n\t{\n\t\treturn Core.getStore().getters['messages/getById'](messageId);\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { RestMethod, EventType, ChatType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\n\nimport type { ImModelChat, ImModelMessage, ImModelRecentItem } from 'im.v2.model';\n\nexport class DeleteService\n{\n\t#store: Store;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync deleteMessage(messageId: number | string)\n\t{\n\t\tLogger.warn('MessageService: deleteMessage', messageId);\n\n\t\tif (Utils.text.isUuidV4(messageId))\n\t\t{\n\t\t\tthis.#deleteTemporaryMessage(messageId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#sendDeleteEvent(messageId);\n\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tif (this.#canDeleteCompletely(message))\n\t\t{\n\t\t\tvoid this.#completeMessageDelete(message);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.#shallowMessageDelete(message);\n\t}\n\n\t#shallowMessageDelete(message: ImModelMessage): Promise\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: message.id,\n\t\t\tfields: {\n\t\t\t\ttext: '',\n\t\t\t\tisDeleted: true,\n\t\t\t\tfiles: [],\n\t\t\t\tattach: [],\n\t\t\t\treplyId: 0,\n\t\t\t},\n\t\t});\n\n\t\treturn this.#deleteMessageOnServer(message.id);\n\t}\n\n\t#canDeleteCompletely(message: ImModelMessage): boolean\n\t{\n\t\tconst alwaysCompleteDeleteChats = [ChatType.channel, ChatType.openChannel];\n\t\tconst neverCompleteDeleteChats = [ChatType.comment];\n\n\t\tconst chat = this.#getChat();\n\t\tif (alwaysCompleteDeleteChats.includes(chat.type))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tif (neverCompleteDeleteChats.includes(chat.type))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !message.viewedByOthers;\n\t}\n\n\t#completeMessageDelete(message: ImModelMessage): Promise\n\t{\n\t\tconst chat = this.#getChat();\n\t\tif (message.id === chat.lastMessageId)\n\t\t{\n\t\t\tconst newLastId = this.#getPreviousMessageId(message.id);\n\t\t\tthis.#updateRecentForCompleteDelete(newLastId);\n\t\t\tthis.#updateChatForCompleteDelete(newLastId);\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: message.id,\n\t\t});\n\n\t\treturn this.#deleteMessageOnServer(message.id);\n\t}\n\n\t#updateRecentForCompleteDelete(newLastId: number)\n\t{\n\t\tconst chat = this.#getChat();\n\t\tif (!newLastId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/delete', { id: chat.dialogId });\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: chat.dialogId,\n\t\t\tfields: { messageId: newLastId },\n\t\t});\n\t}\n\n\t#updateChatForCompleteDelete(newLastId)\n\t{\n\t\tconst chat = this.#getChat();\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: chat.dialogId,\n\t\t\tfields: {\n\t\t\t\tlastMessageId: newLastId,\n\t\t\t\tlastId: newLastId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('chats/clearLastMessageViews', {\n\t\t\tdialogId: chat.dialogId,\n\t\t});\n\t}\n\n\t#deleteMessageOnServer(messageId: number): Promise\n\t{\n\t\treturn runAction(RestMethod.imV2ChatMessageDelete, {\n\t\t\tdata: { id: messageId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: deleteMessage error:', error);\n\t\t});\n\t}\n\n\t#deleteTemporaryMessage(messageId: string)\n\t{\n\t\tconst chat = this.#getChat();\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](chat.dialogId);\n\t\tif (recentItem.messageId === messageId)\n\t\t{\n\t\t\tconst newLastId = this.#getPreviousMessageId(messageId);\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: chat.dialogId,\n\t\t\t\tfields: { messageId: newLastId },\n\t\t\t});\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: messageId,\n\t\t});\n\t}\n\n\t#getPreviousMessageId(messageId: number): number\n\t{\n\t\tconst previousMessage: ImModelMessage = this.#store.getters['messages/getPreviousMessage']({\n\t\t\tmessageId,\n\t\t\tchatId: this.#chatId,\n\t\t});\n\n\t\treturn previousMessage?.id ?? 0;\n\t}\n\n\t#sendDeleteEvent(messageId: number)\n\t{\n\t\tEventEmitter.emit(EventType.dialog.onMessageDeleted, { messageId });\n\t}\n\n\t#getChat(): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](this.#chatId);\n\t}\n}\n","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class MarkService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tmarkMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: markMessage', messageId);\n\t\tconst {dialogId} = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: messageId\n\t\t\t}\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageMark, {\n\t\t\tdialogId,\n\t\t\tid: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error marking message', error);\n\t\t});\n\t}\n}","import {Loc} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport 'ui.notification';\n\nexport class FavoriteService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: addMessageToFavorite', messageId);\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteAdd, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error adding message to favorite', error);\n\t\t});\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: Loc.getMessage('IM_MESSAGE_SERVICE_ADD_MESSAGE_TO_FAVORITE_SUCCESS')\n\t\t});\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: removeMessageFromFavorite', messageId);\n\t\tthis.#store.dispatch('sidebar/favorites/deleteByMessageId', {\n\t\t\tchatId: this.#chatId,\n\t\t\tmessageId: messageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteDelete, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error removing message from favorite', error);\n\t\t});\n\t}\n}","import { LoadService } from './classes/message/load';\nimport { PinService } from './classes/message/pin';\nimport { EditService } from './classes/message/edit';\nimport { DeleteService } from './classes/message/delete';\nimport { MarkService } from './classes/message/mark';\nimport { FavoriteService } from './classes/message/favorite';\n\nexport class MessageService\n{\n\t#loadService: LoadService;\n\t#pinService: PinService;\n\t#editService: EditService;\n\t#deleteService: DeleteService;\n\t#markService: MarkService;\n\t#favoriteService: FavoriteService;\n\n\tstatic getMessageRequestLimit(): number\n\t{\n\t\treturn LoadService.MESSAGE_REQUEST_LIMIT;\n\t}\n\n\tconstructor(params: {chatId: number})\n\t{\n\t\tconst { chatId } = params;\n\t\tthis.#initServices(chatId);\n\t}\n\n\t#initServices(chatId: number)\n\t{\n\t\tthis.#loadService = new LoadService(chatId);\n\t\tthis.#editService = new EditService();\n\t\tthis.#deleteService = new DeleteService(chatId);\n\t\tthis.#pinService = new PinService();\n\t\tthis.#markService = new MarkService(chatId);\n\t\tthis.#favoriteService = new FavoriteService(chatId);\n\t}\n\n\t// region 'pagination'\n\tloadUnread(): Promise\n\t{\n\t\treturn this.#loadService.loadUnread();\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\treturn this.#loadService.loadHistory();\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedHistoryMessages();\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedHistoryMessages();\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedUnreadMessages();\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedUnreadMessages();\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#loadService.isLoading();\n\t}\n\t// endregion 'pagination'\n\n\t// region 'context'\n\tloadContext(messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadContext(messageId);\n\t}\n\n\tloadContextByChatId(chatId: number): Promise<number>\n\t{\n\t\treturn this.#loadService.loadContextByChatId(chatId);\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\treturn this.#loadService.loadFirstPage();\n\t}\n\t// endregion 'context\n\n\t// region 'reload messages'\n\treloadMessageList(): Promise\n\t{\n\t\treturn this.#loadService.reloadMessageList();\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\treturn this.#loadService.loadInitialMessages();\n\t}\n\t// endregion 'reload messages'\n\n\t// region 'pin'\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.pinMessage(chatId, messageId);\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.unpinMessage(chatId, messageId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'mark'\n\tmarkMessage(messageId: number)\n\t{\n\t\tthis.#markService.markMessage(messageId);\n\t}\n\t// endregion 'mark'\n\n\t// region 'favorite'\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.addMessageToFavorite(messageId);\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.removeMessageFromFavorite(messageId);\n\t}\n\t// endregion 'favorite'\n\n\t// region 'edit'\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tthis.#editService.editMessageText(messageId, text);\n\t}\n\t// endregion 'edit'\n\n\t// region 'delete'\n\tdeleteMessage(messageId: number | string): Promise\n\t{\n\t\tthis.#deleteService.deleteMessage(messageId);\n\t}\n\t// endregion 'delete'\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction, type RunActionError } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\nimport { EventType, RestMethod, DialogScrollThreshold, ChatType } from 'im.v2.const';\n\nimport { MessageService } from './registry';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\ntype BaseMessageParams = {\n\tdialogId: string,\n\ttext: string,\n\ttempMessageId?: string,\n};\n\ntype PlainMessageParams = BaseMessageParams & {\n\treplyId?: number,\n\tforwardIds?: number[],\n};\n\ntype CopilotMessageParams = BaseMessageParams & {\n\tcopilot: {\n\t\tpromptCode: string,\n\t},\n};\n\ntype FileMessageParams = BaseMessageParams & {\n\tfileId: string,\n};\n\ntype PreparedMessage = {\n\ttemporaryId: string,\n\tchatId: number,\n\tdialogId: string,\n\tauthorId: number,\n\treplyId: number,\n\tforward: {userId: number, id: string},\n\tforwardIds: {[string]: number},\n\ttext: string,\n\tparams: JsonObject,\n\tcopilot: JsonObject,\n\tunread: boolean,\n\tsending: boolean,\n\tviewedByOthers: boolean,\n};\n\nexport class SendingService\n{\n\t#store: Store;\n\n\tstatic instance: SendingService = null;\n\n\tstatic getInstance(): SendingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync sendMessage(params: PlainMessageParams): Promise\n\t{\n\t\tconst { text = '' } = params;\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage', params);\n\t\tconst message = this.#prepareMessage(params);\n\n\t\treturn this.#processMessageSending(message);\n\t}\n\n\tasync sendMessageWithFile(params: FileMessageParams): Promise\n\t{\n\t\tconst { text = '', fileId = '' } = params;\n\t\tif (!Type.isStringFilled(text) && !Type.isStringFilled(fileId))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage with file', params);\n\t\tconst message = this.#prepareMessageWithFile(params);\n\n\t\tawait this.#handleAddingMessageToModels(message);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync forwardMessages(params: PlainMessageParams): Promise\n\t{\n\t\tconst { forwardIds, dialogId, text } = params;\n\t\tif (!Type.isArrayFilled(forwardIds))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tLogger.warn('SendingService: forwardMessages', params);\n\n\t\tawait this.#handlePagination(dialogId);\n\n\t\tlet commentMessage = null;\n\t\tif (Type.isStringFilled(text))\n\t\t{\n\t\t\tcommentMessage = this.#prepareMessage(params);\n\t\t\tawait this.#addMessageToModels(commentMessage);\n\t\t}\n\n\t\tconst forwardUuidMap = this.#getForwardUuidMap(forwardIds);\n\t\tconst forwardedMessages = this.#prepareForwardMessages(params, forwardUuidMap);\n\n\t\tawait this.#addForwardsToModels(forwardedMessages);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId });\n\n\t\ttry\n\t\t{\n\t\t\tconst requestParams = this.#prepareSendForwardRequest({ forwardUuidMap, commentMessage, dialogId });\n\t\t\tconst response = await this.#sendMessageToServer(requestParams);\n\t\t\tLogger.warn('SendingService: forwardMessage result -', response);\n\t\t\tthis.#handleForwardMessageResponse({ response, dialogId, commentMessage });\n\t\t}\n\t\tcatch (errors)\n\t\t{\n\t\t\tthis.#handleForwardMessageError({ commentMessage, forwardUuidMap });\n\t\t\tthis.#logSendErrors(errors, 'forwardMessage');\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync retrySendMessage(params: { tempMessageId: string, dialogId: string }): Promise\n\t{\n\t\tconst { tempMessageId, dialogId } = params;\n\t\tconst unsentMessage: ImModelMessage = this.#store.getters['messages/getById'](tempMessageId);\n\t\tif (!unsentMessage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#removeMessageError(tempMessageId);\n\t\tconst message = this.#prepareMessage({\n\t\t\ttext: unsentMessage.text,\n\t\t\tdialogId,\n\t\t\ttempMessageId: unsentMessage.id,\n\t\t\treplyId: unsentMessage.replyId,\n\t\t});\n\n\t\treturn this.#sendAndProcessMessage(message);\n\t}\n\n\tasync sendCopilotPrompt(params: CopilotMessageParams): Promise\n\t{\n\t\tconst { text = '' } = params;\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendCopilotPrompt', params);\n\t\tconst message = this.#preparePrompt(params);\n\n\t\treturn this.#processMessageSending(message);\n\t}\n\n\tasync #processMessageSending(message: PreparedMessage): Promise\n\t{\n\t\tawait this.#handleAddingMessageToModels(message);\n\n\t\treturn this.#sendAndProcessMessage(message);\n\t}\n\n\tasync #handleAddingMessageToModels(message)\n\t{\n\t\tawait this.#handlePagination(message.dialogId);\n\t\tawait this.#addMessageToModels(message);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId: message.dialogId });\n\t}\n\n\tasync #sendAndProcessMessage(message: PreparedMessage): Promise\n\t{\n\t\tconst sendResult = await this.#sendMessageToServer(message)\n\t\t\t.catch((errors) => {\n\t\t\t\tthis.#updateMessageError(message.temporaryId);\n\t\t\t\tthis.#logSendErrors(errors, 'sendAndProcessMessage');\n\t\t\t});\n\n\t\tLogger.warn('SendingService: sendAndProcessMessage result -', sendResult);\n\t\tconst { id } = sendResult;\n\t\tif (!id)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#updateModels({\n\t\t\toldId: message.temporaryId,\n\t\t\tnewId: id,\n\t\t\tdialogId: message.dialogId,\n\t\t});\n\n\t\treturn Promise.resolve();\n\t}\n\n\t#prepareMessage(params: PlainMessageParams): PreparedMessage\n\t{\n\t\tconst { text, tempMessageId, dialogId, replyId, forwardIds } = params;\n\n\t\tconst defaultFields = {\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tunread: false,\n\t\t\tsending: true,\n\t\t};\n\n\t\treturn {\n\t\t\ttext,\n\t\t\tdialogId,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\ttemporaryId: tempMessageId ?? Utils.text.getUuidV4(),\n\t\t\treplyId,\n\t\t\tforwardIds,\n\t\t\tviewedByOthers: this.#needToSetAsViewed(dialogId),\n\t\t\t...defaultFields,\n\t\t};\n\t}\n\n\t#prepareMessageWithFile(params: FileMessageParams): PreparedMessage\n\t{\n\t\tconst { fileId } = params;\n\t\tif (!fileId)\n\t\t{\n\t\t\tthrow new Error('SendingService: sendMessageWithFile: no fileId provided');\n\t\t}\n\n\t\treturn {\n\t\t\t...this.#prepareMessage(params),\n\t\t\tparams: { FILE_ID: [fileId] },\n\t\t};\n\t}\n\n\t#preparePrompt(params: CopilotMessageParams): PreparedMessage\n\t{\n\t\tconst { copilot } = params;\n\t\tif (!copilot || !copilot.promptCode)\n\t\t{\n\t\t\tthrow new Error('SendingService: preparePrompt: no code provided');\n\t\t}\n\n\t\treturn {\n\t\t\t...this.#prepareMessage(params),\n\t\t\tcopilot,\n\t\t};\n\t}\n\n\t#handlePagination(dialogId: string): Promise\n\t{\n\t\tif (!this.#getDialog(dialogId).hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage: there are unread pages, move to chat end');\n\t\tconst messageService = new MessageService({ chatId: this.#getDialog(dialogId).chatId });\n\n\t\treturn messageService.loadContext(this.#getDialog(dialogId).lastMessageId).then(() => {\n\t\t\tthis.#sendScrollEvent({ dialogId });\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SendingService: loadContext error', error);\n\t\t});\n\t}\n\n\t#addMessageToModels(message: PreparedMessage): Promise\n\t{\n\t\tthis.#addMessageToRecent(message);\n\n\t\tvoid this.#store.dispatch('chats/clearLastMessageViews', { dialogId: message.dialogId });\n\n\t\treturn this.#store.dispatch('messages/add', message);\n\t}\n\n\t#addMessageToRecent(message: PreparedMessage)\n\t{\n\t\tconst recentItem = this.#store.getters['recent/get'](message.dialogId);\n\t\tif (!recentItem || message.text === '')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\tid: message.dialogId,\n\t\t\tfields: { messageId: message.temporaryId },\n\t\t});\n\t}\n\n\t#sendMessageToServer(message: PreparedMessage): Promise\n\t{\n\t\tconst fields = {};\n\n\t\tif (message.replyId)\n\t\t{\n\t\t\tfields.replyId = message.replyId;\n\t\t}\n\n\t\tif (message.forwardIds)\n\t\t{\n\t\t\tfields.forwardIds = message.forwardIds;\n\t\t}\n\n\t\tif (message.text)\n\t\t{\n\t\t\tfields.message = message.text;\n\t\t\tfields.templateId = message.temporaryId;\n\t\t}\n\n\t\tif (message.copilot)\n\t\t{\n\t\t\tfields.copilot = message.copilot;\n\t\t}\n\n\t\tconst queryData = {\n\t\t\tdialogId: message.dialogId.toString(),\n\t\t\tfields,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageSend, { data: queryData });\n\t}\n\n\t#updateModels(params: { oldId: string, newId: number, dialogId: string })\n\t{\n\t\tconst { oldId, newId, dialogId } = params;\n\t\tvoid this.#store.dispatch('messages/updateWithId', {\n\t\t\tid: oldId,\n\t\t\tfields: { id: newId },\n\t\t});\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tlastId: newId,\n\t\t\t\tlastMessageId: newId,\n\t\t\t},\n\t\t});\n\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\tid: dialogId,\n\t\t\tfields: { messageId: newId },\n\t\t});\n\t}\n\n\t#updateMessageError(messageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: { error: true },\n\t\t});\n\t}\n\n\t#removeMessageError(messageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\tsending: true,\n\t\t\t\terror: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendScrollEvent(params: {force: boolean, dialogId: string} = {})\n\t{\n\t\tconst { force = false, dialogId } = params;\n\t\tEventEmitter.emit(EventType.dialog.scrollToBottom, {\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tthreshold: force ? DialogScrollThreshold.none : DialogScrollThreshold.halfScreenUp,\n\t\t});\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId, true);\n\t}\n\n\t#getDialogByChatId(chatId: number): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId, true);\n\t}\n\n\t#needToSetAsViewed(dialogId: string): boolean\n\t{\n\t\treturn this.#store.getters['users/bots/isNetwork'](dialogId);\n\t}\n\n\t#handleForwardMessageResponse(params: { response: Object, dialogId: string, commentMessage: PreparedMessage })\n\t{\n\t\tconst { response, dialogId, commentMessage } = params;\n\t\tconst { id, uuidMap } = response;\n\n\t\tif (id)\n\t\t{\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: commentMessage.temporaryId,\n\t\t\t\tnewId: id,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t}\n\t\tObject.entries(uuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: uuid,\n\t\t\t\tnewId: messageId,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t});\n\t}\n\n\t#handleForwardMessageError({ commentMessage, forwardUuidMap })\n\t{\n\t\tif (commentMessage)\n\t\t{\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: commentMessage.temporaryId,\n\t\t\t\tfields: { error: true },\n\t\t\t});\n\t\t}\n\n\t\tObject.keys(forwardUuidMap).forEach((uuid: string) => {\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: uuid,\n\t\t\t\tfields: { error: true },\n\t\t\t});\n\t\t});\n\t}\n\n\t#prepareForwardMessages(params: PlainMessageParams, forwardUuidMap: {[string]: number}): PreparedMessage[]\n\t{\n\t\tconst { forwardIds, dialogId } = params;\n\t\tif (forwardIds.length === 0)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst preparedMessages = [];\n\t\tObject.entries(forwardUuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\t\tif (!message)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpreparedMessages.push({\n\t\t\t\t...this.#prepareMessage({ dialogId, text: message.text, tempMessageId: uuid, replyId: message.replyId }),\n\t\t\t\tforward: this.#prepareForwardParams(messageId),\n\t\t\t\tattach: message.attach,\n\t\t\t\tisDeleted: message.isDeleted,\n\t\t\t\tfiles: message.files,\n\t\t\t});\n\t\t});\n\n\t\treturn preparedMessages;\n\t}\n\n\t#prepareForwardParams(messageId: number): { id: string, userId: number, chatType: string, chatTitle: string }\n\t{\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tconst chat = this.#getDialogByChatId(message.chatId);\n\n\t\tconst isForward = this.#store.getters['messages/isForward'](messageId);\n\n\t\tconst userId = isForward ? message.forward.userId : message.authorId;\n\t\tconst chatType = isForward ? message.forward.chatType : chat.type;\n\t\tlet chatTitle = isForward ? message.forward.chatTitle : chat.name;\n\t\tif (chatType === ChatType.channel)\n\t\t{\n\t\t\tchatTitle = null;\n\t\t}\n\n\t\treturn {\n\t\t\tid: this.#buildForwardContextId(message.chatId, messageId),\n\t\t\tuserId,\n\t\t\tchatType,\n\t\t\tchatTitle,\n\t\t};\n\t}\n\n\t#prepareSendForwardRequest(params: {\n\t\tforwardUuidMap: { [string]: number },\n\t\tcommentMessage: ?PreparedMessage,\n\t\tdialogId: string\n\t}): { dialogId: string, forwardIds: { [string]: number }, text?: string, temporaryId?: string }\n\t{\n\t\tconst { dialogId, forwardUuidMap, commentMessage } = params;\n\n\t\tconst requestPrams = {\n\t\t\tdialogId,\n\t\t\tforwardIds: forwardUuidMap,\n\t\t};\n\n\t\tif (commentMessage)\n\t\t{\n\t\t\trequestPrams.text = commentMessage.text;\n\t\t\trequestPrams.temporaryId = commentMessage.temporaryId;\n\t\t}\n\n\t\treturn requestPrams;\n\t}\n\n\t#addForwardsToModels(forwardedMessages: PreparedMessage[]): Promise\n\t{\n\t\tconst addPromises = [];\n\t\tforwardedMessages.forEach((message) => {\n\t\t\taddPromises.push(this.#addMessageToModels(message));\n\t\t});\n\n\t\treturn Promise.all(addPromises);\n\t}\n\n\t#getForwardUuidMap(forwardIds: number[]): { [string]: number }\n\t{\n\t\tconst uuidMap = {};\n\t\tforwardIds.forEach((id) => {\n\t\t\tuuidMap[Utils.text.getUuidV4()] = id;\n\t\t});\n\n\t\treturn uuidMap;\n\t}\n\n\t#buildForwardContextId(chatId: number, messageId: number): string\n\t{\n\t\tconst dialogId = this.#getDialogByChatId(chatId).dialogId;\n\t\tif (dialogId.startsWith('chat'))\n\t\t{\n\t\t\treturn `${dialogId}/${messageId}`;\n\t\t}\n\n\t\tconst currentUser = Core.getUserId();\n\n\t\treturn `${dialogId}:${currentUser}/${messageId}`;\n\t}\n\n\t#logSendErrors(errors: RunActionError[], methodName: string)\n\t{\n\t\terrors.forEach((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`SendingService: ${methodName} error: code: ${error.code} message: ${error.message}`);\n\t\t});\n\t}\n}\n","import {Runtime, Type} from 'main.core';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {NotificationTypesCodes, RestMethod} from 'im.v2.const';\nimport {UserManager} from 'im.v2.lib.user';\n\ntype NotificationItemRest = {\n\tid: number,\n\tchat_id: number,\n\tauthor_id: number,\n\tdate: string,\n\tnotify_type: number,\n\tnotify_module: string,\n\tnotify_event: string,\n\tnotify_tag: string,\n\tnotify_sub_tag: string,\n\tnotify_title?: string,\n\tnotify_read: string,\n\tsetting_name: string,\n\ttext: string,\n\tnotify_buttons: string,\n\tparams?: Object\n};\n\ntype NotificationGetRestResult = {\n\tchat_id: number,\n\tnotifications: NotificationItemRest[],\n\ttotal_count: number,\n\ttotal_unread_count: number,\n\tusers: [],\n};\n\nexport class NotificationService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\tlimitPerPage: Number = 50;\n\tisLoading: boolean = false;\n\n\tlastId: number = 0;\n\tlastType: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\n\tnotificationsToDelete: Set<number> = new Set();\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t\tthis.deleteWithDebounce = Runtime.debounce(this.deleteRequest, 500, this);\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tdelete(notificationId: number)\n\t{\n\t\tthis.notificationsToDelete.add(notificationId);\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\t\tthis.store.dispatch('notifications/deleteFromSearch', { id: notificationId });\n\n\t\tthis.deleteWithDebounce();\n\t}\n\n\tsendConfirmAction(notificationId: number, value: string)\n\t{\n\t\tconst requestParams = {\n\t\t\t'NOTIFY_ID': notificationId,\n\t\t\t'NOTIFY_VALUE': value,\n\t\t};\n\n\t\tthis.store.dispatch('notifications/delete', {id: notificationId});\n\n\t\tthis.restClient.callMethod('im.notify.confirm', requestParams).then(response => {\n\t\t\tLogger.warn(`NotificationService: sendConfirmAction: success`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\t}\n\n\tsendQuickAnswer(params)\n\t{\n\t\tconst {id, text, callbackSuccess = () => {}, callbackError = () => {}} = params;\n\n\t\tthis.restClient.callMethod(RestMethod.imNotifyAnswer, {\n\t\t\tnotify_id: id,\n\t\t\tanswer_text: text\n\t\t}).then(response => {\n\t\t\tcallbackSuccess(response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tcallbackError();\n\t\t});\n\t}\n\n\tdeleteRequest()\n\t{\n\t\tconst idsToDelete = [...this.notificationsToDelete];\n\n\t\tthis.restClient.callMethod('im.notify.delete', {id: idsToDelete}).then(response => {\n\t\t\tLogger.warn(`NotificationService: deleteRequest: success for ids: ${idsToDelete}`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\n\t\tthis.notificationsToDelete.clear();\n\t}\n\n\trequestItems({firstPage = false} = {}): Promise\n\t{\n\t\tconst imNotifyGetQueryParams = {\n\t\t\t'LIMIT': this.limitPerPage,\n\t\t\t'CONVERT_TEXT': 'Y'\n\t\t};\n\t\tconst batchQueryParams = {\n\t\t\t[RestMethod.imNotifyGet]: [RestMethod.imNotifyGet, imNotifyGetQueryParams]\n\t\t};\n\n\t\tif (!firstPage)\n\t\t{\n\t\t\timNotifyGetQueryParams.LAST_ID = this.lastId;\n\t\t\timNotifyGetQueryParams.LAST_TYPE = this.lastType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbatchQueryParams[RestMethod.imNotifySchemaGet] = [RestMethod.imNotifySchemaGet, {}];\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tthis.restClient.callBatch(batchQueryParams, (response) => {\n\t\t\t\tLogger.warn('im.notify.get: result', response);\n\t\t\t\tresolve(this.handleResponse(response));\n\t\t\t});\n\t\t});\n\t}\n\n\thandleResponse(response: Object): Promise\n\t{\n\t\tconst imNotifyGetResponse = response[RestMethod.imNotifyGet].data();\n\t\tthis.hasMoreItemsToLoad = !this.isLastPage(imNotifyGetResponse.notifications);\n\t\tif (imNotifyGetResponse.notifications.length === 0)\n\t\t{\n\t\t\tLogger.warn('im.notify.get: no notifications', imNotifyGetResponse);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.lastId = this.getLastItemId(imNotifyGetResponse.notifications);\n\t\tthis.lastType = this.getLastItemType(imNotifyGetResponse.notifications);\n\n\t\treturn this.updateModels(imNotifyGetResponse).then(() => {\n\t\t\tthis.isLoading = false;\n\n\t\t\tif (response[RestMethod.imNotifySchemaGet])\n\t\t\t{\n\t\t\t\treturn response[RestMethod.imNotifySchemaGet].data();\n\t\t\t}\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tupdateModels(imNotifyGetResponse: NotificationGetRestResult): Promise\n\t{\n\t\tthis.userManager.setUsersToModel(imNotifyGetResponse.users);\n\n\t\treturn this.store.dispatch('notifications/initialSet', imNotifyGetResponse);\n\t}\n\n\tgetLastItemId(collection: NotificationItemRest[]): number\n\t{\n\t\treturn collection[collection.length - 1].id;\n\t}\n\n\tgetLastItemType(collection: NotificationItemRest[]): number\n\t{\n\t\treturn this.getItemType(collection[collection.length - 1]);\n\t}\n\n\tgetItemType(item: NotificationItemRest): number\n\t{\n\t\treturn item.notify_type === NotificationTypesCodes.confirm\n\t\t\t? NotificationTypesCodes.confirm\n\t\t\t: NotificationTypesCodes.simple\n\t\t\t;\n\t}\n\n\tisLastPage(notifications: Array): boolean\n\t{\n\t\tif (!Type.isArrayFilled(notifications) || notifications.length < this.limitPerPage)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy()\n\t{\n\t\tLogger.warn('Notification service destroyed');\n\t}\n}","import {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\n\nexport class DiskService\n{\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tdelete({chatId, fileId}): Promise\n\t{\n\t\tconst queryParams = {chat_id: chatId, file_id: fileId};\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileDelete, queryParams).catch(error => {\n\t\t\tconsole.error('DiskService: error deleting file', error);\n\t\t});\n\t}\n\n\tsave(fileId: number): Promise\n\t{\n\t\tconst queryParams = {file_id: fileId};\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileSave, queryParams).catch(error => {\n\t\t\tconsole.error('DiskService: error saving file on disk', error);\n\t\t});\n\t}\n}","import {RecentService} from '../../recent';\n\nimport type {ImModelRecentItem} from 'im.v2.model';\n\nexport class UnreadRecentService extends RecentService\n{\n\tstatic instance = null;\n\n\tstatic getInstance(): UnreadRecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn this.store.getters['recent/getUnreadCollection'];\n\t}\n\n\tloadFirstPage({ignorePreloadedItems = false} = {}): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst {users, dialogues, recent} = this.prepareDataForModels(rawData);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tconst dialoguesPromise = this.store.dispatch('chats/set', dialogues);\n\n\t\tconst fakeRecent = this.getFakeData(recent);\n\t\tconst recentPromise = this.store.dispatch('recent/setUnread', fakeRecent);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, recentPromise]);\n\t}\n\n\tgetFakeData(itemsForModel: Object[]): Object[]\n\t{\n\t\titemsForModel = itemsForModel.slice(-4);\n\t\titemsForModel.forEach(item => {\n\t\t\tthis.store.dispatch('chats/update', {\n\t\t\t\tdialogId: item.id,\n\t\t\t\tfields: {\n\t\t\t\t\tcounter: 7\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn itemsForModel;\n\t}\n\n\tonUpdateState({data})\n\t{\n\t\t//\n\t}\n}","import { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Uploader, UploaderEvent } from 'ui.uploader.core';\n\nimport { EventType } from 'im.v2.const';\n\nimport type { UploaderFile } from 'ui.uploader.core';\nimport type { MessageWithFile } from '../../uploading';\n\ntype UploaderWrapperOptions = {\n\tdiskFolderId: number,\n\tuploaderId: string,\n}\n\nexport class UploaderWrapper extends EventEmitter\n{\n\t#uploaderRegistry: {[uploaderId: string]: Uploader} = {};\n\t#onUploadCancelHandler: Function;\n\n\tstatic eventNamespace = 'BX.Messenger.v2.Service.Uploading.UploaderWrapper';\n\n\tstatic events = {\n\t\tonFileAddStart: 'onFileAddStart',\n\t\tonFileAdd: 'onFileAdd',\n\t\tonFileUploadStart: 'onFileUploadStart',\n\t\tonFileUploadProgress: 'onFileUploadProgress',\n\t\tonFileUploadComplete: 'onFileUploadComplete',\n\t\tonFileUploadError: 'onFileUploadError',\n\t\tonFileUploadCancel: 'onFileUploadCancel',\n\t\tonMaxFileCountExceeded: 'onMaxFileCountExceeded',\n\t};\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace(UploaderWrapper.eventNamespace);\n\n\t\tthis.#onUploadCancelHandler = this.#onUploadCancel.bind(this);\n\t\tEventEmitter.subscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n\n\tcreateUploader(options: UploaderWrapperOptions)\n\t{\n\t\tconst { diskFolderId, uploaderId, autoUpload } = options;\n\n\t\tthis.#uploaderRegistry[uploaderId] = new Uploader({\n\t\t\tautoUpload,\n\t\t\tcontroller: 'disk.uf.integration.diskUploaderController',\n\t\t\tmultiple: true,\n\t\t\tcontrollerOptions: {\n\t\t\t\tfolderId: diskFolderId,\n\t\t\t},\n\t\t\timageResizeWidth: 1280,\n\t\t\timageResizeHeight: 1280,\n\t\t\timageResizeMode: 'contain',\n\t\t\timageResizeFilter: (file: UploaderFile) => {\n\t\t\t\treturn !file.getCustomData('sendAsFile') && file.getExtension() !== 'gif';\n\t\t\t},\n\t\t\timageResizeMimeType: 'image/jpeg',\n\t\t\timageResizeMimeTypeMode: 'force',\n\t\t\timagePreviewHeight: 720,\n\t\t\timagePreviewWidth: 720,\n\t\t\ttreatOversizeImageAsFile: true,\n\t\t\tignoreUnknownImageTypes: true,\n\t\t\tmaxFileSize: null,\n\t\t\tevents: {\n\t\t\t\t[UploaderEvent.FILE_ADD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAddStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ADD]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAdd, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_PROGRESS]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadProgress, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadComplete, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.MAX_FILE_COUNT_EXCEEDED]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onMaxFileCountExceeded, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.UPLOAD_COMPLETE]: () => {\n\t\t\t\t\tthis.#uploaderRegistry[uploaderId].destroy({ removeFilesFromServer: false });\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderRegistry[uploaderId].setAutoUpload(true);\n\t\tthis.#uploaderRegistry[uploaderId].start();\n\t}\n\n\taddFiles(tasks: MessageWithFile[]): UploaderFile[]\n\t{\n\t\tconst addedFiles = [];\n\t\ttasks.forEach((task) => {\n\t\t\tconst file = this.#addFile(task);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\taddedFiles.push(file);\n\t\t\t}\n\t\t});\n\n\t\treturn addedFiles;\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderRegistry[uploaderId].getFiles();\n\t}\n\n\t#addFile(task: MessageWithFile): ?UploaderFile\n\t{\n\t\treturn this.#uploaderRegistry[task.uploaderId].addFile(\n\t\t\ttask.file,\n\t\t\t{\n\t\t\t\tid: task.tempFileId,\n\t\t\t\tcustomData: {\n\t\t\t\t\tdialogId: task.dialogId,\n\t\t\t\t\tchatId: task.chatId,\n\t\t\t\t\ttempMessageId: task.tempMessageId,\n\t\t\t\t\tsendAsFile: task.sendAsFile,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\t#onUploadCancel(event: BaseEvent)\n\t{\n\t\tconst { tempFileId, tempMessageId } = event.getData();\n\t\tif (!tempFileId || !tempMessageId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#removeFileFromUploader(tempFileId);\n\t\tthis.emit(UploaderWrapper.events.onFileUploadCancel, { tempMessageId, tempFileId });\n\t}\n\n\t#removeFileFromUploader(tempFileId: string)\n\t{\n\t\tconst uploaderList = Object.values(this.#uploaderRegistry);\n\t\tfor (const uploader of uploaderList)\n\t\t{\n\t\t\tif (!uploader.getFile)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst file = uploader.getFile(tempFileId);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\tfile.remove();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n}\n","import { BaseEvent } from 'main.core.events';\nimport { getFilesFromDataTransfer } from 'ui.uploader.core';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport { Core } from 'im.v2.application.core';\nimport { FileStatus, FileType, RestMethod } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { UploaderWrapper } from './classes/uploading/uploader-wrapper';\nimport { SendingService } from './registry';\n\nimport type { ImModelChat, ImModelUser } from 'im.v2.model';\nimport type { UploaderFile, UploaderError } from 'ui.uploader.core';\nimport type { Store } from 'ui.vue3.vuex';\nimport type { RestClient } from 'rest.client';\n\nexport type FileFromDisk = {\n\tid: string;\n\tname: string;\n\ttype: string;\n\tsize: string;\n\tsizeInt: string;\n\tmodifyBy: string;\n\tmodifyDate: string;\n\tmodifyDateInt: number;\n\text: string;\n\tfileType: string;\n};\n\nexport type MessageWithFile = {\n\ttempMessageId?: string,\n\ttempFileId: string,\n\tfile: FileFromDisk | File,\n\tdialogId: string,\n\tchatId?: number,\n\tuploaderId: string,\n\tsendAsFile: boolean,\n}\n\ntype FileCommitParams = {\n\ttemporaryFileId: string,\n\ttempMessageId: string,\n\tchatId: number,\n\trealFileId: number,\n\tfromDisk: boolean,\n\tsendAsFile: boolean,\n\tmessageText: string\n}\n\ntype UploadFilesParams = {\n\tfiles: File[],\n\tdialogId: string,\n\tautoUpload: boolean,\n\tsendAsFile: boolean\n}\n\nexport class UploadingService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#isRequestingDiskFolderId: boolean = false;\n\t#diskFolderIdRequestPromise: { [string]: Promise } = {};\n\t#uploaderWrapper: UploaderWrapper;\n\t#sendingService: SendingService;\n\t#uploaderFilesRegistry: {\n\t\t[uploaderId: string]: {\n\t\t\tautoUpload: boolean,\n\t\t\twasSent: boolean,\n\t\t\ttext: string,\n\t\t\tdialogId: string,\n\t\t\tfilesPreviewStatus: { [string]: boolean }\n\t\t}\n\t} = {};\n\n\tstatic instance = null;\n\n\tstatic getInstance(): UploadingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#sendingService = SendingService.getInstance();\n\t\tthis.#initUploader();\n\t}\n\n\t#createUploader(params: { dialogId: string, autoUpload: boolean }): Promise<string>\n\t{\n\t\tconst { dialogId, autoUpload } = params;\n\n\t\tconst uploaderId = Utils.text.getUuidV4();\n\n\t\treturn this.checkDiskFolderId(dialogId).then((diskFolderId: number) => {\n\t\t\tthis.#uploaderWrapper.createUploader({\n\t\t\t\tdiskFolderId,\n\t\t\t\tuploaderId,\n\t\t\t\tautoUpload,\n\t\t\t});\n\n\t\t\treturn uploaderId;\n\t\t});\n\t}\n\n\taddFilesFromClipboard(clipboardData: DataTransfer, dialogId): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\treturn getFilesFromDataTransfer(clipboardData).then((files: File[]) => {\n\t\t\tconst imagesOnly = files.filter((file) => Utils.file.isImage(file.name));\n\t\t\tif (imagesOnly.length === 0)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tfiles: [],\n\t\t\t\t\tuploaderId: '',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this.addFiles({\n\t\t\t\tfiles: imagesOnly,\n\t\t\t\tdialogId,\n\t\t\t\tautoUpload: false,\n\t\t\t});\n\t\t});\n\t}\n\n\taddFilesFromInput(files: File[], dialogId: string, sendAsFile: boolean)\n\t{\n\t\tif (files.length === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addFiles({ files, dialogId, autoUpload: true, sendAsFile }).then(({ uploaderId }) => {\n\t\t\tthis.#tryToSendMessages(uploaderId);\n\t\t}).catch((error) => {\n\t\t\tLogger.error('SendingService: sendFilesFromInput error', error);\n\t\t});\n\t}\n\n\taddFiles(params: UploadFilesParams): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { files, dialogId, autoUpload, sendAsFile = false } = params;\n\n\t\treturn this.#createUploader({ dialogId, autoUpload }).then((uploaderId: string) => {\n\t\t\tconst filesForUploader = [];\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tconst messageWithFile = this.#prepareMessageWithFile(file, dialogId, uploaderId, sendAsFile);\n\t\t\t\tfilesForUploader.push(messageWithFile);\n\t\t\t});\n\n\t\t\tconst addedFiles = this.#uploaderWrapper.addFiles(filesForUploader);\n\t\t\tthis.#registerFiles(uploaderId, addedFiles, dialogId, autoUpload);\n\n\t\t\treturn {\n\t\t\t\tfiles: addedFiles,\n\t\t\t\tuploaderId,\n\t\t\t};\n\t\t});\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderWrapper.getFiles(uploaderId);\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = true;\n\t\tthis.#uploaderWrapper.start(uploaderId);\n\t}\n\n\tuploadFileFromDisk(files, dialogId)\n\t{\n\t\tObject.values(files).forEach((file) => {\n\t\t\tconst messageWithFile = this.#prepareFileFromDisk(file, dialogId);\n\n\t\t\tthis.#addFileFromDiskToModel(messageWithFile).then(() => {\n\t\t\t\tconst message = {\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\tfileId: messageWithFile.tempFileId,\n\t\t\t\t\tdialogId: messageWithFile.dialogId,\n\t\t\t\t};\n\n\t\t\t\treturn this.#sendingService.sendMessageWithFile(message);\n\t\t\t}).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\tchatId: messageWithFile.chatId,\n\t\t\t\t\ttemporaryFileId: messageWithFile.tempFileId,\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\trealFileId: messageWithFile.file.id.slice(1),\n\t\t\t\t\tfromDisk: true,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tconsole.error('SendingService: sendFilesFromDisk error:', error);\n\t\t\t});\n\t\t});\n\t}\n\n\t#addFileFromDiskToModel(messageWithFile: MessageWithFile): Promise\n\t{\n\t\treturn this.#store.dispatch('files/add', {\n\t\t\tid: messageWithFile.tempFileId,\n\t\t\tchatId: messageWithFile.chatId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: messageWithFile.file.name,\n\t\t\ttype: Utils.file.getFileTypeByExtension(messageWithFile.file.ext),\n\t\t\textension: messageWithFile.file.ext,\n\t\t\tsize: messageWithFile.file.sizeInt,\n\t\t\tstatus: FileStatus.wait,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t});\n\t}\n\n\t#initUploader()\n\t{\n\t\tthis.#uploaderWrapper = new UploaderWrapper();\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAddStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#addFileToStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAdd, (event: BaseEvent) => {\n\t\t\tconst { file, uploaderId } = event.getData();\n\t\t\tthis.#updateFilePreviewInStore(file);\n\t\t\tthis.#setReadyFilePreview(uploaderId, file.getId());\n\t\t\tthis.#tryToSendMessages(uploaderId);\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileSizeInStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadProgress, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.upload);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadComplete, (event: BaseEvent) => {\n\t\t\tconst { file }: {file: UploaderFile} = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.wait);\n\t\t\tthis.#uploadPreview(file).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\trealFileId: file.getServerFileId(),\n\t\t\t\t\ttemporaryFileId: file.getId(),\n\t\t\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\t\tmessageText: file.getCustomData('messageText') ?? '',\n\t\t\t\t\tsendAsFile: file.getCustomData('sendAsFile'),\n\t\t\t\t\tfromDisk: false,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tLogger.warn('UploadingService: upload preview error', error);\n\t\t\t});\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadError, (event: BaseEvent) => {\n\t\t\tconst { file, error } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), 0, FileStatus.error);\n\t\t\tthis.#setMessageError(file.getCustomData('tempMessageId'));\n\t\t\tthis.#showError(error);\n\t\t\tLogger.error('UploadingService: upload error', error);\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadCancel, (event: BaseEvent) => {\n\t\t\tconst { tempMessageId, tempFileId } = event.getData();\n\t\t\tthis.#cancelUpload(tempMessageId, tempFileId);\n\t\t});\n\t}\n\n\tcheckDiskFolderId(dialogId: string): Promise<number>\n\t{\n\t\tif (this.#getDiskFolderId(dialogId) > 0)\n\t\t{\n\t\t\treturn Promise.resolve(this.#getDiskFolderId(dialogId));\n\t\t}\n\n\t\tif (this.#isRequestingDiskFolderId)\n\t\t{\n\t\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t\t}\n\n\t\tthis.#diskFolderIdRequestPromise[dialogId] = this.#requestDiskFolderId(dialogId);\n\n\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t}\n\n\t#requestDiskFolderId(dialogId: string): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.#isRequestingDiskFolderId = true;\n\n\t\t\tconst chatId = this.#getChatId(dialogId);\n\t\t\tthis.#restClient.callMethod(RestMethod.imDiskFolderGet, { chat_id: chatId }).then((response) => {\n\t\t\t\tconst { ID: diskFolderId } = response.data();\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\tthis.#store.commit('chats/update', {\n\t\t\t\t\tdialogId,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tdiskFolderId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tresolve(diskFolderId);\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommitFile(params: FileCommitParams)\n\t{\n\t\tconst { temporaryFileId, tempMessageId, chatId, realFileId, fromDisk, messageText = '', sendAsFile = false } = params;\n\n\t\tconst fileIdParams = {};\n\t\tif (fromDisk)\n\t\t{\n\t\t\tfileIdParams.disk_id = realFileId;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfileIdParams.upload_id = realFileId.toString().slice(1);\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: messageText,\n\t\t\ttemplate_id: tempMessageId,\n\t\t\tfile_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\t...fileIdParams,\n\t\t}).catch((error) => {\n\t\t\tthis.#setMessageError(tempMessageId);\n\t\t\tthis.#updateFileProgress(temporaryFileId, 0, FileStatus.error);\n\t\t\tLogger.error('commitFile error', error);\n\t\t});\n\t}\n\n\t#uploadPreview(file: UploaderFile): Promise\n\t{\n\t\tif (\n\t\t\tthis.#getFileType(file.getBinary()) === FileType.file\n\t\t\t|| file.getExtension() === 'gif'\n\t\t)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst id = file.getServerFileId().toString().slice(1);\n\t\tconst previewFile = file.getClientPreview();\n\t\tif (!previewFile)\n\t\t{\n\t\t\tfile.setCustomData('sendAsFile', true);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst formData = new FormData();\n\t\tformData.append('id', id);\n\t\tformData.append('previewFile', previewFile, `preview_${file.getName()}.jpg`);\n\n\t\treturn runAction(RestMethod.imDiskFilePreviewUpload, { data: formData }).catch((error) => {\n\t\t\tLogger.error('imDiskFilePreviewUpload request error', error);\n\t\t});\n\t}\n\n\t#prepareMessageWithFile(file: File, dialogId: string, uploaderId, sendAsFile: boolean): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst tempFileId = Utils.text.getUuidV4();\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tfile,\n\t\t\tdialogId,\n\t\t\tchatId,\n\t\t\tuploaderId,\n\t\t\tsendAsFile: sendAsFile && this.#getFileType(file) !== FileType.file,\n\t\t};\n\t}\n\n\t#updateFileProgress(id: string, progress: number, status: string)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid,\n\t\t\tfields: {\n\t\t\t\tprogress: (progress === 100 ? 99 : progress),\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\t#cancelUpload(tempMessageId: string, tempFileId)\n\t{\n\t\tthis.#store.dispatch('messages/delete', { id: tempMessageId });\n\t\tthis.#store.dispatch('files/delete', { id: tempFileId });\n\t}\n\n\t#addFileToStore(file: UploaderFile)\n\t{\n\t\tconst taskId = file.getId();\n\t\tconst fileBinary = file.getBinary();\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tthis.#store.dispatch('files/add', {\n\t\t\tid: taskId,\n\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: fileBinary.name,\n\t\t\ttype: this.#getFileType(fileBinary),\n\t\t\textension: this.#getFileExtension(fileBinary),\n\t\t\tstatus: file.isFailed() ? FileStatus.error : FileStatus.progress,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t\t...previewData,\n\t\t});\n\t}\n\n\t#updateFilePreviewInStore(file: UploaderFile)\n\t{\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\t...previewData,\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateFileSizeInStore(file: UploaderFile)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\tsize: file.getSize(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#preparePreview(file: UploaderFile): { image: { width: number, height: number }, urlPreview: Blob }\n\t{\n\t\tif (file.getCustomData('sendAsFile'))\n\t\t{\n\t\t\treturn {};\n\t\t}\n\n\t\tconst preview = {\n\t\t\tblob: file.getPreviewUrl(),\n\t\t\twidth: file.getPreviewWidth(),\n\t\t\theight: file.getPreviewHeight(),\n\t\t};\n\n\t\tconst previewData = {};\n\t\tif (preview.blob)\n\t\t{\n\t\t\tpreviewData.image = {\n\t\t\t\twidth: preview.width,\n\t\t\t\theight: preview.height,\n\t\t\t};\n\n\t\t\tpreviewData.urlPreview = preview.blob;\n\t\t}\n\n\t\tif (file.getClientPreview())\n\t\t{\n\t\t\tpreviewData.urlShow = URL.createObjectURL(file.getBinary());\n\t\t}\n\n\t\treturn previewData;\n\t}\n\n\t#getDiskFolderId(dialogId: string): number\n\t{\n\t\treturn this.#getDialog(dialogId).diskFolderId;\n\t}\n\n\t#getFileType(file: File): string\n\t{\n\t\tlet fileType = FileType.file;\n\t\tif (file.type.startsWith('image'))\n\t\t{\n\t\t\tfileType = FileType.image;\n\t\t}\n\t\telse if (file.type.startsWith('video'))\n\t\t{\n\t\t\tfileType = FileType.video;\n\t\t}\n\n\t\treturn fileType;\n\t}\n\n\t#getFileExtension(file: File): string\n\t{\n\t\treturn file.name.split('.').splice(-1)[0];\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId);\n\t}\n\n\t#getCurrentUser(): ImModelUser\n\t{\n\t\tconst userId = Core.getUserId();\n\n\t\treturn this.#store.getters['users/get'](userId);\n\t}\n\n\t#getChatId(dialogId: string): ?number\n\t{\n\t\treturn this.#getDialog(dialogId)?.chatId;\n\t}\n\n\t#registerFiles(uploaderId: string, files: UploaderFile[], dialogId: string, autoUpload: boolean)\n\t{\n\t\tif (!this.#uploaderFilesRegistry[uploaderId])\n\t\t{\n\t\t\tthis.#uploaderFilesRegistry[uploaderId] = {\n\t\t\t\tfilesPreviewStatus: {},\n\t\t\t\tdialogId,\n\t\t\t\ttext: '',\n\t\t\t\tautoUpload,\n\t\t\t};\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tconst fileId = file.getId();\n\t\t\tif (!this.#uploaderFilesRegistry[uploaderId].filesPreviewStatus)\n\t\t\t{\n\t\t\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus = {};\n\t\t\t}\n\n\t\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus[fileId] = false;\n\t\t});\n\t}\n\n\t#setReadyFilePreview(uploaderId: string, fileId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus[fileId] = true;\n\t}\n\n\t#setMessagesText(uploaderId: string, text: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].text = text;\n\t}\n\n\t#setAutoUpload(uploaderId: string, autoUploadFlag: boolean)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = autoUploadFlag;\n\t}\n\n\tsendSeparateMessagesWithFiles(params: { uploaderId: string, text: string})\n\t{\n\t\tconst { uploaderId, text } = params;\n\n\t\tthis.#setMessagesText(uploaderId, text);\n\t\tthis.#setAutoUpload(uploaderId, true);\n\t\tthis.#tryToSendMessages(uploaderId);\n\t}\n\n\t#createMessagesFromFiles(uploaderId): {comment: {text: string, dialogId: string}, files: []}\n\t{\n\t\tconst messagesToSend = {\n\t\t\tcomment: {},\n\t\t\tfiles: [],\n\t\t};\n\n\t\tconst files = this.getFiles(uploaderId);\n\t\tconst text = this.#uploaderFilesRegistry[uploaderId].text;\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\t\tconst hasText = text.length > 0;\n\n\t\t// if we have more than one file and text, we need to send text message first\n\t\tif (files.length > 1 && hasText)\n\t\t{\n\t\t\tmessagesToSend.comment = { dialogId, text };\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tif (file.getError())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst messageId = Utils.text.getUuidV4();\n\n\t\t\tfile.setCustomData('messageId', messageId);\n\t\t\tif (files.length === 1 && hasText)\n\t\t\t{\n\t\t\t\tfile.setCustomData('messageText', text);\n\t\t\t}\n\n\t\t\tmessagesToSend.files.push({\n\t\t\t\tfileId: file.getId(),\n\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\tdialogId,\n\t\t\t\ttext: file.getCustomData('messageText') ?? '',\n\t\t\t});\n\t\t});\n\n\t\treturn messagesToSend;\n\t}\n\n\t#readyToAddMessages(uploaderId): boolean\n\t{\n\t\tif (\n\t\t\t!this.#uploaderFilesRegistry[uploaderId]\n\t\t\t|| !this.#uploaderFilesRegistry[uploaderId].autoUpload\n\t\t\t|| this.#uploaderFilesRegistry[uploaderId].wasSent\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { filesPreviewStatus } = this.#uploaderFilesRegistry[uploaderId];\n\n\t\treturn Object.values(filesPreviewStatus).every((flag) => flag === true);\n\t}\n\n\t#tryToSendMessages(uploaderId: string)\n\t{\n\t\tif (!this.#readyToAddMessages(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploaderFilesRegistry[uploaderId].wasSent = true;\n\t\tconst { comment, files } = this.#createMessagesFromFiles(uploaderId);\n\t\tif (comment.text)\n\t\t{\n\t\t\tvoid this.#sendingService.sendMessage(comment);\n\t\t}\n\n\t\tfiles.forEach((message) => {\n\t\t\tvoid this.#sendingService.sendMessageWithFile(message);\n\t\t});\n\t\tthis.start(uploaderId);\n\t}\n\n\t#prepareFileFromDisk(file: FileFromDisk, dialogId: string): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst realFileId = file.id.slice(1); // 'n123' => '123'\n\t\tconst tempFileId = `${tempMessageId}|${realFileId}`;\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tdialogId,\n\t\t\tfile,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t};\n\t}\n\n\t#showError(error: UploaderError)\n\t{\n\t\tif (error.getCode() === 'MAX_FILE_SIZE_EXCEEDED')\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\tcontent: `${error.getMessage()}<br>${error.getDescription()}`,\n\t\t\t});\n\t\t}\n\t}\n\n\t#setMessageError(tempMessageId: string)\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: tempMessageId,\n\t\t\tfields: {\n\t\t\t\terror: true,\n\t\t\t},\n\t\t});\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#uploaderWrapper.destroy();\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nexport class SettingsService\n{\n\tchangeSetting(settingName: string, value: any): Promise\n\t{\n\t\tLogger.warn('SettingsService: changeSetting', settingName, value);\n\t\tCore.getStore().dispatch('application/settings/set', {\n\t\t\t[settingName]: value,\n\t\t});\n\n\t\treturn runAction(RestMethod.imV2SettingsGeneralUpdate, {\n\t\t\tdata: {\n\t\t\t\tuserId: Core.getUserId(),\n\t\t\t\tname: settingName,\n\t\t\t\tvalue: value,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SettingsService: changeSetting error', error);\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\n\nexport class LinesService\n{\n\tgetDialogIdByUserCode(userCode: string): Promise<string>\n\t{\n\t\treturn Core.getRestClient().callMethod(RestMethod.linesDialogGet, {\n\t\t\tUSER_CODE: userCode,\n\t\t}).then((result) => {\n\t\t\tconst { dialog_id: dialogId } = result.data();\n\n\t\t\treturn dialogId;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('LinesService: error getting dialog id', error);\n\t\t});\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { ChatService } from './chat';\n\nexport class CopilotService\n{\n\tasync createChat(): Promise<string>\n\t{\n\t\tconst chatService = new ChatService();\n\t\tconst { newDialogId, newChatId } = await chatService.createChat({ type: ChatType.copilot })\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\tthis.#sendAnalytics({ chatId: newChatId, dialogId: newDialogId });\n\n\t\tawait chatService.loadChatWithMessages(newDialogId)\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\treturn newDialogId;\n\t}\n\n\t#onCreateError(error: Error)\n\t{\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('Copilot chat create error', error);\n\t\tthrow new Error('Copilot chat create error');\n\t}\n\n\t#sendAnalytics({ chatId, dialogId })\n\t{\n\t\tAnalytics.getInstance().createChat({ chatId, dialogId });\n\t}\n}\n"],"names":["RecentDataExtractor","constructor","params","rawData","withBirthdays","getItems","items","forEach","item","users","Object","values","chats","messages","files","recentItems","user","id","chat","existingRecentItem","Core","getStore","getters","options","default_user_record","message","FakeMessagePrefix","viewedByOthers","status","MessageStatus","delivered","Type","isPlainObject","file","existingFile","existingMessage","isArrayFilled","attach","messageId","birthdayList","counter","dialogId","chatId","chat_id","avatar","color","name","type","ChatType","role","UserRole","member","isBirthdayPlaceholder","RecentService","dataIsPreloaded","firstPageIsLoaded","itemsPerPage","isLoading","pagesLoaded","hasMoreItemsToLoad","lastMessageDate","getInstance","instance","getCollection","loadFirstPage","ignorePreloadedItems","Logger","warn","Promise","resolve","result","requestItems","firstPage","loadNextPage","setPreloadedData","hasMore","getLastMessageDate","updateModels","hideChat","recentItem","dispatch","chatIsOpened","Messenger","openChat","getRestClient","callMethod","RestMethod","imRecentHide","DIALOG_ID","catch","error","console","queryParams","getQueryParams","getQueryMethod","data","imRecentList","SKIP_OPENLINES","LIMIT","LAST_MESSAGE_DATE","GET_ORIGINAL_TEXT","PARSE_TEXT","getModelSaveMethod","extractor","getExtractorOptions","extractedItems","usersPromise","dialoguesPromise","messagesPromise","filesPromise","recentPromise","all","length","slice","date","ChatDataExtractor","restResult","getChatId","getDialogId","isOpenlinesChat","lines","isCopilotChat","copilot","getChats","mainChat","hasPrevPage","hasNextPage","UserManager","getDialogForUser","getFiles","getUsers","getAdditionalUsers","usersShort","getMessages","getCommentInfo","commentInfo","getMessagesToStore","additionalMessages","getPinnedMessageIds","pinnedMessageIds","pins","pin","push","getReactions","reactions","LoadService","loadChat","imV2ChatShallowLoad","loadChatWithMessages","messageLimit","MessageService","getMessageRequestLimit","imV2ChatLoad","loadChatWithContext","imV2ChatLoadInContext","prepareDialogId","Utils","dialog","isExternalId","runAction","imV2ChatGetDialogId","externalId","then","loadComments","postId","autoJoin","createIfNotExists","loadCommentInfo","channelDialogId","messageIds","map","imV2ChatMessageCommentInfoList","userManager","addUsersToModel","resetChat","fields","inited","actionName","actionResult","loadedDialogId","loading","chatsPromise","clearCollection","pinnedMessages","contextId","LayoutManager","setLastOpenedElement","Layout","openCopilot","openLines","currentLayoutName","getLayout","isStringFilled","PRIVATE_CHAT","OPEN_CHAT","CreateService","createChat","chatConfig","preparedFields","createResult","imV2ChatAdd","Error","newChatId","newDialogId","preparedConfig","getBase64","managers","members","allMembers","ownerId","Set","toUpperCase","entityType","title","description","searchable","isAvailableInSearch","manageUsersAdd","manageUsersDelete","manageUi","manageSettings","manageMessages","conferencePassword","entries","key","value","isUndefined","chatType","toLowerCase","userCounter","owner","permissions","MAX_AVATAR_SIZE","UpdateService","prepareAvatar","avatarFile","isResizableImage","reject","preview","resizedAvatar","resizeImage","width","height","changeAvatar","avatarInBase64","imV2ChatUpdate","RenameService","renameChat","newName","oldName","imChatUpdateTitle","dialog_id","MuteService","Runtime","debounce","ChatService","DEBOUNCE_TIME","muteChat","unmuteChat","action","imChatMute","actionText","actionType","PinService","pinChat","imRecentPin","unpinChat","READ_TIMEOUT","ReadService","readAll","imV2ChatReadAll","readDialog","imV2ChatRead","unreadDialog","imV2ChatUnread","readMessage","add","clearTimeout","readTimeout","setTimeout","rawChatId","clearDialogMark","markedId","unread","onlyRecent","queueChatId","Number","parseInt","size","copiedMessageIds","readMessagesCount","readResult","maxMessageId","Math","max","lastReadId","lastId","newCounter","counters","parentChatId","comment","imV2ChatMessageRead","ids","actionUuid","UuidManager","getActionUuid","UserService","addToChat","addConfig","hide_history","showHistory","imChatUserAdd","kickUserFromChat","userId","imV2ChatDeleteUser","leaveChat","getUserId","joinChat","imV2ChatJoin","addManager","managerList","includes","newManagerList","payload","userIds","imV2ChatAddManagers","removeManager","filter","managerId","imV2ChatDeleteManagers","loadUnread","lastUnreadMessageId","query","order","limit","MESSAGE_REQUEST_LIMIT","imV2ChatMessageTail","loadHistory","lastHistoryMessageId","hasPreparedHistoryMessages","drawPreparedHistoryMessages","hasPreparedUnreadMessages","drawPreparedUnreadMessages","loadContext","imV2ChatMessageGetContext","range","callBatch","finally","loadContextByChatId","commentChatId","targetCommentInfo","find","targetMessageId","reloadMessageList","savedPositionMessageId","wasInitedBefore","loadInitialMessages","imV2ChatMessageList","rawMessages","lastMessageId","newMaxId","messagesCollection","updateModelsPromise","dialogPromise","setUsersToModel","reactionsPromise","additionalMessagesPromise","commentInfoPromise","flag","pinMessage","imV2ChatMessagePin","unpinMessage","imV2ChatMessageUnpin","EditService","editMessageText","text","imV2ChatMessageUpdate","isEdited","DeleteService","deleteMessage","isUuidV4","isDeleted","replyId","alwaysCompleteDeleteChats","channel","openChannel","neverCompleteDeleteChats","newLastId","imV2ChatMessageDelete","previousMessage","EventEmitter","emit","EventType","onMessageDeleted","MarkService","markMessage","imV2ChatMessageMark","FavoriteService","addMessageToFavorite","imChatFavoriteAdd","MESSAGE_ID","BX","UI","Notification","Center","notify","content","Loc","getMessage","removeMessageFromFavorite","imChatFavoriteDelete","SendingService","sendMessage","sendMessageWithFile","fileId","forwardMessages","forwardIds","commentMessage","forwardUuidMap","forwardedMessages","force","requestParams","response","errors","retrySendMessage","tempMessageId","unsentMessage","sendCopilotPrompt","sendResult","temporaryId","oldId","newId","defaultFields","authorId","sending","getUuidV4","FILE_ID","promptCode","messageService","templateId","queryData","toString","imV2ChatMessageSend","scrollToBottom","threshold","DialogScrollThreshold","none","halfScreenUp","uuidMap","uuid","keys","preparedMessages","forward","isForward","chatTitle","requestPrams","addPromises","startsWith","currentUser","methodName","code","NotificationService","store","restClient","limitPerPage","lastType","notificationsToDelete","deleteWithDebounce","deleteRequest","delete","notificationId","sendConfirmAction","sendQuickAnswer","callbackSuccess","callbackError","imNotifyAnswer","notify_id","answer_text","idsToDelete","clear","imNotifyGetQueryParams","batchQueryParams","imNotifyGet","LAST_ID","LAST_TYPE","imNotifySchemaGet","handleResponse","imNotifyGetResponse","isLastPage","notifications","getLastItemId","getLastItemType","collection","getItemType","notify_type","NotificationTypesCodes","confirm","simple","destroy","DiskService","file_id","imDiskFileDelete","save","imDiskFileSave","UnreadRecentService","dialogues","recent","prepareDataForModels","fakeRecent","getFakeData","itemsForModel","onUpdateState","UploaderWrapper","setEventNamespace","eventNamespace","bind","subscribe","uploader","cancel","createUploader","diskFolderId","uploaderId","autoUpload","Uploader","controller","multiple","controllerOptions","folderId","imageResizeWidth","imageResizeHeight","imageResizeMode","imageResizeFilter","getCustomData","getExtension","imageResizeMimeType","imageResizeMimeTypeMode","imagePreviewHeight","imagePreviewWidth","treatOversizeImageAsFile","ignoreUnknownImageTypes","maxFileSize","events","UploaderEvent","FILE_ADD_START","event","onFileAddStart","FILE_UPLOAD_START","onFileUploadStart","FILE_ADD","getData","onFileAdd","FILE_UPLOAD_PROGRESS","onFileUploadProgress","FILE_UPLOAD_COMPLETE","onFileUploadComplete","ERROR","onFileUploadError","FILE_ERROR","MAX_FILE_COUNT_EXCEEDED","onMaxFileCountExceeded","UPLOAD_COMPLETE","removeFilesFromServer","start","setAutoUpload","addFiles","tasks","addedFiles","task","unsubscribe","addFile","tempFileId","customData","sendAsFile","onFileUploadCancel","uploaderList","getFile","remove","UploadingService","addFilesFromClipboard","clipboardData","getFilesFromDataTransfer","imagesOnly","isImage","addFilesFromInput","filesForUploader","messageWithFile","uploadFileFromDisk","commitFile","temporaryFileId","realFileId","fromDisk","checkDiskFolderId","messageText","fileIdParams","disk_id","upload_id","imDiskFileCommit","template_id","file_template_id","as_file","FileStatus","sendSeparateMessagesWithFiles","getFileTypeByExtension","ext","extension","sizeInt","wait","progress","authorName","getId","getProgress","upload","getServerFileId","imDiskFolderGet","ID","commit","getBinary","FileType","previewFile","getClientPreview","setCustomData","formData","FormData","append","getName","imDiskFilePreviewUpload","taskId","fileBinary","previewData","isFailed","getSize","blob","getPreviewUrl","getPreviewWidth","getPreviewHeight","image","urlPreview","urlShow","URL","createObjectURL","fileType","video","split","splice","filesPreviewStatus","autoUploadFlag","messagesToSend","hasText","getError","wasSent","every","getCode","getDescription","SettingsService","changeSetting","settingName","imV2SettingsGeneralUpdate","LinesService","getDialogIdByUserCode","userCode","linesDialogGet","USER_CODE","CopilotService","chatService","Analytics"],"mappings":";;;;;;;;CAGmF;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAmBnF,CAAO,MAAMA,mBAAmB,CAChC;GAUCC,WAAW,CAACC,MAA8D,EAC1E;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA,OAPoC;;KAAE;OAAA;OAAA,OACF;;KAAE;OAAA;OAAA,OACI;;KAAE;OAAA;OAAA,OACL;;KAAE;OAAA;OAAA,OACO;;KAI/C,MAAM;OAAEC,OAAO;OAAEC,aAAa,GAAG;MAAM,GAAGF,MAAM;KAChD,4CAAI,oCAAkBE,aAAa;KACnC,4CAAI,8BAAeD,OAAO;;GAG3BE,QAAQ,GACR;KACC,MAAM;OAAEC,KAAK,GAAG;MAAI,2CAAG,IAAI,2BAAY;KACvCA,KAAK,CAACC,OAAO,CAAEC,IAAmB,IAAK;OACtC,4CAAI,8BAAcA,IAAI;OACtB,4CAAI,8BAAcA,IAAI;OACtB,4CAAI,oCAAiBA,IAAI;OACzB,4CAAI,0CAAoBA,IAAI;MAC5B,CAAC;KAEF,4CAAI;KAEJ,OAAO;OACNC,KAAK,EAAEC,MAAM,CAACC,MAAM,yCAAC,IAAI,kBAAQ;OACjCC,KAAK,EAAEF,MAAM,CAACC,MAAM,yCAAC,IAAI,kBAAQ;OACjCE,QAAQ,EAAEH,MAAM,CAACC,MAAM,yCAAC,IAAI,wBAAW;OACvCG,KAAK,EAAEJ,MAAM,CAACC,MAAM,yCAAC,IAAI,kBAAQ;OACjCI,WAAW,EAAEL,MAAM,CAACC,MAAM,yCAAC,IAAI;MAC/B;;CAuJH;CAAC,uBApJaH,IAAmB,EAChC;GAAA;GACC,IAAI,cAAAA,IAAI,CAACQ,IAAI,aAAT,WAAWC,EAAE,IAAI,CAAC,4CAAI,kBAAQT,IAAI,CAACQ,IAAI,CAACC,EAAE,CAAC,EAC/C;KACC,4CAAI,kBAAQT,IAAI,CAACQ,IAAI,CAACC,EAAE,CAAC,GAAGT,IAAI,CAACQ,IAAI;;CAEvC;CAAC,uBAEYR,IAAmB,EAChC;GACC,IAAIA,IAAI,CAACU,IAAI,EACb;KACC,4CAAI,kBAAQV,IAAI,CAACS,EAAE,CAAC,2CAAG,IAAI,wCAAmBT,IAAI,CAAC;KAEnD,IAAIA,IAAI,CAACQ,IAAI,CAACC,EAAE,IAAI,CAAC,4CAAI,kBAAQT,IAAI,CAACQ,IAAI,CAACC,EAAE,CAAC,EAC9C;OACC,4CAAI,kBAAQT,IAAI,CAACQ,IAAI,CAACC,EAAE,CAAC,2CAAG,IAAI,gEAA+BT,IAAI,CAACQ,IAAI,CAAC;;IAE1E,MACI,IAAIR,IAAI,CAACQ,IAAI,CAACC,EAAE,EACrB;KACC,MAAME,kBAAkB,GAAGC,2BAAI,CAACC,QAAQ,EAAE,CAACC,OAAO,CAAC,YAAY,CAAC,CAACd,IAAI,CAACQ,IAAI,CAACC,EAAE,CAAC;;KAE9E,IAAI,CAACE,kBAAkB,IAAI,CAACX,IAAI,CAACe,OAAO,CAACC,mBAAmB,EAC5D;OACC,4CAAI,kBAAQhB,IAAI,CAACQ,IAAI,CAACC,EAAE,CAAC,2CAAG,IAAI,4CAAqBT,IAAI,CAAC;;;CAG7D;CAAC,0BAEeA,IAAmB,EACnC;GACC,MAAMiB,OAAO,GAAGjB,IAAI,CAACiB,OAAO;GAC5B,IAAI,CAACA,OAAO,EACZ;KACC;;GAGD,IAAIA,OAAO,CAACR,EAAE,KAAK,CAAC,EACpB;KACCQ,OAAO,CAACR,EAAE,GAAI,GAAES,6BAAkB,IAAGlB,IAAI,CAACS,EAAG,EAAC;;GAG/C,IAAIU,cAAc,GAAG,KAAK;GAC1B,IAAIF,OAAO,CAACG,MAAM,KAAKC,yBAAa,CAACC,SAAS,EAC9C;KACCH,cAAc,GAAG,IAAI;;GAGtB,IAAII,cAAI,CAACC,aAAa,CAACP,OAAO,CAACQ,IAAI,CAAC,EACpC;KACC,MAAMA,IAAgB,GAAGR,OAAO,CAACQ,IAAI;KACrCR,OAAO,CAACX,KAAK,GAAG,CAACmB,IAAI,CAAChB,EAAE,CAAC;KAEzB,MAAMiB,YAAY,GAAGd,2BAAI,CAACC,QAAQ,EAAE,CAACC,OAAO,CAAC,WAAW,CAAC,CAACW,IAAI,CAAChB,EAAE,CAAC;;KAElE,IAAI,CAACiB,YAAY,EACjB;OACC,4CAAI,kBAAQD,IAAI,CAAChB,EAAE,CAAC,GAAGgB,IAAI;;;GAI7B,MAAME,eAA+B,GAAGf,2BAAI,CAACC,QAAQ,EAAE,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAACG,OAAO,CAACR,EAAE,CAAC;;GAE/F,IAAIc,cAAI,CAACK,aAAa,CAACD,eAAe,oBAAfA,eAAe,CAAEE,MAAM,CAAC,EAC/C;KACC,OAAOZ,OAAO,CAACY,MAAM;;GAGtB,4CAAI,wBAAWZ,OAAO,CAACR,EAAE,CAAC,GAAG;KAAE,GAAGQ,OAAO;KAAEE;IAAgB;CAC5D;CAAC,6BAEkBnB,IAAmB,EACtC;GAAA;GACC,MAAM8B,SAAS,wCAAG9B,IAAI,CAACiB,OAAO,qBAAZ,cAAcR,EAAE,+BAAI,CAAC;GACvC,4CAAI,8BAAcT,IAAI,CAACS,EAAE,CAAC,GAAG;KAAE,GAAGT,IAAI;KAAE8B;IAAW;CACpD;CAAC,kCAGD;GACC,IAAI,yCAAC,IAAI,iCAAe,EACxB;KACC;;GAGD,MAAM;KAAEC,YAAY,GAAG;IAAI,2CAAG,IAAI,2BAAY;GAC9CA,YAAY,CAAChC,OAAO,CAAEC,IAAI,IAAK;KAC9B,IAAI,CAAC,4CAAI,kBAAQA,IAAI,CAACS,EAAE,CAAC,EACzB;OACC,4CAAI,kBAAQT,IAAI,CAACS,EAAE,CAAC,GAAGT,IAAI;;KAG5B,IAAI,CAAC,4CAAI,kBAAQA,IAAI,CAACS,EAAE,CAAC,EACzB;OACC,4CAAI,kBAAQT,IAAI,CAACS,EAAE,CAAC,2CAAG,IAAI,gEAA+BT,IAAI,CAAC;;KAGhE,IAAI,CAAC,4CAAI,8BAAcA,IAAI,CAACS,EAAE,CAAC,EAC/B;OACC,MAAMqB,SAAS,GAAI,GAAEZ,6BAAkB,IAAGlB,IAAI,CAACS,EAAG,EAAC;OACnD,4CAAI,8BAAcT,IAAI,CAACS,EAAE,CAAC,GAAG;SAAE,2CAAG,IAAI,oDAAyBT,IAAI,CAAC;SAAE8B;QAAW;OACjF,4CAAI,wBAAWA,SAAS,CAAC,GAAG;SAAErB,EAAE,EAAEqB;QAAW;;IAE9C,CAAC;CACH;CAAC,4BAEiB9B,IAAmB,EACrC;GACC,OAAO;KACN,GAAGA,IAAI,CAACU,IAAI;KACZsB,OAAO,EAAEhC,IAAI,CAACgC,OAAO;KACrBC,QAAQ,EAAEjC,IAAI,CAACS;IACf;CACF;CAAC,8BAEmBT,IAAmB,EACvC;GACC,OAAO;KACNkC,MAAM,EAAElC,IAAI,CAACmC,OAAO;KACpBC,MAAM,EAAEpC,IAAI,CAACQ,IAAI,CAAC4B,MAAM;KACxBC,KAAK,EAAErC,IAAI,CAACQ,IAAI,CAAC6B,KAAK;KACtBJ,QAAQ,EAAEjC,IAAI,CAACS,EAAE;KACjB6B,IAAI,EAAEtC,IAAI,CAACQ,IAAI,CAAC8B,IAAI;KACpBC,IAAI,EAAEC,oBAAQ,CAAChC,IAAI;KACnBwB,OAAO,EAAEhC,IAAI,CAACgC,OAAO;KACrBS,IAAI,EAAEC,oBAAQ,CAACC;IACf;CACF;CAAC,wCAE6BnC,IAAa,EAC3C;GACC,OAAO;KACNyB,QAAQ,EAAEzB,IAAI,CAACC,EAAE;KACjB2B,MAAM,EAAE5B,IAAI,CAAC4B,MAAM;KACnBC,KAAK,EAAE7B,IAAI,CAAC6B,KAAK;KACjBC,IAAI,EAAE9B,IAAI,CAAC8B,IAAI;KACfC,IAAI,EAAEC,oBAAQ,CAAChC,IAAI;KACnBiC,IAAI,EAAEC,oBAAQ,CAACC;IACf;CACF;CAAC,kCAEuB3C,IAAmB,EAC3C;GACC,OAAO;KACNS,EAAE,EAAET,IAAI,CAACS,EAAE;KACXmC,qBAAqB,EAAE;IACvB;CACF;;CCtMM,MAAMC,aAAa,CAC1B;GAAA;KAAA,KAGCC,eAAe,GAAY,KAAK;KAAA,KAChCC,iBAAiB,GAAY,KAAK;KAAA,KAClCC,YAAY,GAAW,EAAE;KAAA,KACzBC,SAAS,GAAY,KAAK;KAAA,KAC1BC,WAAW,GAAW,CAAC;KAAA,KACvBC,kBAAkB,GAAY,IAAI;KAAA,KAClCC,eAAe,GAAW,IAAI;;GAE9B,OAAOC,WAAW,GAClB;KACC,IAAI,CAAC,IAAI,CAACC,QAAQ,EAClB;OACC,IAAI,CAACA,QAAQ,GAAG,IAAI,IAAI,EAAE;;KAG3B,OAAO,IAAI,CAACA,QAAQ;;;;GAIrBC,aAAa,GACb;KACC,OAAO3C,2BAAI,CAACC,QAAQ,EAAE,CAACC,OAAO,CAAC,4BAA4B,CAAC;;GAG7D,MAAM0C,aAAa,CAAC;KAAEC,oBAAoB,GAAG;IAAO,GAAG,EAAE,EACzD;KACC,IAAI,IAAI,CAACX,eAAe,IAAI,CAACW,oBAAoB,EACjD;OACCC,uBAAM,CAACC,IAAI,CAAC,yCAAyC,CAAC;OAEtD,OAAOC,OAAO,CAACC,OAAO,EAAE;;KAEzB,IAAI,CAACZ,SAAS,GAAG,IAAI;KAErB,MAAMa,MAAM,GAAG,MAAM,IAAI,CAACC,YAAY,CAAC;OAAEC,SAAS,EAAE;MAAM,CAAC;KAC3D,IAAI,CAACjB,iBAAiB,GAAG,IAAI;KAE7B,OAAOe,MAAM;;GAGdG,YAAY,GACZ;KACC,IAAI,IAAI,CAAChB,SAAS,IAAI,CAAC,IAAI,CAACE,kBAAkB,EAC9C;OACC,OAAOS,OAAO,CAACC,OAAO,EAAE;;KAGzB,IAAI,CAACZ,SAAS,GAAG,IAAI;KAErB,OAAO,IAAI,CAACc,YAAY,EAAE;;GAG3BG,gBAAgB,CAACxE,MAAM,EACvB;KACCgE,uBAAM,CAACC,IAAI,CAAC,uCAAuC,EAAEjE,MAAM,CAAC;KAC5D,MAAM;OAAEI,KAAK;OAAEqE;MAAS,GAAGzE,MAAM;KAEjC,IAAI,CAAC0D,eAAe,GAAG,IAAI,CAACgB,kBAAkB,CAACtE,KAAK,CAAC;KAErD,IAAI,CAACqE,OAAO,EACZ;OACC,IAAI,CAAChB,kBAAkB,GAAG,KAAK;;KAGhC,IAAI,CAACL,eAAe,GAAG,IAAI;KAE3B,IAAI,CAACuB,YAAY,CAAC3E,MAAM,CAAC;;GAG1B4E,QAAQ,CAACrC,QAAQ,EACjB;KACCyB,uBAAM,CAACC,IAAI,CAAC,0BAA0B,EAAE1B,QAAQ,CAAC;KACjD,MAAMsC,UAAU,GAAG3D,2BAAI,CAACC,QAAQ,EAAE,CAACC,OAAO,CAAC,YAAY,CAAC,CAACmB,QAAQ,CAAC;KAClE,IAAI,CAACsC,UAAU,EACf;OACC;;KAGD3D,2BAAI,CAACC,QAAQ,EAAE,CAAC2D,QAAQ,CAAC,eAAe,EAAE;OACzC/D,EAAE,EAAEwB;MACJ,CAAC;KAEF,MAAMwC,YAAY,GAAG7D,2BAAI,CAACC,QAAQ,EAAE,CAACC,OAAO,CAAC,wBAAwB,CAAC,CAACmB,QAAQ,CAAC;KAChF,IAAIwC,YAAY,EAChB;OACCC,mBAAS,CAACC,QAAQ,EAAE;;KAGrB/D,2BAAI,CAACgE,aAAa,EAAE,CAACC,UAAU,CAACC,sBAAU,CAACC,YAAY,EAAE;OAAEC,SAAS,EAAE/C;MAAU,CAAC,CAC/EgD,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,CAAC;;;;GAIJ,MAAMnB,YAAY,CAAC;KAAEC,SAAS,GAAG;IAAO,GAAG,EAAE,EAC7C;KACC,MAAMoB,WAAW,GAAG,IAAI,CAACC,cAAc,CAACrB,SAAS,CAAC;KAElD,MAAMF,MAAM,GAAG,MAAMlD,2BAAI,CAACgE,aAAa,EAAE,CAACC,UAAU,CAAC,IAAI,CAACS,cAAc,EAAE,EAAEF,WAAW,CAAC,CACtFH,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,CAAC;KAEH,IAAI,CAAChC,WAAW,EAAE;KAClBQ,uBAAM,CAACC,IAAI,CAAE,kBAAiBK,SAAS,GAAG,OAAO,GAAG,IAAI,CAACd,WAAY,sBAAqB,EAAEY,MAAM,CAACyB,IAAI,EAAE,CAAC;KAC1G,MAAM;OAAEzF,KAAK;OAAEqE;MAAS,GAAGL,MAAM,CAACyB,IAAI,EAAE;KACxC,IAAI,CAACnC,eAAe,GAAG,IAAI,CAACgB,kBAAkB,CAACtE,KAAK,CAAC;KACrD,IAAI,CAACqE,OAAO,EACZ;OACC,IAAI,CAAChB,kBAAkB,GAAG,KAAK;;KAGhC,IAAI,CAACF,SAAS,GAAG,KAAK;KAEtB,OAAO,IAAI,CAACoB,YAAY,CAACP,MAAM,CAACyB,IAAI,EAAE,CAAC;;GAGxCD,cAAc,GACd;KACC,OAAOR,sBAAU,CAACU,YAAY;;GAG/BH,cAAc,CAACrB,SAAkB,EACjC;KACC,OAAO;OACNyB,cAAc,EAAE,GAAG;OACnBC,KAAK,EAAE,IAAI,CAAC1C,YAAY;OACxB2C,iBAAiB,EAAE3B,SAAS,GAAG,IAAI,GAAG,IAAI,CAACZ,eAAe;OAC1DwC,iBAAiB,EAAE,GAAG;OACtBC,UAAU,EAAE;MACZ;;GAGFC,kBAAkB,GAClB;KACC,OAAO,kBAAkB;;GAG1BzB,YAAY,CAAC1E,OAAO,EACpB;KACC,MAAMoG,SAAS,GAAG,IAAIvG,mBAAmB,CAAC;OAAEG,OAAO;OAAE,GAAG,IAAI,CAACqG,mBAAmB;MAAI,CAAC;KACrF,MAAMC,cAAc,GAAGF,SAAS,CAAClG,QAAQ,EAAE;KAC3C,MAAM;OACLI,KAAK;OACLG,KAAK;OACLC,QAAQ;OACRC,KAAK;OACLC;MACA,GAAG0F,cAAc;KAClBvC,uBAAM,CAACC,IAAI,CAAC,yCAAyC,EAAEsC,cAAc,CAAC;KAEtE,MAAMC,YAAY,GAAGtF,2BAAI,CAACC,QAAQ,EAAE,CAAC2D,QAAQ,CAAC,WAAW,EAAEvE,KAAK,CAAC;KACjE,MAAMkG,gBAAgB,GAAGvF,2BAAI,CAACC,QAAQ,EAAE,CAAC2D,QAAQ,CAAC,WAAW,EAAEpE,KAAK,CAAC;KACrE,MAAMgG,eAAe,GAAGxF,2BAAI,CAACC,QAAQ,EAAE,CAAC2D,QAAQ,CAAC,gBAAgB,EAAEnE,QAAQ,CAAC;KAC5E,MAAMgG,YAAY,GAAGzF,2BAAI,CAACC,QAAQ,EAAE,CAAC2D,QAAQ,CAAC,WAAW,EAAElE,KAAK,CAAC;KACjE,MAAMgG,aAAa,GAAG1F,2BAAI,CAACC,QAAQ,EAAE,CAAC2D,QAAQ,CAAC,IAAI,CAACsB,kBAAkB,EAAE,EAAEvF,WAAW,CAAC;KAEtF,OAAOqD,OAAO,CAAC2C,GAAG,CAAC,CAACL,YAAY,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,YAAY,EAAEC,aAAa,CAAC,CAAC;;GAGnGlC,kBAAkB,CAACtE,KAAY,EAC/B;KACC,IAAIA,KAAK,CAAC0G,MAAM,KAAK,CAAC,EACtB;OACC,OAAO,EAAE;;KAGV,OAAO1G,KAAK,CAAC2G,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACxF,OAAO,CAACyF,IAAI;;GAGvCV,mBAAmB,GACnB;KACC,OAAO,EAAE;;CAEX;CArLanD,aAAa,CAElBS,QAAQ,GAAG,IAAI;;CCXsB;AAc7C,CAAO,MAAMqD,iBAAiB,CAC9B;GAGClH,WAAW,CAACmH,UAA8B,EAC1C;KAAA;OAAA;OAAA;;KACC,4CAAI,kCAAeA,UAAU;;GAG9BC,SAAS,GACT;KACC,OAAO,4CAAI,gCAAanG,IAAI,CAACD,EAAE;;GAGhCqG,WAAW,GACX;KACC,OAAO,4CAAI,gCAAapG,IAAI,CAACuB,QAAQ;;GAGtC8E,eAAe,GACf;KACC,OAAO,4CAAI,gCAAarG,IAAI,CAAC6B,IAAI,KAAKC,oBAAQ,CAACwE,KAAK;;GAGrDC,aAAa,GACb;KACC,OAAO,4CAAI,gCAAavG,IAAI,CAAC6B,IAAI,KAAKC,oBAAQ,CAAC0E,OAAO;;GAGvDC,QAAQ,GACR;KACC,MAAMC,QAAQ,GAAG;OAChB,GAAG,4CAAI,gCAAa1G,IAAI;OACxB2G,WAAW,EAAE,4CAAI,gCAAaA,WAAW;OACzCC,WAAW,EAAE,4CAAI,gCAAaA;MAC9B;KACD,MAAMlH,KAAK,GAAG;OACb,CAAC,4CAAI,gCAAaM,IAAI,CAACuB,QAAQ,GAAGmF;MAClC;KACD,4CAAI,gCAAanH,KAAK,CAACF,OAAO,CAAES,IAAI,IAAK;OACxC,IAAIJ,KAAK,CAACI,IAAI,CAACC,EAAE,CAAC,EAClB;SACCL,KAAK,CAACI,IAAI,CAACC,EAAE,CAAC,GAAG;WAAE,GAAGL,KAAK,CAACI,IAAI,CAACC,EAAE,CAAC;WAAE,GAAG8G,0BAAW,CAACC,gBAAgB,CAAChH,IAAI;UAAG;QAC7E,MAED;SACCJ,KAAK,CAACI,IAAI,CAACC,EAAE,CAAC,GAAG8G,0BAAW,CAACC,gBAAgB,CAAChH,IAAI,CAAC;;MAEpD,CAAC;KAEF,OAAON,MAAM,CAACC,MAAM,CAACC,KAAK,CAAC;;GAG5BqH,QAAQ,GACR;KAAA;KACC,gCAAO,4CAAI,gCAAanH,KAAK,oCAAI,EAAE;;GAGpCoH,QAAQ,GACR;KAAA;KACC,iCAAO,4CAAI,gCAAazH,KAAK,qCAAI,EAAE;;GAGpC0H,kBAAkB,GAClB;KAAA;KACC,iCAAO,4CAAI,gCAAaC,UAAU,qCAAI,EAAE;;GAGzCC,WAAW,GACX;KAAA;KACC,iCAAO,4CAAI,gCAAaxH,QAAQ,qCAAI,EAAE;;GAGvCyH,cAAc,GACd;KAAA;KACC,iCAAO,4CAAI,gCAAaC,WAAW,qCAAI,EAAE;;GAG1CC,kBAAkB,GAClB;KAAA;KACC,iCAAO,4CAAI,gCAAaC,kBAAkB,qCAAI,EAAE;;GAGjDC,mBAAmB,GACnB;KAAA;KACC,MAAMC,gBAAgB,GAAG,EAAE;KAC3B,MAAMC,IAAc,6BAAG,4CAAI,gCAAaA,IAAI,qCAAI,EAAE;KAClDA,IAAI,CAACrI,OAAO,CAAEsI,GAAG,IAAK;OACrBF,gBAAgB,CAACG,IAAI,CAACD,GAAG,CAACvG,SAAS,CAAC;MACpC,CAAC;KAEF,OAAOqG,gBAAgB;;GAGxBI,YAAY,GACZ;KAAA;KACC,iCAAO,4CAAI,gCAAaC,SAAS,qCAAI,EAAE;;CAEzC;;CCpG2D;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAU3D,CAAO,MAAMC,WAAW,CACxB;GAGChJ,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,oBAAUmB,2BAAI,CAACC,QAAQ,EAAE;;GAG9B6H,QAAQ,CAACzG,QAAgB,EACzB;KACC,MAAMvC,MAAM,GAAG;OAAEuC;MAAU;KAE3B,+CAAO,IAAI,8BAAc6C,sBAAU,CAAC6D,mBAAmB,EAAEjJ,MAAM;;GAGhEkJ,oBAAoB,CAAC3G,QAAgB,EACrC;KACC,MAAMvC,MAAM,GAAG;OACduC,QAAQ;OACR4G,YAAY,EAAEC,qCAAc,CAACC,sBAAsB;MACnD;KAED,+CAAO,IAAI,8BAAcjE,sBAAU,CAACkE,YAAY,EAAEtJ,MAAM;;GAGzDuJ,mBAAmB,CAAChH,QAAgB,EAAEH,SAAiB,EACvD;KACC,MAAMpC,MAAM,GAAG;OACduC,QAAQ;OACRH,SAAS;OACT+G,YAAY,EAAEC,qCAAc,CAACC,sBAAsB;MACnD;KAED,+CAAO,IAAI,8BAAcjE,sBAAU,CAACoE,qBAAqB,EAAExJ,MAAM;;GAGlEyJ,eAAe,CAAClH,QAAgB,EAChC;KACC,IAAI,CAACmH,qBAAK,CAACC,MAAM,CAACC,YAAY,CAACrH,QAAQ,CAAC,EACxC;OACC,OAAO2B,OAAO,CAACC,OAAO,CAAC5B,QAAQ,CAAC;;KAGjC,OAAOsH,wBAAS,CAACzE,sBAAU,CAAC0E,mBAAmB,EAAE;OAChDjE,IAAI,EAAE;SAAEkE,UAAU,EAAExH;;MACpB,CAAC,CACAyH,IAAI,CAAE5F,MAA0B,IAAK;OACrC,OAAOA,MAAM,CAAC7B,QAAQ;MACtB,CAAC,CACDgD,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;MACtE,CAAC;;GAGJ,MAAMyE,YAAY,CAACC,MAAc,EACjC;KACC,MAAMlK,MAAM,GAAG;OACdkK,MAAM;OACNf,YAAY,EAAEC,qCAAc,CAACC,sBAAsB,EAAE;OACrDc,QAAQ,EAAE,IAAI;OACdC,iBAAiB,EAAE;MACnB;KAED,MAAM;OAAE5H;MAAQ,GAAG,8CAAM,IAAI,8BAAc4C,sBAAU,CAACkE,YAAY,EAAEtJ,MAAM,CAAC;KAE3E,OAAO,4CAAI,kBAAQ8E,QAAQ,CAAC,uBAAuB,EAAE;OACpD1C,SAAS,EAAE8H,MAAM;OACjB1H;MACA,CAAC;;GAGH,MAAM6H,eAAe,CAACC,eAAuB,EAC7C;KACC,MAAMX,MAAmB,GAAG,4CAAI,kBAAQvI,OAAO,CAAC,WAAW,CAAC,CAACkJ,eAAe,EAAE,IAAI,CAAC;KACnF,MAAM3J,QAAQ,GAAG,4CAAI,kBAAQS,OAAO,CAAC,sBAAsB,CAAC,CAACuI,MAAM,CAACnH,MAAM,CAAC;KAC3E,MAAM+H,UAAU,GAAG5J,QAAQ,CAAC6J,GAAG,CAAEjJ,OAAuB,IAAKA,OAAO,CAACR,EAAE,CAAC;KACxE,MAAM;OAAEsH,WAAW;OAAEH;MAAmC,GAAG,MAAM2B,wBAAS,CACzEzE,sBAAU,CAACqF,8BAA8B,EACzC;OAAE5E,IAAI,EAAE;SAAE0E;;MAAc,CACxB,CACChF,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrE,CAAC;KAEH,MAAMkF,WAAW,GAAG,IAAI7C,0BAAW,EAAE;KAErC,KAAK,4CAAI,kBAAQ/C,QAAQ,CAAC,uBAAuB,EAAEuD,WAAW,CAAC;KAC/D,KAAKqC,WAAW,CAACC,eAAe,CAACzC,UAAU,CAAC;;GAG7C0C,SAAS,CAACrI,QAAgB,EAC1B;KACC,MAAMoH,MAAmB,GAAG,4CAAI,kBAAQvI,OAAO,CAAC,WAAW,CAAC,CAACmB,QAAQ,EAAE,IAAI,CAAC;KAC5E,4CAAI,kBAAQuC,QAAQ,CAAC,8BAA8B,EAAE;OAAEtC,MAAM,EAAEmH,MAAM,CAACnH;MAAQ,CAAC;KAC/E,4CAAI,kBAAQsC,QAAQ,CAAC,cAAc,EAAE;OACpCvC,QAAQ;OACRsI,MAAM,EAAE;SAAEC,MAAM,EAAE;;MAClB,CAAC;;CA+IJ;CAAC,6BA5ImBC,UAAkB,EAAE/K,MAA2B,EAClE;GACC,MAAM;KAAEuC,QAAQ;KAAEH;IAAW,GAAGpC,MAAM;GACtC,4CAAI,8CAAsBuC,QAAQ;GAElC,MAAMyI,YAAY,GAAG,MAAMnB,wBAAS,CAACkB,UAAU,EAAE;KAAElF,IAAI,EAAE7F;IAAQ,CAAC,CAChEuF,KAAK,CAAEC,KAAK,IAAK;;KAEjBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;KAC7D,4CAAI,kDAAwBjD,QAAQ;KACpC,MAAMiD,KAAK;IACX,CAAC;GAEH,4CAAI,IAAI,4CAAqBwF,YAAY,GACzC;KACC,+CAAO,IAAI,wCAAmBA,YAAY,EAAE5I,SAAS;;GAGtD,MAAM;KACLG,QAAQ,EAAE0I,cAAc;KACxBzI;IACA,GAAG,8CAAM,IAAI,gCAAewI,YAAY,CAAC;GAE1C,4CAAI,IAAI,wDAA2BD,UAAU,GAC7C;KACC,8CAAM,IAAI,4CAAqBE,cAAc,CAAC;;GAG/C,OAAO;KAAE1I,QAAQ,EAAE0I,cAAc;KAAEzI;IAAQ;CAC5C;CAAC,+BAEoBD,QAAgB,EACrC;GACC,4CAAI,kBAAQuC,QAAQ,CAAC,cAAc,EAAE;KACpCvC,QAAQ;KACRsI,MAAM,EAAE;OACPK,OAAO,EAAE;;IAEV,CAAC;CACH;CAAC,8BAEmB3I,QAAgB,EACpC;GACC,OAAO,4CAAI,kBAAQuC,QAAQ,CAAC,cAAc,EAAE;KAC3CvC,QAAQ;KACRsI,MAAM,EAAE;OACPC,MAAM,EAAE,IAAI;OACZI,OAAO,EAAE;;IAEV,CAAC;CACH;CAAC,iCAEsB3I,QAAgB,EACvC;GACC,OAAO,4CAAI,kBAAQuC,QAAQ,CAAC,cAAc,EAAE;KAC3CvC,QAAQ;KACRsI,MAAM,EAAE;OACPK,OAAO,EAAE;;IAEV,CAAC;CACH;CAAC,oCAEyBH,UAAkB,EAC5C;GACC,OAAOA,UAAU,KAAK3F,sBAAU,CAAC6D,mBAAmB;CACrD;CAAC,8BAEmB/B,UAA8B,EAClD;GACC,MAAMb,SAAS,GAAG,IAAIY,iBAAiB,CAACC,UAAU,CAAC;GAEnD,MAAMiE,YAAY,GAAG,4CAAI,kBAAQrG,QAAQ,CAAC,WAAW,EAAEuB,SAAS,CAACoB,QAAQ,EAAE,CAAC;GAC5E,MAAMd,YAAY,GAAG,4CAAI,kBAAQ7B,QAAQ,CAAC,WAAW,EAAEuB,SAAS,CAAC0B,QAAQ,EAAE,CAAC;GAE5E,MAAM2C,WAAW,GAAG,IAAI7C,0BAAW,EAAE;GACrC,MAAMrB,YAAY,GAAGtC,OAAO,CAAC2C,GAAG,CAAC,CAChC,4CAAI,kBAAQ/B,QAAQ,CAAC,WAAW,EAAEuB,SAAS,CAAC2B,QAAQ,EAAE,CAAC,EACvD0C,WAAW,CAACC,eAAe,CAACtE,SAAS,CAAC4B,kBAAkB,EAAE,CAAC,CAC3D,CAAC;GACF,MAAMvB,eAAe,GAAGxC,OAAO,CAAC2C,GAAG,CAAC,CACnC,4CAAI,kBAAQ/B,QAAQ,CAAC,4BAA4B,EAAE;KAClDnE,QAAQ,EAAE0F,SAAS,CAAC8B,WAAW,EAAE;KACjCiD,eAAe,EAAE;IACjB,CAAC,EACF,4CAAI,kBAAQtG,QAAQ,CAAC,gBAAgB,EAAEuB,SAAS,CAACiC,kBAAkB,EAAE,CAAC,EACtE,4CAAI,kBAAQxD,QAAQ,CAAC,wBAAwB,EAAE;KAC9CtC,MAAM,EAAE6D,SAAS,CAACc,SAAS,EAAE;KAC7BkE,cAAc,EAAEhF,SAAS,CAACmC,mBAAmB;IAC7C,CAAC,EACF,4CAAI,kBAAQ1D,QAAQ,CAAC,wBAAwB,EAAEuB,SAAS,CAACwC,YAAY,EAAE,CAAC,EACxE,4CAAI,kBAAQ/D,QAAQ,CAAC,uBAAuB,EAAEuB,SAAS,CAAC+B,cAAc,EAAE,CAAC,CACzE,CAAC;GAEF,MAAMlE,OAAO,CAAC2C,GAAG,CAAC,CACjBsE,YAAY,EACZxE,YAAY,EACZH,YAAY,EACZE,eAAe,CACf,CAAC;GAEF,OAAO;KAAEnE,QAAQ,EAAE8D,SAAS,CAACe,WAAW,EAAE;KAAE5E,MAAM,EAAE6D,SAAS,CAACc,SAAS;IAAI;CAC5E;CAAC,8BAEmB6D,YAAgC,EACpD;GACC,OAAO,4CAAI,8DAA8BA,YAAY,6CAAK,IAAI,kEAAgCA,YAAY,CAAC;CAC5G;CAAC,4BAEiBA,YAAgC,EAAEM,SAAiB,GAAG,CAAC,EACzE;GACC,MAAMjF,SAAS,GAAG,IAAIY,iBAAiB,CAAC+D,YAAY,CAAC;GACrDO,8BAAa,CAAC5H,WAAW,EAAE,CAAC6H,oBAAoB,CAACC,kBAAM,CAACzK,IAAI,CAAC4B,IAAI,EAAE,EAAE,CAAC;GAEtE,4CAAI,IAAI,8DAA8BoI,YAAY,GAClD;KACC,OAAOhG,mBAAS,CAAC0G,WAAW,CAACrF,SAAS,CAACe,WAAW,EAAE,EAAEkE,SAAS,CAAC;;GAGjE,4CAAI,IAAI,kEAAgCN,YAAY,GACpD;KACC,OAAOhG,mBAAS,CAAC2G,SAAS,CAACtF,SAAS,CAACe,WAAW,EAAE,CAAC;;GAGpD,OAAOlD,OAAO,CAACC,OAAO,EAAE;CACzB;CAAC,uCAE4B6G,YAAgC,EAC7D;GACC,MAAM3E,SAAS,GAAG,IAAIY,iBAAiB,CAAC+D,YAAY,CAAC;GACrD,MAAMY,iBAAiB,GAAGL,8BAAa,CAAC5H,WAAW,EAAE,CAACkI,SAAS,EAAE,CAACjJ,IAAI;GAEtE,OAAOyD,SAAS,CAACkB,aAAa,EAAE,IAAIqE,iBAAiB,KAAKH,kBAAM,CAACjE,OAAO,CAAC5E,IAAI;CAC9E;CAAC,yCAE8BoI,YAAgC,EAC/D;GACC,MAAM3E,SAAS,GAAG,IAAIY,iBAAiB,CAAC+D,YAAY,CAAC;GAErD,OAAO3E,SAAS,CAACgB,eAAe,EAAE,IAAIxF,cAAI,CAACiK,cAAc,CAACzF,SAAS,CAACe,WAAW,EAAE,CAAC;CACnF;;CC9PD,MAAM2E,YAAY,GAAG,MAAM;CAC3B,MAAMC,SAAS,GAAG,MAAM;CAAC;CAAA;CAAA;CAAA;AAEzB,CAAO,MAAMC,aAAa,CAC1B;GAIClM,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,8BAAemB,2BAAI,CAACgE,aAAa,EAAE;KACvC,4CAAI,wBAAUhE,2BAAI,CAACC,QAAQ,EAAE;;GAG9B,MAAM+K,UAAU,CAACC,UAAsB,EACvC;KACCnI,uBAAM,CAACC,IAAI,CAAC,yBAAyB,EAAEkI,UAAU,CAAC;KAElD,MAAMC,cAAc,GAAG,8CAAM,IAAI,kCAAgBD,UAAU,CAAC;KAE5D,MAAME,YAAwB,GAAG,MAAM,4CAAI,4BAAalH,UAAU,CAACC,sBAAU,CAACkH,WAAW,EAAE;OAC1FzB,MAAM,EAAEuB;MACR,CAAC,CAAC7G,KAAK,CAAEC,KAAK,IAAK;;OAEnBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;OACtD,MAAM,IAAI+G,KAAK,CAAC/G,KAAK,CAAC;MACtB,CAAC;KAEF,MAAM;OAAEhD,MAAM,EAAEgK;MAAW,GAAGH,YAAY,CAACxG,IAAI,EAAE;KAEjD7B,uBAAM,CAACC,IAAI,CAAC,gCAAgC,EAAEuI,SAAS,CAAC;KACxD,MAAMC,WAAW,GAAI,OAAMD,SAAU,EAAC;KACtC,4CAAI,oCAAiBC,WAAW,EAAEL,cAAc;KAEhD,OAAO;OAAEK,WAAW;OAAED;MAAW;;CA4EnC;CAAC,+BAzEqBL,UAAsB,EAC3C;GAAA;GACC,MAAMO,cAAc,GAAG;KAAE,GAAGP;IAAY;GACxC,IAAIO,cAAc,CAAChK,MAAM,EACzB;KACCgK,cAAc,CAAChK,MAAM,GAAG,MAAMgH,qBAAK,CAAC3H,IAAI,CAAC4K,SAAS,CAACR,UAAU,CAACzJ,MAAM,CAAC;;GAGtEgK,cAAc,CAACE,QAAQ,4BAAGF,cAAc,CAACE,QAAQ,oCAAI,EAAE;GACvDF,cAAc,CAACG,OAAO,4BAAGH,cAAc,CAACG,OAAO,oCAAI,EAAE;GACrD,MAAMC,UAAU,GAAG,CAAC,GAAGJ,cAAc,CAACG,OAAO,EAAE,GAAGH,cAAc,CAACE,QAAQ,CAAC;GAC1E,IAAIF,cAAc,CAACK,OAAO,EAC1B;KACCD,UAAU,CAAClE,IAAI,CAAC8D,cAAc,CAACK,OAAO,CAAC;;GAExCL,cAAc,CAACG,OAAO,GAAG,CAAC,GAAG,IAAIG,GAAG,CAACF,UAAU,CAAC,CAAC;GAEjD,MAAM1I,MAAM,GAAG;KACdvB,IAAI,0BAAE6J,cAAc,CAAC7J,IAAI,qBAAnB,qBAAqBoK,WAAW,EAAE;KACxCC,UAAU,2BAAER,cAAc,CAACQ,UAAU,qBAAzB,sBAA2BD,WAAW,EAAE;KACpDE,KAAK,EAAET,cAAc,CAACS,KAAK;KAC3BzK,MAAM,EAAEgK,cAAc,CAAChK,MAAM;KAC7B0K,WAAW,EAAEV,cAAc,CAACU,WAAW;KACvC7M,KAAK,EAAEmM,cAAc,CAACG,OAAO;KAC7BD,QAAQ,EAAEF,cAAc,CAACE,QAAQ;KACjCG,OAAO,EAAEL,cAAc,CAACK,OAAO;KAC/BM,UAAU,EAAEX,cAAc,CAACY,mBAAmB,GAAG,GAAG,GAAG,GAAG;KAC1DC,cAAc,EAAEb,cAAc,CAACa,cAAc;KAC7CC,iBAAiB,EAAEd,cAAc,CAACc,iBAAiB;KACnDC,QAAQ,EAAEf,cAAc,CAACe,QAAQ;KACjCC,cAAc,EAAEhB,cAAc,CAACgB,cAAc;KAC7CC,cAAc,EAAEjB,cAAc,CAACiB,cAAc;KAC7CC,kBAAkB,EAAElB,cAAc,CAACkB;IACnC;GAEDpN,MAAM,CAACqN,OAAO,CAACzJ,MAAM,CAAC,CAAC/D,OAAO,CAAC,CAAC,CAACyN,GAAG,EAAEC,KAAK,CAAC,KAAK;KAChD,IAAIlM,cAAI,CAACmM,WAAW,CAACD,KAAK,CAAC,EAC3B;OACC,OAAO3J,MAAM,CAAC0J,GAAG,CAAC;;IAEnB,CAAC;GAEF,OAAO1J,MAAM;CACd;CAAC,0BAEeqI,WAAmB,EAAEN,UAA0B,EAC/D;GACC,IAAI8B,QAAQ,GAAG9B,UAAU,CAACkB,UAAU,KAAK,GAAG,GAAGrB,SAAS,GAAGD,YAAY;GACvE,IAAIlK,cAAI,CAACiK,cAAc,CAACK,UAAU,CAACe,UAAU,CAAC,EAC9C;KACCe,QAAQ,GAAG9B,UAAU,CAACe,UAAU,CAACgB,WAAW,EAAE;;GAG/C,IAAIrM,cAAI,CAACiK,cAAc,CAACK,UAAU,CAACtJ,IAAI,CAAC,EACxC;KACCoL,QAAQ,GAAG9B,UAAU,CAACtJ,IAAI,CAACqL,WAAW,EAAE;;GAGzC,4CAAI,sBAAQpJ,QAAQ,CAAC,WAAW,EAAE;KACjCvC,QAAQ,EAAEkK,WAAW;KACrB5J,IAAI,EAAEoL,QAAQ,CAACC,WAAW,EAAE;KAC5BtL,IAAI,EAAEuJ,UAAU,CAACgB,KAAK;KACtBgB,WAAW,EAAEhC,UAAU,CAAC5L,KAAK,CAACuG,MAAM;KACpC/D,IAAI,EAAEC,oBAAQ,CAACoL,KAAK;KACpBC,WAAW,EAAE;OACZZ,QAAQ,EAAEtB,UAAU,CAACsB,QAAQ;OAC7BC,cAAc,EAAEvB,UAAU,CAACuB,cAAc;OACzCH,cAAc,EAAEpB,UAAU,CAACoB,cAAc;OACzCC,iBAAiB,EAAErB,UAAU,CAACqB,iBAAiB;OAC/CG,cAAc,EAAExB,UAAU,CAACwB;;IAE5B,CAAC;CACH;;CCjHD,MAAMW,eAAe,GAAG,GAAG;AAE3B,CAAO,MAAMC,aAAa,CAC1B;GACC,MAAMC,aAAa,CAACC,UAAgB,EACpC;KACC,IAAI,CAACC,iCAAgB,CAACD,UAAU,CAAC,EACjC;;OAEC,OAAOvK,OAAO,CAACyK,MAAM,CAAC,IAAIpC,KAAK,CAAC,+CAA+C,CAAC,CAAC;;KAGlF,MAAM;OAAEqC,OAAO,EAAEC;MAAe,GAAG,MAAMC,4BAAW,CAACL,UAAU,EAAE;OAChEM,KAAK,EAAET,eAAe;OACtBU,MAAM,EAAEV;MACR,CAAC;KAEF,OAAOO,aAAa;;GAGrB,MAAMI,YAAY,CAACzM,MAAc,EAAEiM,UAAgB,EACnD;KACCzK,uBAAM,CAACC,IAAI,CAAC,2BAA2B,EAAEzB,MAAM,EAAEiM,UAAU,CAAC;KAC5D,MAAMS,cAAc,GAAG,MAAMxF,qBAAK,CAAC3H,IAAI,CAAC4K,SAAS,CAAC8B,UAAU,CAAC;KAE7D,OAAO5E,wBAAS,CAACzE,sBAAU,CAAC+J,cAAc,EAAE;OAC3CtJ,IAAI,EAAE;SACL9E,EAAE,EAAEyB,MAAM;SACVqI,MAAM,EAAE;WAAEnI,MAAM,EAAEwM;;;MAEnB,CAAC,CAAC3J,KAAK,CAAEC,KAAK,IAAK;;OAEnBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;OACxD,MAAM,IAAI+G,KAAK,CAAC/G,KAAK,CAAC;MACtB,CAAC;;CAEJ;;CCtCuC;CAAA;CAAA;AAEvC,CAAO,MAAM4J,aAAa,CAC1B;GAICrP,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,wBAAUmB,2BAAI,CAACC,QAAQ,EAAE;KAC7B,4CAAI,kCAAeD,2BAAI,CAACgE,aAAa,EAAE;;GAGxCmK,UAAU,CAAC9M,QAAgB,EAAE+M,OAAe,EAC5C;KACCtL,uBAAM,CAACC,IAAI,CAAC,yBAAyB,EAAE1B,QAAQ,EAAE+M,OAAO,CAAC;KACzD,IAAIA,OAAO,KAAK,EAAE,EAClB;OACC,OAAOpL,OAAO,CAACC,OAAO,EAAE;;KAEzB,MAAMwF,MAAM,GAAG,4CAAI,sBAAQvI,OAAO,CAAC,WAAW,CAAC,CAACmB,QAAQ,CAAC;KACzD,MAAMgN,OAAO,GAAG5F,MAAM,CAAC/G,IAAI;KAE3B,4CAAI,oDAAyBL,QAAQ,EAAE+M,OAAO;KAE9C,OAAO,4CAAI,gCAAanK,UAAU,CAACC,sBAAU,CAACoK,iBAAiB,EAAE;OAChEC,SAAS,EAAElN,QAAQ;OACnB4K,KAAK,EAAEmC;MACP,CAAC,CAACtF,IAAI,CAAC5F,MAAM,IAAI;OACjBJ,uBAAM,CAACC,IAAI,CAAC,gCAAgC,EAAEG,MAAM,CAACyB,IAAI,EAAE,CAAC;OAC5D,OAAO3B,OAAO,CAACC,OAAO,EAAE;MACxB,CAAC,CAACoB,KAAK,CAAC,MAAM;OACd,4CAAI,oDAAyBhD,QAAQ,EAAEgN,OAAO;OAE9C,MAAM,IAAIhD,KAAK,CAAC,mBAAmB,CAAC;MACpC,CAAC;;CAYJ;CAAC,kCATwBhK,QAAgB,EAAE4K,KAAa,EACvD;GACC,4CAAI,sBAAQrI,QAAQ,CAAC,cAAc,EAAE;KACpCvC,QAAQ;KACRsI,MAAM,EAAE;OACPjI,IAAI,EAAEuK;;IAEP,CAAC;CACH;;CC3CsC;CAAA;CAAA;CAAA;AAEvC,CAAO,MAAMuC,WAAW,CACxB;GAMC3P,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,wBAAUmB,2BAAI,CAACC,QAAQ,EAAE;KAC7B,4CAAI,kCAAeD,2BAAI,CAACgE,aAAa,EAAE;KAEvC,4CAAI,0DAA6ByK,iBAAO,CAACC,QAAQ,yCAAC,IAAI,uCAAmBC,WAAW,CAACC,aAAa,CAAC;;GAGpGC,QAAQ,CAACxN,QAAgB,EACzB;KACCyB,uBAAM,CAACC,IAAI,CAAC,uBAAuB,EAAE1B,QAAQ,CAAC;KAC9C,4CAAI,sBAAQuC,QAAQ,CAAC,YAAY,EAAE;OAACvC;MAAS,CAAC;KAC9C,MAAMmD,WAAW,GAAG;OAAC,WAAW,EAAEnD,QAAQ;OAAE,QAAQ,EAAE;MAAI;KAE1D,4CAAI,wDAA2BmD,WAAW;;GAG3CsK,UAAU,CAACzN,QAAgB,EAC3B;KACCyB,uBAAM,CAACC,IAAI,CAAC,yBAAyB,EAAE1B,QAAQ,CAAC;KAChD,4CAAI,sBAAQuC,QAAQ,CAAC,cAAc,EAAE;OAACvC;MAAS,CAAC;KAChD,MAAMmD,WAAW,GAAG;OAAC,WAAW,EAAEnD,QAAQ;OAAE,QAAQ,EAAE;MAAI;KAE1D,4CAAI,wDAA2BmD,WAAW;;CAa5C;CAAC,2BAViBA,WAAmD,EACpE;GACC,MAAM;KAAC+J,SAAS,EAAElN,QAAQ;KAAE0N;IAAO,GAAGvK,WAAW;GACjD,OAAO,4CAAI,gCAAaP,UAAU,CAACC,sBAAU,CAAC8K,UAAU,EAAExK,WAAW,CAAC,CAACH,KAAK,CAACC,KAAK,IAAI;KACrF,MAAM2K,UAAU,GAAGF,MAAM,KAAK,GAAG,GAAG,QAAQ,GAAG,UAAU;KACzDxK,OAAO,CAACD,KAAK,CAAE,wBAAuB2K,UAAW,OAAM,EAAE3K,KAAK,CAAC;KAC/D,MAAM4K,UAAU,GAAGH,MAAM,KAAK,GAAG,GAAG,cAAc,GAAG,YAAY;KACjE,4CAAI,sBAAQnL,QAAQ,CAACsL,UAAU,EAAE;OAAC7N;MAAS,CAAC;IAC5C,CAAC;CACH;;CC/CuC;CAAA;AAExC,CAAO,MAAM8N,UAAU,CACvB;GAICtQ,WAAW,GACX;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,wBAAUmB,2BAAI,CAACC,QAAQ,EAAE;KAC7B,4CAAI,kCAAeD,2BAAI,CAACgE,aAAa,EAAE;;GAGxCoL,OAAO,CAAC/N,QAAgB,EACxB;KACCyB,uBAAM,CAACC,IAAI,CAAC,qBAAqB,EAAE1B,QAAQ,CAAC;KAC5C,4CAAI,sBAAQuC,QAAQ,CAAC,YAAY,EAAE;OAClC/D,EAAE,EAAEwB,QAAQ;OACZ0N,MAAM,EAAE;MACR,CAAC;KACF,MAAMvK,WAAW,GAAG;OAAC,WAAW,EAAEnD,QAAQ;OAAE,QAAQ,EAAE;MAAI;KAC1D,4CAAI,gCAAa4C,UAAU,CAACC,sBAAU,CAACmL,WAAW,EAAE7K,WAAW,CAAC,CAACH,KAAK,CAACC,KAAK,IAAI;OAC/EC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;OACtD,4CAAI,sBAAQV,QAAQ,CAAC,YAAY,EAAE;SAAC/D,EAAE,EAAEwB,QAAQ;SAAE0N,MAAM,EAAE;QAAM,CAAC;MACjE,CAAC;;GAGHO,SAAS,CAACjO,QAAgB,EAC1B;KACCyB,uBAAM,CAACC,IAAI,CAAC,uBAAuB,EAAE1B,QAAQ,CAAC;KAC9C,4CAAI,sBAAQuC,QAAQ,CAAC,YAAY,EAAE;OAClC/D,EAAE,EAAEwB,QAAQ;OACZ0N,MAAM,EAAE;MACR,CAAC;KACF,MAAMvK,WAAW,GAAG;OAAC,WAAW,EAAEnD,QAAQ;OAAE,QAAQ,EAAE;MAAI;KAC1D,4CAAI,gCAAa4C,UAAU,CAACC,sBAAU,CAACmL,WAAW,EAAE7K,WAAW,CAAC,CAACH,KAAK,CAACC,KAAK,IAAI;OAC/EC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;OACxD,4CAAI,sBAAQV,QAAQ,CAAC,YAAY,EAAE;SAAC/D,EAAE,EAAEwB,QAAQ;SAAE0N,MAAM,EAAE;QAAK,CAAC;MAChE,CAAC;;CAEJ;;CCzBA,MAAMQ,YAAY,GAAG,GAAG;CAAC;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAEzB,CAAO,MAAMC,WAAW,CACxB;GAMC3Q,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA,OAHmD;;KAIlD,4CAAI,wBAAUmB,2BAAI,CAACC,QAAQ,EAAE;KAC7B,4CAAI,kCAAeD,2BAAI,CAACgE,aAAa,EAAE;;GAGxCyL,OAAO,GACP;KACC3M,uBAAM,CAACC,IAAI,CAAC,sBAAsB,CAAC;KACnC,4CAAI,sBAAQa,QAAQ,CAAC,qBAAqB,CAAC;KAC3C,4CAAI,sBAAQA,QAAQ,CAAC,oBAAoB,CAAC;KAE1C,OAAO,4CAAI,gCAAaK,UAAU,CAACC,sBAAU,CAACwL,eAAe,CAAC,CAC5DrL,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,CAAC;;GAGJqL,UAAU,CAACtO,QAAgB,EAC3B;KACCyB,uBAAM,CAACC,IAAI,CAAC,yBAAyB,EAAE1B,QAAQ,CAAC;KAChD,4CAAI,sBAAQuC,QAAQ,CAAC,eAAe,EAAE;OACrC/D,EAAE,EAAEwB,QAAQ;OACZ0N,MAAM,EAAE;MACR,CAAC;KACF,4CAAI,sBAAQnL,QAAQ,CAAC,cAAc,EAAE;OACpCvC,QAAQ;OACRsI,MAAM,EAAE;SAAEvI,OAAO,EAAE;;MACnB,CAAC;KACF,4CAAI,gCAAa6C,UAAU,CAACC,sBAAU,CAAC0L,YAAY,EAAE;OAAEvO;MAAU,CAAC,CAChEgD,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,CAAC;;GAGJuL,YAAY,CAACxO,QAAgB,EAC7B;KACCyB,uBAAM,CAACC,IAAI,CAAC,2BAA2B,EAAE1B,QAAQ,CAAC;KAClD,4CAAI,sBAAQuC,QAAQ,CAAC,eAAe,EAAE;OACrC/D,EAAE,EAAEwB,QAAQ;OACZ0N,MAAM,EAAE;MACR,CAAC;KACF,4CAAI,gCAAa9K,UAAU,CAACC,sBAAU,CAAC4L,cAAc,EAAE;OAAEzO;MAAU,CAAC,CAClEgD,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;OACjE,4CAAI,sBAAQV,QAAQ,CAAC,eAAe,EAAE;SAAE/D,EAAE,EAAEwB,QAAQ;SAAE0N,MAAM,EAAE;QAAO,CAAC;MACtE,CAAC;;GAGJgB,WAAW,CAACzO,MAAc,EAAEJ,SAAiB,EAC7C;KACC,IAAI,CAAC,4CAAI,oCAAiBI,MAAM,CAAC,EACjC;OACC,4CAAI,oCAAiBA,MAAM,CAAC,GAAG,IAAIwK,GAAG,EAAE;;KAEzC,4CAAI,oCAAiBxK,MAAM,CAAC,CAAC0O,GAAG,CAAC9O,SAAS,CAAC;KAE3C+O,YAAY,CAAC,IAAI,CAACC,WAAW,CAAC;KAC9B,IAAI,CAACA,WAAW,GAAGC,UAAU,CAAC,MAAM;OACnC7Q,MAAM,CAACqN,OAAO,yCAAC,IAAI,oCAAiB,CAACxN,OAAO,CAAC,CAAC,CAACiR,SAAS,EAAE/G,UAAU,CAAC,KAAK;SACzE,4CAAI,8CAAsB+G,SAAS,EAAE/G,UAAU;QAC/C,CAAC;MACF,EAAEkG,YAAY,CAAC;;GA6BjBc,eAAe,CAAChP,QAAgB,EAChC;KACCyB,uBAAM,CAACC,IAAI,CAAC,gCAAgC,EAAE1B,QAAQ,CAAC;KACvD,MAAMoH,MAAmB,GAAG,4CAAI,sBAAQvI,OAAO,CAAC,WAAW,CAAC,CAACmB,QAAQ,CAAC;KACtE,MAAMsC,UAA6B,GAAG,4CAAI,sBAAQzD,OAAO,CAAC,YAAY,CAAC,CAACmB,QAAQ,CAAC;KACjF,IAAIoH,MAAM,CAAC6H,QAAQ,KAAK,CAAC,IAAI,EAAC3M,UAAU,YAAVA,UAAU,CAAE4M,MAAM,GAChD;OACC;;KAED,4CAAI,sBAAQ3M,QAAQ,CAAC,eAAe,EAAE;OACrC/D,EAAE,EAAEwB,QAAQ;OACZ0N,MAAM,EAAE;MACR,CAAC;KACF,4CAAI,sBAAQnL,QAAQ,CAAC,cAAc,EAAE;OACpCvC,QAAQ;OACRsI,MAAM,EAAE;SACP2G,QAAQ,EAAE;;MAEX,CAAC;KACF,4CAAI,gCAAarM,UAAU,CAACC,sBAAU,CAAC0L,YAAY,EAAE;OACpDvO,QAAQ;OACRmP,UAAU,EAAE;MACZ,CAAC,CAACnM,KAAK,CAAEC,KAAK,IAAK;;OAEnBC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,CAAC;;CAwGJ;CAAC,qCA3J2B8L,SAAiB,EAAE/G,UAAuB,EACrE;GACC,MAAMoH,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACP,SAAS,EAAE,EAAE,CAAC;GAClDtN,uBAAM,CAACC,IAAI,CAAC,2BAA2B,EAAEsG,UAAU,CAAC;GACpD,IAAIA,UAAU,CAACuH,IAAI,KAAK,CAAC,EACzB;KACC;;GAGD,MAAMC,gBAAgB,GAAG,CAAC,GAAGxH,UAAU,CAAC;GACxC,OAAO,4CAAI,oCAAiBoH,WAAW,CAAC;GAExC,MAAMK,iBAAiB,GAAG,8CAAM,IAAI,8CAAsBL,WAAW,EAAEI,gBAAgB,CAAC;GAExF/N,uBAAM,CAACC,IAAI,CAAC,qDAAqD,EAAE+N,iBAAiB,CAAC;GACrF,8CAAM,IAAI,8CAAsBL,WAAW,EAAEK,iBAAiB,CAAC;GAE/D,MAAMC,UAAU,GAAG,MAAM,4CAAI,8CAAsBN,WAAW,EAAEI,gBAAgB,EAC9ExM,KAAK,CAAEC,KAAK,IAAK;;KAEjBC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,CAAC;GAEH,4CAAI,wCAAmByM,UAAU;CAClC;CAAC,+BA8BoBzP,MAAc,EAAE+H,UAAoB,EACzD;GACC,MAAM2H,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG7H,UAAU,CAAC;GAC5C,MAAMZ,MAAM,2CAAG,IAAI,0CAAoBnH,MAAM,CAAC;GAC9C,IAAI0P,YAAY,GAAGvI,MAAM,CAAC0I,UAAU,EACpC;KACC,4CAAI,sBAAQvN,QAAQ,CAAC,cAAc,EAAE;OACpCvC,QAAQ,0CAAE,IAAI,8CAAsBC,MAAM,CAAC;OAC3CqI,MAAM,EAAE;SACPyH,MAAM,EAAEJ;;MAET,CAAC;;GAGH,OAAO,4CAAI,sBAAQpN,QAAQ,CAAC,uBAAuB,EAAE;KACpDtC,MAAM;KACN+H;IACA,CAAC;CACH;CAAC,kCAEuB/H,MAAc,EAAEwP,iBAAyB,EACjE;GACC,MAAMhR,IAAI,2CAAG,IAAI,0CAAoBwB,MAAM,CAAC;GAC5C,IAAI+P,UAAU,GAAGvR,IAAI,CAACsB,OAAO,GAAG0P,iBAAiB;GACjD,IAAIO,UAAU,GAAG,CAAC,EAClB;KACCA,UAAU,GAAG,CAAC;;GAGf,MAAMC,QAAQ,GAAG;KAChB,CAACxR,IAAI,CAACyR,YAAY,GAAG;OACpB,CAACjQ,MAAM,GAAG+P;;IAEX;GAED,OAAOrR,2BAAI,CAACC,QAAQ,EAAE,CAAC2D,QAAQ,CAAC,6BAA6B,EAAE0N,QAAQ,CAAC;CACzE;CAAC,+BAEoBhQ,MAAc,EAAEwP,iBAAyB,EAC9D;GACC,MAAMhR,IAAI,2CAAG,IAAI,0CAAoBwB,MAAM,CAAC;GAC5C,IAAIxB,IAAI,CAAC6B,IAAI,KAAKC,oBAAQ,CAAC4P,OAAO,EAClC;KACC,+CAAO,IAAI,oDAAyBlQ,MAAM,EAAEwP,iBAAiB;;GAG9D,IAAIO,UAAU,GAAGvR,IAAI,CAACsB,OAAO,GAAG0P,iBAAiB;GACjD,IAAIO,UAAU,GAAG,CAAC,EAClB;KACCA,UAAU,GAAG,CAAC;;GAGf,OAAO,4CAAI,sBAAQzN,QAAQ,CAAC,cAAc,EAAE;KAC3CvC,QAAQ,0CAAE,IAAI,8CAAsBC,MAAM,CAAC;KAC3CqI,MAAM,EAAE;OAAEvI,OAAO,EAAEiQ;;IACnB,CAAC;CACH;CAAC,+BAEoB/P,MAAc,EAAE+H,UAAoB,EACzD;GACCvG,uBAAM,CAACC,IAAI,CAAC,qCAAqC,EAAEsG,UAAU,CAAC;GAE9D,OAAOV,wBAAS,CAACzE,sBAAU,CAACuN,mBAAmB,EAAE;KAChD9M,IAAI,EAAE;OACLrD,MAAM;OACNoQ,GAAG,EAAErI,UAAU;OACfsI,UAAU,EAAEC,0BAAW,CAACnP,WAAW,EAAE,CAACoP,aAAa;;IAEpD,CAAC;CACH;CAAC,4BAEiBd,UAAsB,EACxC;GACC,MAAM;KAAEzP,MAAM;KAAEF;IAAS,GAAG2P,UAAU;GAEtC,MAAMtI,MAAM,2CAAG,IAAI,0CAAoBnH,MAAM,CAAC;GAC9C,IAAImH,MAAM,CAACrH,OAAO,GAAGA,OAAO,EAC5B;KACC0B,uBAAM,CAACC,IAAI,CAAC,0DAA0D,EAAE0F,MAAM,CAACrH,OAAO,EAAEA,OAAO,CAAC;KAChG,4CAAI,sBAAQwC,QAAQ,CAAC,cAAc,EAAE;OACpCvC,QAAQ,EAAEoH,MAAM,CAACpH,QAAQ;OACzBsI,MAAM,EAAE;SAAEvI;;MACV,CAAC;;CAEJ;CAAC,+BAEoBE,MAAc,EACnC;GACC,MAAMmH,MAAM,GAAG,4CAAI,sBAAQvI,OAAO,CAAC,mBAAmB,CAAC,CAACoB,MAAM,CAAC;GAC/D,IAAI,CAACmH,MAAM,EACX;KACC,OAAO,CAAC;;GAGT,OAAOA,MAAM,CAACpH,QAAQ;CACvB;CAAC,6BAEkBC,MAAc,EACjC;GACC,OAAO,4CAAI,sBAAQpB,OAAO,CAAC,mBAAmB,CAAC,CAACoB,MAAM,CAAC;CACxD;;CCpP0C;CAAA;AAI3C,CAAO,MAAMwQ,WAAW,CACxB;GAICjT,WAAW,GACX;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,wBAAUmB,2BAAI,CAACC,QAAQ,EAAE;KAC7B,4CAAI,kCAAeD,2BAAI,CAACgE,aAAa,EAAE;;GAGxC+N,SAAS,CAACC,SAAoE,EAC9E;KACC,MAAMxN,WAAW,GAAG;OACnBjD,OAAO,EAAEyQ,SAAS,CAAC1Q,MAAM;OACzBjC,KAAK,EAAE2S,SAAS,CAACrG,OAAO;OACxBsG,YAAY,EAAE,CAACD,SAAS,CAACE;MACzB;KAED,OAAO,4CAAI,gCAAajO,UAAU,CAACC,sBAAU,CAACiO,aAAa,EAAE3N,WAAW,CAAC;;GAG1E4N,gBAAgB,CAAC/Q,QAAgB,EAAEgR,MAAc,EACjD;KACCvP,uBAAM,CAACC,IAAI,CAAE,0BAAyBsP,MAAO,cAAahR,QAAS,EAAC,CAAC;KACrE,MAAMmD,WAAW,GAAG;OAAEnD,QAAQ;OAAEgR;MAAQ;KACxC,4CAAI,gCAAapO,UAAU,CAACC,sBAAU,CAACoO,kBAAkB,EAAE9N,WAAW,CAAC,CAACH,KAAK,CAAEC,KAAK,IAAK;;OAExFC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACjE,CAAC;;GAGHiO,SAAS,CAAClR,QAAgB,EAC1B;KACC,IAAI,CAAC+Q,gBAAgB,CAAC/Q,QAAQ,EAAErB,2BAAI,CAACwS,SAAS,EAAE,CAAC;KAEjD,4CAAI,sBAAQ5O,QAAQ,CAAC,cAAc,EAAE;OACpCvC,QAAQ;OACRsI,MAAM,EAAE;SACPC,MAAM,EAAE;;MAET,CAAC;KACF,4CAAI,sBAAQhG,QAAQ,CAAC,eAAe,EAAE;OACrC/D,EAAE,EAAEwB;MACJ,CAAC;KAEF,MAAMwC,YAAY,GAAG,4CAAI,sBAAQ3D,OAAO,CAAC,wBAAwB,CAAC,CAACmB,QAAQ,CAAC;KAC5E,IAAIwC,YAAY,EAChB;OACCC,mBAAS,CAACC,QAAQ,EAAE;;;GAItB0O,QAAQ,CAACpR,QAAgB,EACzB;KACCyB,uBAAM,CAACC,IAAI,CAAE,0BAAyB1B,QAAS,EAAC,CAAC;KACjD,4CAAI,sBAAQuC,QAAQ,CAAC,cAAc,EAAE;OACpCvC,QAAQ;OACRsI,MAAM,EAAE;SACP9H,IAAI,EAAEC,oBAAQ,CAACC;;MAEhB,CAAC;KAEF,4CAAI,gCAAakC,UAAU,CAACC,sBAAU,CAACwO,YAAY,EAAE;OACpDrR;MACA,CAAC,CAACgD,KAAK,CAAEC,KAAK,IAAK;;OAEnBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,CAAC;;GAGHqO,UAAU,CAACtR,QAAgB,EAAEgR,MAAc,EAC3C;KACCvP,uBAAM,CAACC,IAAI,CAAE,4BAA2BsP,MAAO,OAAMhR,QAAS,EAAC,CAAC;KAChE,MAAM;OAAEuR;MAA0B,GAAG,4CAAI,sBAAQ1S,OAAO,CAAC,WAAW,CAAC,CAACmB,QAAQ,CAAC;KAC/E,IAAIuR,WAAW,CAACC,QAAQ,CAACR,MAAM,CAAC,EAChC;OACC;;KAED,MAAMS,cAAc,GAAG,CAAC,GAAGF,WAAW,EAAEP,MAAM,CAAC;KAC/C,4CAAI,sBAAQzO,QAAQ,CAAC,cAAc,EAAE;OACpCvC,QAAQ;OACRsI,MAAM,EAAE;SAAEiJ,WAAW,EAAEE;;MACvB,CAAC;KAEF,MAAMC,OAAO,GAAG;OACfpO,IAAI,EAAE;SACLtD,QAAQ;SACR2R,OAAO,EAAE,CAACX,MAAM;;MAEjB;KAED1J,wBAAS,CAACzE,sBAAU,CAAC+O,mBAAmB,EAAEF,OAAO,CAAC,CAChD1O,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,CAAC;;GAGJ4O,aAAa,CAAC7R,QAAgB,EAAEgR,MAAc,EAC9C;KACCvP,uBAAM,CAACC,IAAI,CAAE,+BAA8BsP,MAAO,SAAQhR,QAAS,EAAC,CAAC;KACrE,MAAM;OAAEuR;MAA0B,GAAG,4CAAI,sBAAQ1S,OAAO,CAAC,WAAW,CAAC,CAACmB,QAAQ,CAAC;KAC/E,IAAI,CAACuR,WAAW,CAACC,QAAQ,CAACR,MAAM,CAAC,EACjC;OACC;;KAED,MAAMS,cAAc,GAAGF,WAAW,CAACO,MAAM,CAAEC,SAAS,IAAKA,SAAS,KAAKf,MAAM,CAAC;KAC9E,4CAAI,sBAAQzO,QAAQ,CAAC,cAAc,EAAE;OACpCvC,QAAQ;OACRsI,MAAM,EAAE;SAAEiJ,WAAW,EAAEE;;MACvB,CAAC;KAEF,MAAMC,OAAO,GAAG;OACfpO,IAAI,EAAE;SACLtD,QAAQ;SACR2R,OAAO,EAAE,CAACX,MAAM;;MAEjB;KAED1J,wBAAS,CAACzE,sBAAU,CAACmP,sBAAsB,EAAEN,OAAO,CAAC,CACnD1O,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,CAAC;;CAEL;;CClIkD;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAElD,CAAO,MAAMqK,WAAW,CACxB;GAYC9P,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI;;;;GAILiJ,QAAQ,CAACzG,QAAgB,EACzB;KACC,OAAO,4CAAI,8BAAcyG,QAAQ,CAACzG,QAAQ,CAAC;;GAG5C2G,oBAAoB,CAAC3G,QAAgB,EACrC;KACC,OAAO,4CAAI,8BAAc2G,oBAAoB,CAAC3G,QAAQ,CAAC;;GAGxDgH,mBAAmB,CAAChH,QAAgB,EAAEH,SAAiB,EACvD;KACC,OAAO,4CAAI,8BAAcmH,mBAAmB,CAAChH,QAAQ,EAAEH,SAAS,CAAC;;GAGlE6H,YAAY,CAACC,MAAc,EAC3B;KACC,OAAO,4CAAI,8BAAcD,YAAY,CAACC,MAAM,CAAC;;GAG9CG,eAAe,CAACC,eAAuB,EACvC;KACC,OAAO,4CAAI,8BAAcD,eAAe,CAACC,eAAe,CAAC;;GAG1Db,eAAe,CAAClH,QAAgB,EAChC;KACC,OAAO,4CAAI,8BAAckH,eAAe,CAAClH,QAAQ,CAAC;;GAGnDqI,SAAS,CAACrI,QAAgB,EAC1B;KACC,OAAO,4CAAI,8BAAcqI,SAAS,CAACrI,QAAQ,CAAC;;;;;GAK7C2J,UAAU,CAACC,UAAU,EACrB;KACC,OAAO,4CAAI,kCAAgBD,UAAU,CAACC,UAAU,CAAC;;;;;GAKlDqC,aAAa,CAACC,UAAgB,EAC9B;KACC,OAAO,4CAAI,kCAAgBD,aAAa,CAACC,UAAU,CAAC;;GAGrDQ,YAAY,CAACzM,MAAc,EAAEiM,UAAgB,EAC7C;KACC,OAAO,4CAAI,kCAAgBQ,YAAY,CAACzM,MAAM,EAAEiM,UAAU,CAAC;;;;;GAK5DY,UAAU,CAAC9M,QAAgB,EAAE+M,OAAe,EAC5C;KACC,OAAO,4CAAI,kCAAgBD,UAAU,CAAC9M,QAAQ,EAAE+M,OAAO,CAAC;;;;;GAKzDS,QAAQ,CAACxN,QAAgB,EACzB;KACC,4CAAI,8BAAcwN,QAAQ,CAACxN,QAAQ,CAAC;;GAGrCyN,UAAU,CAACzN,QAAgB,EAC3B;KACC,4CAAI,8BAAcyN,UAAU,CAACzN,QAAQ,CAAC;;;;;GAKvC+N,OAAO,CAAC/N,QAAgB,EACxB;KACC,4CAAI,4BAAa+N,OAAO,CAAC/N,QAAQ,CAAC;;GAGnCiO,SAAS,CAACjO,QAAgB,EAC1B;KACC,4CAAI,4BAAaiO,SAAS,CAACjO,QAAQ,CAAC;;;;;GAKrCoO,OAAO,GACP;KACC,OAAO,4CAAI,8BAAcA,OAAO,EAAE;;GAGnCE,UAAU,CAACtO,QAAgB,EAC3B;KACC,4CAAI,8BAAcsO,UAAU,CAACtO,QAAQ,CAAC;;GAGvCwO,YAAY,CAACxO,QAAgB,EAC7B;KACC,4CAAI,8BAAcwO,YAAY,CAACxO,QAAQ,CAAC;;GAGzC0O,WAAW,CAACzO,MAAc,EAAEJ,SAAiB,EAC7C;KACC,4CAAI,8BAAc6O,WAAW,CAACzO,MAAM,EAAEJ,SAAS,CAAC;;GAGjDmP,eAAe,CAAChP,QAAgB,EAChC;KACC,4CAAI,8BAAcgP,eAAe,CAAChP,QAAQ,CAAC;;;;;GAK5CkR,SAAS,CAAClR,QAAgB,EAC1B;KACC,4CAAI,8BAAckR,SAAS,CAAClR,QAAQ,CAAC;;GAGtC+Q,gBAAgB,CAAC/Q,QAAgB,EAAEgR,MAAc,EACjD;KACC,4CAAI,8BAAcD,gBAAgB,CAAC/Q,QAAQ,EAAEgR,MAAM,CAAC;;GAGrDN,SAAS,CAACC,SAAoE,EAC9E;KACC,OAAO,4CAAI,8BAAcD,SAAS,CAACC,SAAS,CAAC;;GAG9CS,QAAQ,CAACpR,QAAgB,EACzB;KACC,4CAAI,8BAAcoR,QAAQ,CAACpR,QAAQ,CAAC;;GAGrCsR,UAAU,CAACtR,QAAgB,EAAEgR,MAAc,EAC3C;KACC,4CAAI,8BAAcM,UAAU,CAACtR,QAAQ,EAAEgR,MAAM,CAAC;;GAG/Ca,aAAa,CAAC7R,QAAgB,EAAEgR,MAAc,EAC9C;KACC,4CAAI,8BAAca,aAAa,CAAC7R,QAAQ,EAAEgR,MAAM,CAAC;;;CAenD;CAAC,0BAVA;GACC,4CAAI,gCAAgB,IAAIxK,WAAW,EAAE;GACrC,4CAAI,oCAAkB,IAAIkD,aAAa,EAAE;GACzC,4CAAI,oCAAkB,IAAIsC,aAAa,EAAE;GACzC,4CAAI,oCAAkB,IAAIa,aAAa,EAAE;GACzC,4CAAI,gCAAgB,IAAIM,WAAW,EAAE;GACrC,4CAAI,8BAAe,IAAIW,UAAU,EAAE;GACnC,4CAAI,gCAAgB,IAAIK,WAAW,EAAE;GACrC,4CAAI,gCAAgB,IAAIsC,WAAW,EAAE;CACtC;CA9KYnD,WAAW,CAEhBC,aAAa,GAAG,GAAG;;CCLc;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAMzC,CAAO,MAAM/G,aAAW,CACxB;GAWChJ,WAAW,CAACyC,MAAc,EAC1B;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA,OALyC;;KAAE;OAAA;OAAA,OACH;;KAAE;OAAA;OAAA,OACpB;;KAIrB,4CAAI,wBAAUtB,2BAAI,CAACC,QAAQ,EAAE;KAC7B,4CAAI,gCAAgB,IAAI0G,0BAAW,EAAE;KAErC,4CAAI,sBAAWrF,MAAM;;GAGtBgS,UAAU,GACV;KACC,IAAI,4CAAI,6BAAe,CAAC,4CAAI,4BAAc5M,WAAW,EACrD;OACC,OAAO1D,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;;KAE9BH,uBAAM,CAACC,IAAI,CAAC,4BAA4B,CAAC;KACzC,MAAMwQ,mBAAmB,GAAG,4CAAI,sBAAQrT,OAAO,CAAC,oBAAoB,CAAC,yCAAC,IAAI,oBAAS;KACnF,IAAI,CAACqT,mBAAmB,EACxB;OACCzQ,uBAAM,CAACC,IAAI,CAAC,0DAA0D,CAAC;OAEvE,OAAOC,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;;KAG9B,4CAAI,4BAAc,IAAI;KAEtB,MAAMuQ,KAAK,GAAG;OACblS,MAAM,0CAAE,IAAI,mBAAQ;OACpB6R,MAAM,EAAE;SACP/B,MAAM,EAAEmC;QACR;OACDE,KAAK,EAAE;SACN5T,EAAE,EAAE;QACJ;OACD6T,KAAK,EAAE7L,aAAW,CAAC8L;MACnB;KAED,OAAOhL,wBAAS,CAACzE,sBAAU,CAAC0P,mBAAmB,EAAE;OAAEjP,IAAI,EAAE6O;MAAO,CAAC,CAAC1K,IAAI,CAAE5F,MAAM,IAAK;OAClFJ,uBAAM,CAACC,IAAI,CAAC,mCAAmC,EAAEG,MAAM,CAAC;OACxD,4CAAI,sDAA2BA,MAAM,CAACzD,QAAQ;OAE9C,+CAAO,IAAI,oCAAeyD,MAAM;MAChC,CAAC,CAAC4F,IAAI,CAAC,MAAM;OACb,4CAAI,4BAAc,KAAK;OAEvB,OAAO,IAAI;MACX,CAAC,CAACzE,KAAK,CAAEC,KAAK,IAAK;;OAEnBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;OACzD,4CAAI,4BAAc,KAAK;MACvB,CAAC;;GAGHuP,WAAW,GACX;KACC,IAAI,4CAAI,6BAAe,CAAC,4CAAI,4BAAcpN,WAAW,EACrD;OACC,OAAOzD,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;;KAE9BH,uBAAM,CAACC,IAAI,CAAC,6BAA6B,CAAC;KAC1C,MAAM+Q,oBAAoB,GAAG,4CAAI,sBAAQ5T,OAAO,CAAC,qBAAqB,CAAC,yCAAC,IAAI,oBAAS;KACrF,IAAI,CAAC4T,oBAAoB,EACzB;OACChR,uBAAM,CAACC,IAAI,CAAC,2DAA2D,CAAC;OAExE,OAAOC,OAAO,CAACC,OAAO,EAAE;;KAGzB,4CAAI,4BAAc,IAAI;KAEtB,MAAMuQ,KAAK,GAAG;OACblS,MAAM,0CAAE,IAAI,mBAAQ;OACpB6R,MAAM,EAAE;SACP/B,MAAM,EAAE0C;QACR;OACDL,KAAK,EAAE;SACN5T,EAAE,EAAE;QACJ;OACD6T,KAAK,EAAE7L,aAAW,CAAC8L;MACnB;KAED,OAAOhL,wBAAS,CAACzE,sBAAU,CAAC0P,mBAAmB,EAAE;OAAEjP,IAAI,EAAE6O;MAAO,CAAC,CAAC1K,IAAI,CAAE5F,MAAM,IAAK;OAClFJ,uBAAM,CAACC,IAAI,CAAC,oCAAoC,EAAEG,MAAM,CAAC;OACzD,4CAAI,wDAA4BA,MAAM,CAACzD,QAAQ;OAC/C,MAAMgH,WAAW,GAAGvD,MAAM,CAACwD,WAAW;OACtC,MAAM3H,OAAO,GAAG;SAAE,GAAGmE,MAAM;SAAEuD,WAAW;SAAEC,WAAW,EAAE;QAAM;OAE7D,+CAAO,IAAI,oCAAe3H,OAAO;MACjC,CAAC,CAAC+J,IAAI,CAAC,MAAM;OACb,4CAAI,4BAAc,KAAK;OAEvB,OAAO,IAAI;MACX,CAAC,CAACzE,KAAK,CAAEC,KAAK,IAAK;;OAEnBC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;OAC1D,4CAAI,4BAAc,KAAK;MACvB,CAAC;;GAGHyP,0BAA0B,GAC1B;KACC,OAAO,4CAAI,sDAA0BnO,MAAM,GAAG,CAAC;;GAGhDoO,2BAA2B,GAC3B;KACC,IAAI,CAAC,IAAI,CAACD,0BAA0B,EAAE,EACtC;OACC,OAAO/Q,OAAO,CAACC,OAAO,EAAE;;KAGzB,OAAO,4CAAI,sBAAQW,QAAQ,CAAC,4BAA4B,EAAE;OACzDnE,QAAQ,0CAAE,IAAI;MACd,CAAC,CAACqJ,IAAI,CAAC,MAAM;OACb,4CAAI,wDAA4B,EAAE;OAElC,OAAO,IAAI;MACX,CAAC;;GAGHmL,yBAAyB,GACzB;KACC,OAAO,4CAAI,oDAAyBrO,MAAM,GAAG,CAAC;;GAG/CsO,0BAA0B,GAC1B;KACC,IAAI,CAAC,IAAI,CAACD,yBAAyB,EAAE,EACrC;OACC,OAAOjR,OAAO,CAACC,OAAO,EAAE;;KAGzB,OAAO,4CAAI,sBAAQW,QAAQ,CAAC,4BAA4B,EAAE;OACzDnE,QAAQ,0CAAE,IAAI;MACd,CAAC,CAACqJ,IAAI,CAAC,MAAM;OACb,4CAAI,sDAA2B,EAAE;OAEjC,OAAO,IAAI;MACX,CAAC;;GAGH,MAAMlG,aAAa,GACnB;KACCE,uBAAM,CAACC,IAAI,CAAC,qCAAqC,0CAAE,IAAI,oBAAS;KAChE,4CAAI,4BAAc,IAAI;KAEtB,MAAMgQ,OAAO,GAAG;OACfpO,IAAI,EAAE;SACLrD,MAAM,0CAAE,IAAI,mBAAQ;SACpBoS,KAAK,EAAE7L,aAAW,CAAC8L,qBAAqB;SACxCF,KAAK,EAAE;WAAE5T,EAAE,EAAE;;;MAEd;KACD,MAAMmG,UAAU,GAAG,MAAM2C,wBAAS,CAACzE,sBAAU,CAAC0P,mBAAmB,EAAEb,OAAO,CAAC,CACzE1O,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;OAC5D,4CAAI,4BAAc,KAAK;OACvB,MAAM,IAAI+G,KAAK,CAAC/G,KAAK,CAAC;MACtB,CAAC;KACHxB,uBAAM,CAACC,IAAI,CAAC,sCAAsC,EAAEiD,UAAU,CAAC;KAE/D,8CAAM,IAAI,gDAAuBA,UAAU,CAAC;KAC5C,MAAM,4CAAI,sBAAQpC,QAAQ,CAAC,cAAc,EAAE;OAC1CvC,QAAQ,EAAE,4CAAI,4BAAcA,QAAQ;OACpCsI,MAAM,EAAE;SACPlD,WAAW,EAAE,KAAK;SAClBC,WAAW,EAAEV,UAAU,CAACU;;MAEzB,CAAC;KACF,4CAAI,4BAAc,KAAK;;GAGxByN,WAAW,CAACjT,SAAiB,EAC7B;KACC,MAAMsS,KAAK,GAAG;OACb,CAACtP,sBAAU,CAACkQ,yBAAyB,GAAG;SACvCvU,EAAE,EAAEqB,SAAS;SACbmT,KAAK,EAAExM,aAAW,CAAC8L;QACnB;OACD,CAACzP,sBAAU,CAACuN,mBAAmB,GAAG;SACjCnQ,MAAM,0CAAE,IAAI,mBAAQ;SACpBoQ,GAAG,EAAE,CAACxQ,SAAS;;MAEhB;KACD4B,uBAAM,CAACC,IAAI,CAAC,mCAAmC,EAAE7B,SAAS,CAAC;KAC3D,4CAAI,4BAAc,IAAI;KAEtB,OAAOoT,wBAAS,CAACd,KAAK,CAAC,CACrB1K,IAAI,CAAEnE,IAAI,IAAK;OACf7B,uBAAM,CAACC,IAAI,CAAC,oCAAoC,EAAE4B,IAAI,CAAC;OAEvD,+CAAO,IAAI,gDAAuBA,IAAI,CAACT,sBAAU,CAACkQ,yBAAyB,CAAC;MAC5E,CAAC,CACD/P,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;OAC1D,MAAM,IAAI+G,KAAK,CAAC/G,KAAK,CAAC;MACtB,CAAC,CACDiQ,OAAO,CAAC,MAAM;OACd,4CAAI,4BAAc,KAAK;MACvB,CAAC;;GAGJ,MAAMC,mBAAmB,CAAClT,MAAc,EACxC;KACC,MAAMkD,WAAW,GAAG;OACnBG,IAAI,EAAE;SAAE8P,aAAa,EAAEnT;;MACvB;KACD,MAAM4B,MAAM,GAAG,MAAMyF,wBAAS,CAACzE,sBAAU,CAACkQ,yBAAyB,EAAE5P,WAAW,CAAC,CAC/EH,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1D,CAAC;KAEH,MAAM6C,WAA6B,GAAGjE,MAAM,CAACiE,WAAW;KACxD,MAAMuN,iBAAkC,GAAGvN,WAAW,CAACwN,IAAI,CAAEvV,IAAI,IAAK;OACrE,OAAOA,IAAI,CAACkC,MAAM,KAAKA,MAAM;MAC7B,CAAC;KACF,MAAMsT,eAAe,GAAGF,iBAAiB,oBAAjBA,iBAAiB,CAAExT,SAAS;KAEpD4B,uBAAM,CAACC,IAAI,CAAC,4CAA4C,EAAEG,MAAM,CAAC;KACjE,6CAAK,IAAI,gDAAuBA,MAAM,CAAC;KAEvC,OAAO0R,eAAe;;GAGvBC,iBAAiB,GACjB;KACC/R,uBAAM,CAACC,IAAI,CAAC,sCAAsC,0CAAE,IAAI,oBAAS;KACjE,IAAI6R,eAAe,GAAG,CAAC;KACvB,IAAI,4CAAI,4BAActT,MAAM,IAAI,CAAC,EACjC;OACC,OAAO0B,OAAO,CAACC,OAAO,EAAE;;KAGzB,IAAI,4CAAI,4BAAcqN,QAAQ,EAC9B;OACCsE,eAAe,GAAG,4CAAI,4BAActE,QAAQ;MAC5C,MACI,IAAI,4CAAI,4BAAcwE,sBAAsB,EACjD;OACCF,eAAe,GAAG,4CAAI,4BAAcE,sBAAsB;;KAG3D,MAAMC,eAAe,GAAG,4CAAI,4BAAcnL,MAAM;KAChD,4CAAI,sCAAkB,KAAK;KAC3B,IAAIgL,eAAe,EACnB;OACC,OAAO,IAAI,CAACT,WAAW,CAACS,eAAe,CAAC,CACtCvQ,KAAK,CAAC,MAAM,EAAE,CAAC,CACfkQ,OAAO,CAAC,MAAM;SACd,4CAAI,sCAAkB,IAAI,EAAEQ,eAAe;QAC3C,CAAC;;KAGJ,OAAO,IAAI,CAACC,mBAAmB,EAAE,CAC/B3Q,KAAK,CAAC,MAAM,EAAE,CAAC,CACfkQ,OAAO,CAAC,MAAM;OACd,4CAAI,sCAAkB,IAAI,EAAEQ,eAAe;MAC3C,CAAC;;GAGJ,MAAMC,mBAAmB,GACzB;KACClS,uBAAM,CAACC,IAAI,CAAC,2CAA2C,0CAAE,IAAI,oBAAS;KACtE,4CAAI,4BAAc,IAAI;KAEtB,MAAMgQ,OAAO,GAAG;OACfpO,IAAI,EAAE;SACLrD,MAAM,0CAAE,IAAI,mBAAQ;SACpBoS,KAAK,EAAE7L,aAAW,CAAC8L;;MAEpB;KACD,MAAM3N,UAAU,GAAG,MAAM2C,wBAAS,CAACzE,sBAAU,CAAC+Q,mBAAmB,EAAElC,OAAO,CAAC,CACzE1O,KAAK,CAAEC,KAAK,IAAK;;OAEjBC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;OAClE,4CAAI,4BAAc,KAAK;OACvB,MAAM,IAAI+G,KAAK,CAAC/G,KAAK,CAAC;MACtB,CAAC;KACHxB,uBAAM,CAACC,IAAI,CAAC,4CAA4C,EAAEiD,UAAU,CAAC;KACrEA,UAAU,CAACvG,QAAQ,2CAAG,IAAI,oDAAyBuG,UAAU,CAACvG,QAAQ,CAAC;KAEvE,8CAAM,IAAI,gDAAuBuG,UAAU,CAAC;KAC5C,4CAAI,4BAAc,KAAK;;GA0BxB3D,SAAS,GACT;KACC,+CAAO,IAAI;;CAsEb;CAAC,kCA/FwB6S,WAAyB,EACjD;GACC,IAAIA,WAAW,CAACtP,MAAM,KAAK,CAAC,EAC5B;KACC,OAAOsP,WAAW;;GAGnB,MAAMC,aAAa,GAAG,4CAAI,4BAAcA,aAAa;GACrD,MAAMC,QAAQ,GAAGnE,IAAI,CAACC,GAAG,CAAC,GAAGgE,WAAW,CAAC5L,GAAG,CAAEjJ,OAAO,IAAKA,OAAO,CAACR,EAAE,CAAC,CAAC;GACtE,IAAIuV,QAAQ,IAAID,aAAa,EAC7B;KACC,OAAOD,WAAW;;GAGnB,MAAMG,kBAAoC,GAAG,4CAAI,sBAAQnV,OAAO,CAAC,sBAAsB,CAAC,yCAAC,IAAI,oBAAS;GACtG,MAAMmH,kBAAkB,GAAGgO,kBAAkB,CAAClC,MAAM,CAAE9S,OAAO,IAAK;KACjE,OAAOA,OAAO,CAACR,EAAE,GAAGuV,QAAQ;IAC5B,CAAC;GACFtS,uBAAM,CAACC,IAAI,CAAC,yEAAyE,EAAEsE,kBAAkB,CAAC;GAE1G,OAAO,CAAC,GAAG6N,WAAW,EAAE,GAAG7N,kBAAkB,CAAC;CAC/C;CAAC,gCAOqBrB,UAAU,EAChC;GACC,MAAM;KAAEvG;IAAU,GAAGuG,UAAU;GAC/B,MAAMR,eAAe,GAAG,4CAAI,sBAAQ5B,QAAQ,CAAC,4BAA4B,EAAE;KAC1EnE,QAAQ;KACRyK,eAAe,EAAE;IACjB,CAAC;GACF,MAAMoL,mBAAmB,2CAAG,IAAI,oCAAetP,UAAU,CAAC;GAE1D,OAAOhD,OAAO,CAAC2C,GAAG,CAAC,CAACH,eAAe,EAAE8P,mBAAmB,CAAC,CAAC;CAC3D;CAAC,0BAEavW,OAA6B,EAC3C;GACC,MAAM;KACLW,KAAK;KACLL,KAAK;KACL2H,UAAU;KACVY,SAAS;KACTnB,WAAW;KACXC,WAAW;KACXW,kBAAkB;KAClBF;IACA,GAAGpI,OAAO;GAEX,MAAMwW,aAAa,GAAG,4CAAI,sBAAQ3R,QAAQ,CAAC,cAAc,EAAE;KAC1DvC,QAAQ,EAAE,4CAAI,4BAAcA,QAAQ;KACpCsI,MAAM,EAAE;OACPlD,WAAW;OACXC;;IAED,CAAC;GACF,MAAMpB,YAAY,GAAGtC,OAAO,CAAC2C,GAAG,CAAC,CAChC,4CAAI,8BAAc6P,eAAe,CAACnW,KAAK,CAAC,EACxC,4CAAI,8BAAcoK,eAAe,CAACzC,UAAU,CAAC,CAC7C,CAAC;GACF,MAAMvB,YAAY,GAAG,4CAAI,sBAAQ7B,QAAQ,CAAC,WAAW,EAAElE,KAAK,CAAC;GAC7D,MAAM+V,gBAAgB,GAAG,4CAAI,sBAAQ7R,QAAQ,CAAC,wBAAwB,EAAEgE,SAAS,CAAC;GAClF,MAAM8N,yBAAyB,GAAG,4CAAI,sBAAQ9R,QAAQ,CAAC,gBAAgB,EAAEyD,kBAAkB,CAAC;GAC5F,MAAMsO,kBAAkB,GAAG,4CAAI,sBAAQ/R,QAAQ,CAAC,uBAAuB,EAAEuD,WAAW,CAAC;GAErF,OAAOnE,OAAO,CAAC2C,GAAG,CAAC,CAClB4P,aAAa,EAAE9P,YAAY,EAAEH,YAAY,EAAEmQ,gBAAgB,EAAEC,yBAAyB,EAAEC,kBAAkB,CAC1G,CAAC;CACH;CAAC,2BAEgBC,IAAa,EAAEb,eAAwB,GAAG,IAAI,EAC/D;GACC,MAAMpL,MAAM,GAAG;KACdC,MAAM,EAAEgM,IAAI;KACZ5L,OAAO,EAAE,CAAC4L;IACV;GACD,IAAIA,IAAI,KAAK,IAAI,IAAI,CAACb,eAAe,EACrC;KACC,OAAOpL,MAAM,CAACC,MAAM;;GAGrB,4CAAI,sBAAQhG,QAAQ,CAAC,cAAc,EAAE;KACpCvC,QAAQ,EAAE,4CAAI,4BAAcA,QAAQ;KACpCsI;IACA,CAAC;CACH;CAAC,uBAGD;GACC,OAAO,4CAAI,sBAAQzJ,OAAO,CAAC,mBAAmB,CAAC,yCAAC,IAAI,oBAAS;CAC9D;AAzYY2H,cAAW,CAEhB8L,qBAAqB,GAAG,EAAE;;CCRgB;CAAA;AAElD,CAAO,MAAMxE,YAAU,CACvB;GAICtQ,WAAW,GACX;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,wBAAUmB,2BAAI,CAACC,QAAQ,EAAE;KAC7B,4CAAI,kCAAeD,2BAAI,CAACgE,aAAa,EAAE;;GAGxC6R,UAAU,CAACvU,MAAc,EAAEJ,SAAiB,EAC5C;KACC4B,uBAAM,CAACC,IAAI,CAAE,mCAAkC7B,SAAU,EAAC,CAAC;KAC3D,4CAAI,sBAAQ0C,QAAQ,CAAC,kBAAkB,EAAE;OACxCtC,MAAM;OACNJ;MACA,CAAC;;KAEF,4CAAI,gCAAa+C,UAAU,CAACC,sBAAU,CAAC4R,kBAAkB,EAAE;OAACjW,EAAE,EAAEqB;MAAU,CAAC,CAACmD,KAAK,CAACC,KAAK,IAAI;OAC1FC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;OACjE,4CAAI,sBAAQV,QAAQ,CAAC,qBAAqB,EAAE;SAC3CtC,MAAM;SACNJ;QACA,CAAC;MACF,CAAC;;GAGH6U,YAAY,CAACzU,MAAc,EAAEJ,SAAiB,EAC9C;KACC4B,uBAAM,CAACC,IAAI,CAAE,qCAAoC7B,SAAU,EAAC,CAAC;KAC7D,4CAAI,sBAAQ0C,QAAQ,CAAC,qBAAqB,EAAE;OAC3CtC,MAAM;OACNJ;MACA,CAAC;KACF,4CAAI,gCAAa+C,UAAU,CAACC,sBAAU,CAAC8R,oBAAoB,EAAE;OAACnW,EAAE,EAAEqB;MAAU,CAAC,CAACmD,KAAK,CAACC,KAAK,IAAI;OAC5FC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;OACnE,4CAAI,sBAAQV,QAAQ,CAAC,kBAAkB,EAAE;SACxCtC,MAAM;SACNJ;QACA,CAAC;MACF,CAAC;;CAEJ;;CChD2C;CAAA;AAI3C,CAAO,MAAM+U,WAAW,CACxB;GAAA;KAAA;OAAA;;KAAA;OAAA;;;GACCC,eAAe,CAAChV,SAAiB,EAAEiV,IAAY,EAC/C;KACCrT,uBAAM,CAACC,IAAI,CAAC,iCAAiC,EAAE7B,SAAS,EAAEiV,IAAI,CAAC;KAC/D,MAAM9V,OAAO,2CAAG,IAAI,4BAAaa,SAAS,CAAC;KAC3C,IAAI,CAACb,OAAO,EACZ;OACC;;KAGD,4CAAI,4CAAqBa,SAAS,EAAEiV,IAAI;KAExC,MAAMpD,OAAO,GAAG;OACfpO,IAAI,EAAE;SACL9E,EAAE,EAAEqB,SAAS;SACbyI,MAAM,EAAE;WAAEtJ,OAAO,EAAE8V;;;MAEpB;KAEDxN,wBAAS,CAACzE,sBAAU,CAACkS,qBAAqB,EAAErD,OAAO,CAAC,CAClD1O,KAAK,CAAEC,KAAK,IAAK;OACjBxB,uBAAM,CAACwB,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC7D,CAAC;;CAqBL;CAAC,8BAlBoBpD,SAAiB,EAAEiV,IAAY,EACnD;GACC,MAAM9V,OAAO,2CAAG,IAAI,4BAAaa,SAAS,CAAC;GAC3C,MAAMmV,QAAQ,GAAGhW,OAAO,CAACE,cAAc;GAEvCP,2BAAI,CAACC,QAAQ,EAAE,CAAC2D,QAAQ,CAAC,iBAAiB,EAAE;KAC3C/D,EAAE,EAAEqB,SAAS;KACbyI,MAAM,EAAE;OACPwM,IAAI;OACJE;;IAED,CAAC;CACH;CAAC,sBAEWnV,SAAiB,EAC7B;GACC,OAAOlB,2BAAI,CAACC,QAAQ,EAAE,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAACgB,SAAS,CAAC;CAC9D;;CC3C6C;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAI9C,CAAO,MAAMoV,aAAa,CAC1B;GAICzX,WAAW,CAACyC,MAAc,EAC1B;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,0BAAWA,MAAM;KACrB,4CAAI,wBAAUtB,2BAAI,CAACC,QAAQ,EAAE;;GAG9B,MAAMsW,aAAa,CAACrV,SAA0B,EAC9C;KACC4B,uBAAM,CAACC,IAAI,CAAC,+BAA+B,EAAE7B,SAAS,CAAC;KAEvD,IAAIsH,qBAAK,CAAC2N,IAAI,CAACK,QAAQ,CAACtV,SAAS,CAAC,EAClC;OACC,4CAAI,oDAAyBA,SAAS;OAEtC;;KAGD,4CAAI,sCAAkBA,SAAS;KAE/B,MAAMb,OAAuB,GAAG,4CAAI,sBAAQH,OAAO,CAAC,kBAAkB,CAAC,CAACgB,SAAS,CAAC;KAClF,4CAAI,IAAI,8CAAsBb,OAAO,GACrC;OACC,6CAAK,IAAI,kDAAwBA,OAAO,CAAC;OAEzC;;KAGD,6CAAK,IAAI,gDAAuBA,OAAO,CAAC;;CAsI1C;CAAC,gCAnIsBA,OAAuB,EAC7C;GACC,4CAAI,sBAAQuD,QAAQ,CAAC,iBAAiB,EAAE;KACvC/D,EAAE,EAAEQ,OAAO,CAACR,EAAE;KACd8J,MAAM,EAAE;OACPwM,IAAI,EAAE,EAAE;OACRM,SAAS,EAAE,IAAI;OACf/W,KAAK,EAAE,EAAE;OACTuB,MAAM,EAAE,EAAE;OACVyV,OAAO,EAAE;;IAEV,CAAC;GAEF,+CAAO,IAAI,kDAAwBrW,OAAO,CAACR,EAAE;CAC9C;CAAC,+BAEoBQ,OAAuB,EAC5C;GACC,MAAMsW,yBAAyB,GAAG,CAAC/U,oBAAQ,CAACgV,OAAO,EAAEhV,oBAAQ,CAACiV,WAAW,CAAC;GAC1E,MAAMC,wBAAwB,GAAG,CAAClV,oBAAQ,CAAC4P,OAAO,CAAC;GAEnD,MAAM1R,IAAI,2CAAG,IAAI,uBAAW;GAC5B,IAAI6W,yBAAyB,CAAC9D,QAAQ,CAAC/S,IAAI,CAAC6B,IAAI,CAAC,EACjD;KACC,OAAO,IAAI;;GAGZ,IAAImV,wBAAwB,CAACjE,QAAQ,CAAC/S,IAAI,CAAC6B,IAAI,CAAC,EAChD;KACC,OAAO,KAAK;;GAGb,OAAO,CAACtB,OAAO,CAACE,cAAc;CAC/B;CAAC,iCAEsBF,OAAuB,EAC9C;GACC,MAAMP,IAAI,2CAAG,IAAI,uBAAW;GAC5B,IAAIO,OAAO,CAACR,EAAE,KAAKC,IAAI,CAACqV,aAAa,EACrC;KACC,MAAM4B,SAAS,2CAAG,IAAI,gDAAuB1W,OAAO,CAACR,EAAE,CAAC;KACxD,4CAAI,kEAAgCkX,SAAS;KAC7C,4CAAI,8DAA8BA,SAAS;;GAG5C,4CAAI,sBAAQnT,QAAQ,CAAC,iBAAiB,EAAE;KACvC/D,EAAE,EAAEQ,OAAO,CAACR;IACZ,CAAC;GAEF,+CAAO,IAAI,kDAAwBQ,OAAO,CAACR,EAAE;CAC9C;CAAC,yCAE8BkX,SAAiB,EAChD;GACC,MAAMjX,IAAI,2CAAG,IAAI,uBAAW;GAC5B,IAAI,CAACiX,SAAS,EACd;KACC,4CAAI,sBAAQnT,QAAQ,CAAC,eAAe,EAAE;OAAE/D,EAAE,EAAEC,IAAI,CAACuB;MAAU,CAAC;KAE5D;;GAGD,4CAAI,sBAAQuC,QAAQ,CAAC,eAAe,EAAE;KACrC/D,EAAE,EAAEC,IAAI,CAACuB,QAAQ;KACjBsI,MAAM,EAAE;OAAEzI,SAAS,EAAE6V;;IACrB,CAAC;CACH;CAAC,uCAE4BA,SAAS,EACtC;GACC,MAAMjX,IAAI,2CAAG,IAAI,uBAAW;GAE5B,4CAAI,sBAAQ8D,QAAQ,CAAC,cAAc,EAAE;KACpCvC,QAAQ,EAAEvB,IAAI,CAACuB,QAAQ;KACvBsI,MAAM,EAAE;OACPwL,aAAa,EAAE4B,SAAS;OACxB3F,MAAM,EAAE2F;;IAET,CAAC;GACF,4CAAI,sBAAQnT,QAAQ,CAAC,6BAA6B,EAAE;KACnDvC,QAAQ,EAAEvB,IAAI,CAACuB;IACf,CAAC;CACH;CAAC,iCAEsBH,SAAiB,EACxC;GACC,OAAOyH,wBAAS,CAACzE,sBAAU,CAAC8S,qBAAqB,EAAE;KAClDrS,IAAI,EAAE;OAAE9E,EAAE,EAAEqB;;IACZ,CAAC,CAACmD,KAAK,CAAEC,KAAK,IAAK;;KAEnBC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,CAAC;CACH;CAAC,kCAEuBpD,SAAiB,EACzC;GACC,MAAMpB,IAAI,2CAAG,IAAI,uBAAW;GAC5B,MAAM6D,UAA6B,GAAG,4CAAI,sBAAQzD,OAAO,CAAC,YAAY,CAAC,CAACJ,IAAI,CAACuB,QAAQ,CAAC;GACtF,IAAIsC,UAAU,CAACzC,SAAS,KAAKA,SAAS,EACtC;KACC,MAAM6V,SAAS,2CAAG,IAAI,gDAAuB7V,SAAS,CAAC;KACvD,4CAAI,sBAAQ0C,QAAQ,CAAC,eAAe,EAAE;OACrC/D,EAAE,EAAEC,IAAI,CAACuB,QAAQ;OACjBsI,MAAM,EAAE;SAAEzI,SAAS,EAAE6V;;MACrB,CAAC;;GAGH,4CAAI,sBAAQnT,QAAQ,CAAC,iBAAiB,EAAE;KACvC/D,EAAE,EAAEqB;IACJ,CAAC;CACH;CAAC,gCAEqBA,SAAiB,EACvC;GAAA;GACC,MAAM+V,eAA+B,GAAG,4CAAI,sBAAQ/W,OAAO,CAAC,6BAA6B,CAAC,CAAC;KAC1FgB,SAAS;KACTI,MAAM,0CAAE,IAAI;IACZ,CAAC;GAEF,8BAAO2V,eAAe,oBAAfA,eAAe,CAAEpX,EAAE,kCAAI,CAAC;CAChC;CAAC,2BAEgBqB,SAAiB,EAClC;GACCgW,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAAC3O,MAAM,CAAC4O,gBAAgB,EAAE;KAAEnW;IAAW,CAAC;CACpE;CAAC,qBAGD;GACC,OAAO,4CAAI,sBAAQhB,OAAO,CAAC,mBAAmB,CAAC,yCAAC,IAAI,wBAAS;CAC9D;;CC3KuC;CAAA;CAAA;AAExC,CAAO,MAAMoX,WAAW,CACxB;GAKCzY,WAAW,CAACyC,MAAc,EAC1B;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,0BAAWA,MAAM;KACrB,4CAAI,wBAAUtB,2BAAI,CAACC,QAAQ,EAAE;KAC7B,4CAAI,kCAAeD,2BAAI,CAACgE,aAAa,EAAE;;GAGxCuT,WAAW,CAACrW,SAAiB,EAC7B;KACC4B,uBAAM,CAACC,IAAI,CAAC,6BAA6B,EAAE7B,SAAS,CAAC;KACrD,MAAM;OAACG;MAAS,GAAG,4CAAI,sBAAQnB,OAAO,CAAC,mBAAmB,CAAC,yCAAC,IAAI,wBAAS;KACzE,4CAAI,sBAAQ0D,QAAQ,CAAC,eAAe,EAAE;OACrC/D,EAAE,EAAEwB,QAAQ;OACZ0N,MAAM,EAAE;MACR,CAAC;KACF,4CAAI,sBAAQnL,QAAQ,CAAC,cAAc,EAAE;OACpCvC,QAAQ;OACRsI,MAAM,EAAE;SACP2G,QAAQ,EAAEpP;;MAEX,CAAC;KACF,4CAAI,gCAAa+C,UAAU,CAACC,sBAAU,CAACsT,mBAAmB,EAAE;OAC3DnW,QAAQ;OACRxB,EAAE,EAAEqB;MACJ,CAAC,CAACmD,KAAK,CAACC,KAAK,IAAI;OACjBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,CAAC;;CAEJ;;CCjCyB;CAAA;CAAA;AAEzB,CAAO,MAAMmT,eAAe,CAC5B;GAKC5Y,WAAW,CAACyC,MAAc,EAC1B;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,0BAAWA,MAAM;KACrB,4CAAI,wBAAUtB,2BAAI,CAACC,QAAQ,EAAE;KAC7B,4CAAI,kCAAeD,2BAAI,CAACgE,aAAa,EAAE;;GAGxC0T,oBAAoB,CAACxW,SAAiB,EACtC;KACC4B,uBAAM,CAACC,IAAI,CAAC,sCAAsC,EAAE7B,SAAS,CAAC;KAC9D,4CAAI,gCAAa+C,UAAU,CAACC,sBAAU,CAACyT,iBAAiB,EAAE;OACzDC,UAAU,EAAE1W;MACZ,CAAC,CAACmD,KAAK,CAACC,KAAK,IAAI;OACjBC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;MACxE,CAAC;KACFuT,EAAE,CAACC,EAAE,CAACC,YAAY,CAACC,MAAM,CAACC,MAAM,CAAC;OAChCC,OAAO,EAAEC,aAAG,CAACC,UAAU,CAAC,oDAAoD;MAC5E,CAAC;;GAGHC,yBAAyB,CAACnX,SAAiB,EAC3C;KACC4B,uBAAM,CAACC,IAAI,CAAC,2CAA2C,EAAE7B,SAAS,CAAC;KACnE,4CAAI,sBAAQ0C,QAAQ,CAAC,qCAAqC,EAAE;OAC3DtC,MAAM,0CAAE,IAAI,uBAAQ;OACpBJ,SAAS,EAAEA;MACX,CAAC;KACF,4CAAI,gCAAa+C,UAAU,CAACC,sBAAU,CAACoU,oBAAoB,EAAE;OAC5DV,UAAU,EAAE1W;MACZ,CAAC,CAACmD,KAAK,CAACC,KAAK,IAAI;OACjBC,OAAO,CAACD,KAAK,CAAC,sDAAsD,EAAEA,KAAK,CAAC;MAC5E,CAAC;;CAEJ;;CC5C6D;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAE7D,CAAO,MAAM4D,cAAc,CAC3B;GAQC,OAAOC,sBAAsB,GAC7B;KACC,OAAON,aAAW,CAAC8L,qBAAqB;;GAGzC9U,WAAW,CAACC,MAAwB,EACpC;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,MAAM;OAAEwC,MAAM,EAANA;MAAQ,GAAGxC,MAAM;KACzB,4CAAI,oCAAewC,OAAM;;;GAc1BgS,UAAU,GACV;KACC,OAAO,4CAAI,kCAAcA,UAAU,EAAE;;GAGtCO,WAAW,GACX;KACC,OAAO,4CAAI,kCAAcA,WAAW,EAAE;;GAGvCE,0BAA0B,GAC1B;KACC,OAAO,4CAAI,kCAAcA,0BAA0B,EAAE;;GAGtDC,2BAA2B,GAC3B;KACC,OAAO,4CAAI,kCAAcA,2BAA2B,EAAE;;GAGvDC,yBAAyB,GACzB;KACC,OAAO,4CAAI,kCAAcA,yBAAyB,EAAE;;GAGrDC,0BAA0B,GAC1B;KACC,OAAO,4CAAI,kCAAcA,0BAA0B,EAAE;;GAGtD7R,SAAS,GACT;KACC,OAAO,4CAAI,kCAAcA,SAAS,EAAE;;;;;GAKrC8R,WAAW,CAACjT,SAAiB,EAC7B;KACC,OAAO,4CAAI,kCAAciT,WAAW,CAACjT,SAAS,CAAC;;GAGhDsT,mBAAmB,CAAClT,MAAc,EAClC;KACC,OAAO,4CAAI,kCAAckT,mBAAmB,CAAClT,MAAM,CAAC;;GAGrDsB,aAAa,GACb;KACC,OAAO,4CAAI,kCAAcA,aAAa,EAAE;;;;;GAKzCiS,iBAAiB,GACjB;KACC,OAAO,4CAAI,kCAAcA,iBAAiB,EAAE;;GAG7CG,mBAAmB,GACnB;KACC,OAAO,4CAAI,kCAAcA,mBAAmB,EAAE;;;;;GAK/Ca,UAAU,CAACvU,MAAc,EAAEJ,SAAiB,EAC5C;KACC,4CAAI,gCAAa2U,UAAU,CAACvU,MAAM,EAAEJ,SAAS,CAAC;;GAG/C6U,YAAY,CAACzU,MAAc,EAAEJ,SAAiB,EAC9C;KACC,4CAAI,gCAAa6U,YAAY,CAACzU,MAAM,EAAEJ,SAAS,CAAC;;;;;GAKjDqW,WAAW,CAACrW,SAAiB,EAC7B;KACC,4CAAI,8BAAcqW,WAAW,CAACrW,SAAS,CAAC;;;;;GAKzCwW,oBAAoB,CAACxW,SAAiB,EACtC;KACC,4CAAI,sCAAkBwW,oBAAoB,CAACxW,SAAS,CAAC;;GAGtDmX,yBAAyB,CAACnX,SAAiB,EAC3C;KACC,4CAAI,sCAAkBmX,yBAAyB,CAACnX,SAAS,CAAC;;;;;GAK3DgV,eAAe,CAAChV,SAAiB,EAAEiV,IAAY,EAC/C;KACC,4CAAI,8BAAcD,eAAe,CAAChV,SAAS,EAAEiV,IAAI,CAAC;;;;;GAKnDI,aAAa,CAACrV,SAA0B,EACxC;KACC,4CAAI,kCAAgBqV,aAAa,CAACrV,SAAS,CAAC;;;CAG9C;CAAC,0BAxHcI,MAAc,EAC5B;GACC,4CAAI,oCAAgB,IAAIuG,aAAW,CAACvG,MAAM,CAAC;GAC3C,4CAAI,gCAAgB,IAAI2U,WAAW,EAAE;GACrC,4CAAI,oCAAkB,IAAIK,aAAa,CAAChV,MAAM,CAAC;GAC/C,4CAAI,kCAAe,IAAI6N,YAAU,EAAE;GACnC,4CAAI,gCAAgB,IAAImI,WAAW,CAAChW,MAAM,CAAC;GAC3C,4CAAI,wCAAoB,IAAImW,eAAe,CAACnW,MAAM,CAAC;CACpD;;CC1B2C;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AA2C5C,CAAO,MAAMiX,iBAAc,CAC3B;GAKC,OAAO9V,WAAW,GAClB;KACC,IAAI,CAAC,IAAI,CAACC,QAAQ,EAClB;OACC,IAAI,CAACA,QAAQ,GAAG,IAAI,IAAI,EAAE;;KAG3B,OAAO,IAAI,CAACA,QAAQ;;GAGrB7D,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,wBAAUmB,2BAAI,CAACC,QAAQ,EAAE;;GAG9B,MAAMuY,WAAW,CAAC1Z,MAA0B,EAC5C;KACC,MAAM;OAAEqX,IAAI,GAAG;MAAI,GAAGrX,MAAM;KAC5B,IAAI,CAAC6B,cAAI,CAACiK,cAAc,CAACuL,IAAI,CAAC,EAC9B;OACC,OAAOnT,OAAO,CAACC,OAAO,EAAE;;KAGzBH,uBAAM,CAACC,IAAI,CAAC,6BAA6B,EAAEjE,MAAM,CAAC;KAClD,MAAMuB,OAAO,2CAAG,IAAI,oCAAiBvB,MAAM,CAAC;KAE5C,+CAAO,IAAI,kDAAwBuB,OAAO;;GAG3C,MAAMoY,mBAAmB,CAAC3Z,MAAyB,EACnD;KACC,MAAM;OAAEqX,IAAI,GAAG,EAAE;OAAEuC,MAAM,GAAG;MAAI,GAAG5Z,MAAM;KACzC,IAAI,CAAC6B,cAAI,CAACiK,cAAc,CAACuL,IAAI,CAAC,IAAI,CAACxV,cAAI,CAACiK,cAAc,CAAC8N,MAAM,CAAC,EAC9D;OACC,OAAO1V,OAAO,CAACC,OAAO,EAAE;;KAGzBH,uBAAM,CAACC,IAAI,CAAC,uCAAuC,EAAEjE,MAAM,CAAC;KAC5D,MAAMuB,OAAO,2CAAG,IAAI,oDAAyBvB,MAAM,CAAC;KAEpD,8CAAM,IAAI,8DAA8BuB,OAAO,CAAC;KAEhD,OAAO2C,OAAO,CAACC,OAAO,EAAE;;GAGzB,MAAM0V,eAAe,CAAC7Z,MAA0B,EAChD;KACC,MAAM;OAAE8Z,UAAU;OAAEvX,QAAQ;OAAE8U;MAAM,GAAGrX,MAAM;KAC7C,IAAI,CAAC6B,cAAI,CAACK,aAAa,CAAC4X,UAAU,CAAC,EACnC;OACC,OAAO5V,OAAO,CAACC,OAAO,EAAE;;KAEzBH,uBAAM,CAACC,IAAI,CAAC,iCAAiC,EAAEjE,MAAM,CAAC;KAEtD,8CAAM,IAAI,wCAAmBuC,QAAQ,CAAC;KAEtC,IAAIwX,cAAc,GAAG,IAAI;KACzB,IAAIlY,cAAI,CAACiK,cAAc,CAACuL,IAAI,CAAC,EAC7B;OACC0C,cAAc,2CAAG,IAAI,oCAAiB/Z,MAAM,CAAC;OAC7C,8CAAM,IAAI,4CAAqB+Z,cAAc,CAAC;;KAG/C,MAAMC,cAAc,2CAAG,IAAI,0CAAoBF,UAAU,CAAC;KAC1D,MAAMG,iBAAiB,2CAAG,IAAI,oDAAyBja,MAAM,EAAEga,cAAc,CAAC;KAE9E,8CAAM,IAAI,8CAAsBC,iBAAiB,CAAC;KAElD,4CAAI,sCAAkB;OAAEC,KAAK,EAAE,IAAI;OAAE3X;MAAU;KAE/C,IACA;OACC,MAAM4X,aAAa,2CAAG,IAAI,0DAA4B;SAAEH,cAAc;SAAED,cAAc;SAAExX;QAAU,CAAC;OACnG,MAAM6X,QAAQ,GAAG,8CAAM,IAAI,8CAAsBD,aAAa,CAAC;OAC/DnW,uBAAM,CAACC,IAAI,CAAC,yCAAyC,EAAEmW,QAAQ,CAAC;OAChE,4CAAI,gEAA+B;SAAEA,QAAQ;SAAE7X,QAAQ;SAAEwX;QAAgB;MACzE,CACD,OAAOM,MAAM,EACb;OACC,4CAAI,0DAA4B;SAAEN,cAAc;SAAEC;QAAgB;OAClE,4CAAI,kCAAgBK,MAAM,EAAE,gBAAgB;;KAG7C,OAAOnW,OAAO,CAACC,OAAO,EAAE;;GAGzB,MAAMmW,gBAAgB,CAACta,MAAmD,EAC1E;KACC,MAAM;OAAEua,aAAa;OAAEhY;MAAU,GAAGvC,MAAM;KAC1C,MAAMwa,aAA6B,GAAG,4CAAI,sBAAQpZ,OAAO,CAAC,kBAAkB,CAAC,CAACmZ,aAAa,CAAC;KAC5F,IAAI,CAACC,aAAa,EAClB;OACC,OAAOtW,OAAO,CAACC,OAAO,EAAE;;KAGzB,4CAAI,4CAAqBoW,aAAa;KACtC,MAAMhZ,OAAO,2CAAG,IAAI,oCAAiB;OACpC8V,IAAI,EAAEmD,aAAa,CAACnD,IAAI;OACxB9U,QAAQ;OACRgY,aAAa,EAAEC,aAAa,CAACzZ,EAAE;OAC/B6W,OAAO,EAAE4C,aAAa,CAAC5C;MACvB,CAAC;KAEF,+CAAO,IAAI,kDAAwBrW,OAAO;;GAG3C,MAAMkZ,iBAAiB,CAACza,MAA4B,EACpD;KACC,MAAM;OAAEqX,IAAI,GAAG;MAAI,GAAGrX,MAAM;KAC5B,IAAI,CAAC6B,cAAI,CAACiK,cAAc,CAACuL,IAAI,CAAC,EAC9B;OACC,OAAOnT,OAAO,CAACC,OAAO,EAAE;;KAGzBH,uBAAM,CAACC,IAAI,CAAC,mCAAmC,EAAEjE,MAAM,CAAC;KACxD,MAAMuB,OAAO,2CAAG,IAAI,kCAAgBvB,MAAM,CAAC;KAE3C,+CAAO,IAAI,kDAAwBuB,OAAO;;CA8X5C;CAAC,uCA3X6BA,OAAwB,EACrD;GACC,8CAAM,IAAI,8DAA8BA,OAAO,CAAC;GAEhD,+CAAO,IAAI,kDAAwBA,OAAO;CAC3C;CAAC,6CAEkCA,OAAO,EAC1C;GACC,8CAAM,IAAI,wCAAmBA,OAAO,CAACgB,QAAQ,CAAC;GAC9C,8CAAM,IAAI,4CAAqBhB,OAAO,CAAC;GAEvC,4CAAI,sCAAkB;KAAE2Y,KAAK,EAAE,IAAI;KAAE3X,QAAQ,EAAEhB,OAAO,CAACgB;IAAU;CAClE;CAAC,uCAE4BhB,OAAwB,EACrD;GACC,MAAMmZ,UAAU,GAAG,MAAM,4CAAI,8CAAsBnZ,OAAO,EACxDgE,KAAK,CAAE8U,MAAM,IAAK;KAClB,4CAAI,4CAAqB9Y,OAAO,CAACoZ,WAAW;KAC5C,4CAAI,kCAAgBN,MAAM,EAAE,uBAAuB;IACnD,CAAC;GAEHrW,uBAAM,CAACC,IAAI,CAAC,gDAAgD,EAAEyW,UAAU,CAAC;GACzE,MAAM;KAAE3Z;IAAI,GAAG2Z,UAAU;GACzB,IAAI,CAAC3Z,EAAE,EACP;KACC,OAAOmD,OAAO,CAACC,OAAO,EAAE;;GAGzB,4CAAI,oCAAe;KAClByW,KAAK,EAAErZ,OAAO,CAACoZ,WAAW;KAC1BE,KAAK,EAAE9Z,EAAE;KACTwB,QAAQ,EAAEhB,OAAO,CAACgB;IAClB;GAED,OAAO2B,OAAO,CAACC,OAAO,EAAE;CACzB;CAAC,0BAEenE,MAA0B,EAC1C;GACC,MAAM;KAAEqX,IAAI;KAAEkD,aAAa;KAAEhY,QAAQ;KAAEqV,OAAO;KAAEkC;IAAY,GAAG9Z,MAAM;GAErE,MAAM8a,aAAa,GAAG;KACrBC,QAAQ,EAAE7Z,2BAAI,CAACwS,SAAS,EAAE;KAC1BjC,MAAM,EAAE,KAAK;KACbuJ,OAAO,EAAE;IACT;GAED,OAAO;KACN3D,IAAI;KACJ9U,QAAQ;KACRC,MAAM,EAAE,4CAAI,8BAAYD,QAAQ,EAAEC,MAAM;KACxCmY,WAAW,EAAEJ,aAAa,WAAbA,aAAa,GAAI7Q,qBAAK,CAAC2N,IAAI,CAAC4D,SAAS,EAAE;KACpDrD,OAAO;KACPkC,UAAU;KACVrY,cAAc,0CAAE,IAAI,0CAAoBc,QAAQ,CAAC;KACjD,GAAGuY;IACH;CACF;CAAC,kCAEuB9a,MAAyB,EACjD;GACC,MAAM;KAAE4Z;IAAQ,GAAG5Z,MAAM;GACzB,IAAI,CAAC4Z,MAAM,EACX;KACC,MAAM,IAAIrN,KAAK,CAAC,yDAAyD,CAAC;;GAG3E,OAAO;KACN,2CAAG,IAAI,oCAAiBvM,MAAM,CAAC;KAC/BA,MAAM,EAAE;OAAEkb,OAAO,EAAE,CAACtB,MAAM;;IAC1B;CACF;CAAC,yBAEc5Z,MAA4B,EAC3C;GACC,MAAM;KAAEwH;IAAS,GAAGxH,MAAM;GAC1B,IAAI,CAACwH,OAAO,IAAI,CAACA,OAAO,CAAC2T,UAAU,EACnC;KACC,MAAM,IAAI5O,KAAK,CAAC,iDAAiD,CAAC;;GAGnE,OAAO;KACN,2CAAG,IAAI,oCAAiBvM,MAAM,CAAC;KAC/BwH;IACA;CACF;CAAC,4BAEiBjF,QAAgB,EAClC;GACC,IAAI,CAAC,4CAAI,8BAAYA,QAAQ,EAAEqF,WAAW,EAC1C;KACC,OAAO1D,OAAO,CAACC,OAAO,EAAE;;GAGzBH,uBAAM,CAACC,IAAI,CAAC,uEAAuE,CAAC;GACpF,MAAMmX,cAAc,GAAG,IAAIhS,cAAc,CAAC;KAAE5G,MAAM,EAAE,4CAAI,8BAAYD,QAAQ,EAAEC;IAAQ,CAAC;GAEvF,OAAO4Y,cAAc,CAAC/F,WAAW,CAAC,4CAAI,8BAAY9S,QAAQ,EAAE8T,aAAa,CAAC,CAACrM,IAAI,CAAC,MAAM;KACrF,4CAAI,sCAAkB;OAAEzH;MAAU;IAClC,CAAC,CAACgD,KAAK,CAAEC,KAAK,IAAK;;KAEnBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,CAAC;CACH;CAAC,8BAEmBjE,OAAwB,EAC5C;GACC,4CAAI,4CAAqBA,OAAO;GAEhC,KAAK,4CAAI,sBAAQuD,QAAQ,CAAC,6BAA6B,EAAE;KAAEvC,QAAQ,EAAEhB,OAAO,CAACgB;IAAU,CAAC;GAExF,OAAO,4CAAI,sBAAQuC,QAAQ,CAAC,cAAc,EAAEvD,OAAO,CAAC;CACrD;CAAC,8BAEmBA,OAAwB,EAC5C;GACC,MAAMsD,UAAU,GAAG,4CAAI,sBAAQzD,OAAO,CAAC,YAAY,CAAC,CAACG,OAAO,CAACgB,QAAQ,CAAC;GACtE,IAAI,CAACsC,UAAU,IAAItD,OAAO,CAAC8V,IAAI,KAAK,EAAE,EACtC;KACC;;GAGD,KAAK,4CAAI,sBAAQvS,QAAQ,CAAC,eAAe,EAAE;KAC1C/D,EAAE,EAAEQ,OAAO,CAACgB,QAAQ;KACpBsI,MAAM,EAAE;OAAEzI,SAAS,EAAEb,OAAO,CAACoZ;;IAC7B,CAAC;CACH;CAAC,+BAEoBpZ,OAAwB,EAC7C;GACC,MAAMsJ,MAAM,GAAG,EAAE;GAEjB,IAAItJ,OAAO,CAACqW,OAAO,EACnB;KACC/M,MAAM,CAAC+M,OAAO,GAAGrW,OAAO,CAACqW,OAAO;;GAGjC,IAAIrW,OAAO,CAACuY,UAAU,EACtB;KACCjP,MAAM,CAACiP,UAAU,GAAGvY,OAAO,CAACuY,UAAU;;GAGvC,IAAIvY,OAAO,CAAC8V,IAAI,EAChB;KACCxM,MAAM,CAACtJ,OAAO,GAAGA,OAAO,CAAC8V,IAAI;KAC7BxM,MAAM,CAACwQ,UAAU,GAAG9Z,OAAO,CAACoZ,WAAW;;GAGxC,IAAIpZ,OAAO,CAACiG,OAAO,EACnB;KACCqD,MAAM,CAACrD,OAAO,GAAGjG,OAAO,CAACiG,OAAO;;GAGjC,MAAM8T,SAAS,GAAG;KACjB/Y,QAAQ,EAAEhB,OAAO,CAACgB,QAAQ,CAACgZ,QAAQ,EAAE;KACrC1Q;IACA;GAED,OAAOhB,wBAAS,CAACzE,sBAAU,CAACoW,mBAAmB,EAAE;KAAE3V,IAAI,EAAEyV;IAAW,CAAC;CACtE;CAAC,0BAEatb,MAA0D,EACxE;GACC,MAAM;KAAE4a,KAAK;KAAEC,KAAK;KAAEtY;IAAU,GAAGvC,MAAM;GACzC,KAAK,4CAAI,sBAAQ8E,QAAQ,CAAC,uBAAuB,EAAE;KAClD/D,EAAE,EAAE6Z,KAAK;KACT/P,MAAM,EAAE;OAAE9J,EAAE,EAAE8Z;;IACd,CAAC;GACF,KAAK,4CAAI,sBAAQ/V,QAAQ,CAAC,cAAc,EAAE;KACzCvC,QAAQ;KACRsI,MAAM,EAAE;OACPyH,MAAM,EAAEuI,KAAK;OACbxE,aAAa,EAAEwE;;IAEhB,CAAC;GACF,KAAK,4CAAI,sBAAQ/V,QAAQ,CAAC,eAAe,EAAE;KAC1C/D,EAAE,EAAEwB,QAAQ;KACZsI,MAAM,EAAE;OAAEzI,SAAS,EAAEyY;;IACrB,CAAC;CACH;CAAC,8BAEmBzY,SAAiB,EACrC;GACC,KAAK,4CAAI,sBAAQ0C,QAAQ,CAAC,iBAAiB,EAAE;KAC5C/D,EAAE,EAAEqB,SAAS;KACbyI,MAAM,EAAE;OAAErF,KAAK,EAAE;;IACjB,CAAC;CACH;CAAC,8BAEmBpD,SAAiB,EACrC;GACC,KAAK,4CAAI,sBAAQ0C,QAAQ,CAAC,iBAAiB,EAAE;KAC5C/D,EAAE,EAAEqB,SAAS;KACbyI,MAAM,EAAE;OACPmQ,OAAO,EAAE,IAAI;OACbxV,KAAK,EAAE;;IAER,CAAC;CACH;CAAC,2BAEgBxF,MAA0C,GAAG,EAAE,EAChE;GACC,MAAM;KAAEka,KAAK,GAAG,KAAK;KAAE3X;IAAU,GAAGvC,MAAM;GAC1CoY,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAAC3O,MAAM,CAAC8R,cAAc,EAAE;KAClDjZ,MAAM,EAAE,4CAAI,8BAAYD,QAAQ,EAAEC,MAAM;KACxCkZ,SAAS,EAAExB,KAAK,GAAGyB,iCAAqB,CAACC,IAAI,GAAGD,iCAAqB,CAACE;IACtE,CAAC;CACH;CAAC,uBAEUtZ,QAAgB,EAC3B;GACC,OAAO,4CAAI,sBAAQnB,OAAO,CAAC,WAAW,CAAC,CAACmB,QAAQ,EAAE,IAAI,CAAC;CACxD;CAAC,+BAEkBC,MAAc,EACjC;GACC,OAAO,4CAAI,sBAAQpB,OAAO,CAAC,mBAAmB,CAAC,CAACoB,MAAM,EAAE,IAAI,CAAC;CAC9D;CAAC,6BAEkBD,QAAgB,EACnC;GACC,OAAO,4CAAI,sBAAQnB,OAAO,CAAC,sBAAsB,CAAC,CAACmB,QAAQ,CAAC;CAC7D;CAAC,wCAE6BvC,MAA+E,EAC7G;GACC,MAAM;KAAEoa,QAAQ;KAAE7X,QAAQ;KAAEwX;IAAgB,GAAG/Z,MAAM;GACrD,MAAM;KAAEe,EAAE;KAAE+a;IAAS,GAAG1B,QAAQ;GAEhC,IAAIrZ,EAAE,EACN;KACC,4CAAI,oCAAe;OAClB6Z,KAAK,EAAEb,cAAc,CAACY,WAAW;OACjCE,KAAK,EAAE9Z,EAAE;OACTwB;MACA;;GAEF/B,MAAM,CAACqN,OAAO,CAACiO,OAAO,CAAC,CAACzb,OAAO,CAAC,CAAC,CAAC0b,IAAY,EAAE3Z,SAAiB,CAAC,KAAK;KACtE,4CAAI,oCAAe;OAClBwY,KAAK,EAAEmB,IAAI;OACXlB,KAAK,EAAEzY,SAAS;OAChBG;MACA;IACD,CAAC;CACH;CAAC,qCAE0B;GAAEwX,cAAc;GAAEC;CAAe,CAAC,EAC7D;GACC,IAAID,cAAc,EAClB;KACC,KAAK,4CAAI,sBAAQjV,QAAQ,CAAC,iBAAiB,EAAE;OAC5C/D,EAAE,EAAEgZ,cAAc,CAACY,WAAW;OAC9B9P,MAAM,EAAE;SAAErF,KAAK,EAAE;;MACjB,CAAC;;GAGHhF,MAAM,CAACwb,IAAI,CAAChC,cAAc,CAAC,CAAC3Z,OAAO,CAAE0b,IAAY,IAAK;KACrD,KAAK,4CAAI,sBAAQjX,QAAQ,CAAC,iBAAiB,EAAE;OAC5C/D,EAAE,EAAEgb,IAAI;OACRlR,MAAM,EAAE;SAAErF,KAAK,EAAE;;MACjB,CAAC;IACF,CAAC;CACH;CAAC,kCAEuBxF,MAA0B,EAAEga,cAAkC,EACtF;GACC,MAAM;KAAEF,UAAU;KAAEvX;IAAU,GAAGvC,MAAM;GACvC,IAAI8Z,UAAU,CAAChT,MAAM,KAAK,CAAC,EAC3B;KACC,OAAO,EAAE;;GAGV,MAAMmV,gBAAgB,GAAG,EAAE;GAC3Bzb,MAAM,CAACqN,OAAO,CAACmM,cAAc,CAAC,CAAC3Z,OAAO,CAAC,CAAC,CAAC0b,IAAY,EAAE3Z,SAAiB,CAAC,KAAK;KAC7E,MAAMb,OAAuB,GAAG,4CAAI,sBAAQH,OAAO,CAAC,kBAAkB,CAAC,CAACgB,SAAS,CAAC;KAClF,IAAI,CAACb,OAAO,EACZ;OACC;;KAGD0a,gBAAgB,CAACrT,IAAI,CAAC;OACrB,2CAAG,IAAI,oCAAiB;SAAErG,QAAQ;SAAE8U,IAAI,EAAE9V,OAAO,CAAC8V,IAAI;SAAEkD,aAAa,EAAEwB,IAAI;SAAEnE,OAAO,EAAErW,OAAO,CAACqW;QAAS,CAAC;OACxGsE,OAAO,0CAAE,IAAI,gDAAuB9Z,SAAS,CAAC;OAC9CD,MAAM,EAAEZ,OAAO,CAACY,MAAM;OACtBwV,SAAS,EAAEpW,OAAO,CAACoW,SAAS;OAC5B/W,KAAK,EAAEW,OAAO,CAACX;MACf,CAAC;IACF,CAAC;GAEF,OAAOqb,gBAAgB;CACxB;CAAC,gCAEqB7Z,SAAiB,EACvC;GACC,MAAMb,OAAuB,GAAG,4CAAI,sBAAQH,OAAO,CAAC,kBAAkB,CAAC,CAACgB,SAAS,CAAC;GAClF,MAAMpB,IAAI,2CAAG,IAAI,8CAAoBO,OAAO,CAACiB,MAAM,CAAC;GAEpD,MAAM2Z,SAAS,GAAG,4CAAI,sBAAQ/a,OAAO,CAAC,oBAAoB,CAAC,CAACgB,SAAS,CAAC;GAEtE,MAAMmR,MAAM,GAAG4I,SAAS,GAAG5a,OAAO,CAAC2a,OAAO,CAAC3I,MAAM,GAAGhS,OAAO,CAACwZ,QAAQ;GACpE,MAAM9M,QAAQ,GAAGkO,SAAS,GAAG5a,OAAO,CAAC2a,OAAO,CAACjO,QAAQ,GAAGjN,IAAI,CAAC6B,IAAI;GACjE,IAAIuZ,SAAS,GAAGD,SAAS,GAAG5a,OAAO,CAAC2a,OAAO,CAACE,SAAS,GAAGpb,IAAI,CAAC4B,IAAI;GACjE,IAAIqL,QAAQ,KAAKnL,oBAAQ,CAACgV,OAAO,EACjC;KACCsE,SAAS,GAAG,IAAI;;GAGjB,OAAO;KACNrb,EAAE,0CAAE,IAAI,kDAAwBQ,OAAO,CAACiB,MAAM,EAAEJ,SAAS,CAAC;KAC1DmR,MAAM;KACNtF,QAAQ;KACRmO;IACA;CACF;CAAC,qCAE0Bpc,MAI1B,EACD;GACC,MAAM;KAAEuC,QAAQ;KAAEyX,cAAc;KAAED;IAAgB,GAAG/Z,MAAM;GAE3D,MAAMqc,YAAY,GAAG;KACpB9Z,QAAQ;KACRuX,UAAU,EAAEE;IACZ;GAED,IAAID,cAAc,EAClB;KACCsC,YAAY,CAAChF,IAAI,GAAG0C,cAAc,CAAC1C,IAAI;KACvCgF,YAAY,CAAC1B,WAAW,GAAGZ,cAAc,CAACY,WAAW;;GAGtD,OAAO0B,YAAY;CACpB;CAAC,+BAEoBpC,iBAAoC,EACzD;GACC,MAAMqC,WAAW,GAAG,EAAE;GACtBrC,iBAAiB,CAAC5Z,OAAO,CAAEkB,OAAO,IAAK;KACtC+a,WAAW,CAAC1T,IAAI,yCAAC,IAAI,4CAAqBrH,OAAO,EAAE;IACnD,CAAC;GAEF,OAAO2C,OAAO,CAAC2C,GAAG,CAACyV,WAAW,CAAC;CAChC;CAAC,6BAEkBxC,UAAoB,EACvC;GACC,MAAMgC,OAAO,GAAG,EAAE;GAClBhC,UAAU,CAACzZ,OAAO,CAAEU,EAAE,IAAK;KAC1B+a,OAAO,CAACpS,qBAAK,CAAC2N,IAAI,CAAC4D,SAAS,EAAE,CAAC,GAAGla,EAAE;IACpC,CAAC;GAEF,OAAO+a,OAAO;CACf;CAAC,iCAEsBtZ,MAAc,EAAEJ,SAAiB,EACxD;GACC,MAAMG,QAAQ,GAAG,4CAAI,8CAAoBC,MAAM,EAAED,QAAQ;GACzD,IAAIA,QAAQ,CAACga,UAAU,CAAC,MAAM,CAAC,EAC/B;KACC,OAAQ,GAAEha,QAAS,IAAGH,SAAU,EAAC;;GAGlC,MAAMoa,WAAW,GAAGtb,2BAAI,CAACwS,SAAS,EAAE;GAEpC,OAAQ,GAAEnR,QAAS,IAAGia,WAAY,IAAGpa,SAAU,EAAC;CACjD;CAAC,yBAEciY,MAAwB,EAAEoC,UAAkB,EAC3D;GACCpC,MAAM,CAACha,OAAO,CAAEmF,KAAK,IAAK;;KAEzBC,OAAO,CAACD,KAAK,CAAE,mBAAkBiX,UAAW,iBAAgBjX,KAAK,CAACkX,IAAK,aAAYlX,KAAK,CAACjE,OAAQ,EAAC,CAAC;IACnG,CAAC;CACH;AAxfYkY,kBAAc,CAInB7V,QAAQ,GAAmB,IAAI;;CCvBhC,MAAM+Y,mBAAmB,CAChC;GAYC5c,WAAW,GACX;KAAA,KAZA6c,KAAK,GAAW,IAAI;KAAA,KACpBC,UAAU,GAAW,IAAI;KAAA,KACzBC,YAAY,GAAW,EAAE;KAAA,KACzBvZ,SAAS,GAAY,KAAK;KAAA,KAE1B+O,MAAM,GAAW,CAAC;KAAA,KAClByK,QAAQ,GAAW,CAAC;KAAA,KACpBtZ,kBAAkB,GAAY,IAAI;KAAA,KAElCuZ,qBAAqB,GAAgB,IAAIhQ,GAAG,EAAE;KAI7C,IAAI,CAAC4P,KAAK,GAAG1b,2BAAI,CAACC,QAAQ,EAAE;KAC5B,IAAI,CAAC0b,UAAU,GAAG3b,2BAAI,CAACgE,aAAa,EAAE;KACtC,IAAI,CAAC+X,kBAAkB,GAAGtN,iBAAO,CAACC,QAAQ,CAAC,IAAI,CAACsN,aAAa,EAAE,GAAG,EAAE,IAAI,CAAC;KACzE,IAAI,CAACxS,WAAW,GAAG,IAAI7C,0BAAW,EAAE;;GAGrC/D,aAAa,GACb;KACC,IAAI,CAACP,SAAS,GAAG,IAAI;KAErB,OAAO,IAAI,CAACc,YAAY,CAAC;OAACC,SAAS,EAAE;MAAK,CAAC;;GAG5CC,YAAY,GACZ;KACC,IAAI,IAAI,CAAChB,SAAS,IAAI,CAAC,IAAI,CAACE,kBAAkB,EAC9C;OACC,OAAOS,OAAO,CAACC,OAAO,EAAE;;KAEzB,IAAI,CAACZ,SAAS,GAAG,IAAI;KAErB,OAAO,IAAI,CAACc,YAAY,EAAE;;GAG3B8Y,MAAM,CAACC,cAAsB,EAC7B;KACC,IAAI,CAACJ,qBAAqB,CAAC9L,GAAG,CAACkM,cAAc,CAAC;KAC9C,IAAI,CAACR,KAAK,CAAC9X,QAAQ,CAAC,sBAAsB,EAAE;OAAE/D,EAAE,EAAEqc;MAAgB,CAAC;KACnE,IAAI,CAACR,KAAK,CAAC9X,QAAQ,CAAC,gCAAgC,EAAE;OAAE/D,EAAE,EAAEqc;MAAgB,CAAC;KAE7E,IAAI,CAACH,kBAAkB,EAAE;;GAG1BI,iBAAiB,CAACD,cAAsB,EAAErP,KAAa,EACvD;KACC,MAAMoM,aAAa,GAAG;OACrB,WAAW,EAAEiD,cAAc;OAC3B,cAAc,EAAErP;MAChB;KAED,IAAI,CAAC6O,KAAK,CAAC9X,QAAQ,CAAC,sBAAsB,EAAE;OAAC/D,EAAE,EAAEqc;MAAe,CAAC;KAEjE,IAAI,CAACP,UAAU,CAAC1X,UAAU,CAAC,mBAAmB,EAAEgV,aAAa,CAAC,CAACnQ,IAAI,CAACoQ,QAAQ,IAAI;OAC/EpW,uBAAM,CAACC,IAAI,CAAE,iDAAgD,EAAEmW,QAAQ,CAAC;MACxE,CAAC,CAAC7U,KAAK,CAACC,KAAK,IAAI;OACjBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;;MAEpB,CAAC;;;GAGH8X,eAAe,CAACtd,MAAM,EACtB;KACC,MAAM;OAACe,EAAE;OAAEsW,IAAI;OAAEkG,eAAe,GAAG,MAAM,EAAE;OAAEC,aAAa,GAAG,MAAM;MAAG,GAAGxd,MAAM;KAE/E,IAAI,CAAC6c,UAAU,CAAC1X,UAAU,CAACC,sBAAU,CAACqY,cAAc,EAAE;OACrDC,SAAS,EAAE3c,EAAE;OACb4c,WAAW,EAAEtG;MACb,CAAC,CAACrN,IAAI,CAACoQ,QAAQ,IAAI;OACnBmD,eAAe,CAACnD,QAAQ,CAAC;MACzB,CAAC,CAAC7U,KAAK,CAACC,KAAK,IAAI;OACjBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;OACpBgY,aAAa,EAAE;MACf,CAAC;;GAGHN,aAAa,GACb;KACC,MAAMU,WAAW,GAAG,CAAC,GAAG,IAAI,CAACZ,qBAAqB,CAAC;KAEnD,IAAI,CAACH,UAAU,CAAC1X,UAAU,CAAC,kBAAkB,EAAE;OAACpE,EAAE,EAAE6c;MAAY,CAAC,CAAC5T,IAAI,CAACoQ,QAAQ,IAAI;OAClFpW,uBAAM,CAACC,IAAI,CAAE,wDAAuD2Z,WAAY,EAAC,EAAExD,QAAQ,CAAC;MAC5F,CAAC,CAAC7U,KAAK,CAACC,KAAK,IAAI;OACjBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;;MAEpB,CAAC;;KAEF,IAAI,CAACwX,qBAAqB,CAACa,KAAK,EAAE;;GAGnCxZ,YAAY,CAAC;KAACC,SAAS,GAAG;IAAM,GAAG,EAAE,EACrC;KACC,MAAMwZ,sBAAsB,GAAG;OAC9B,OAAO,EAAE,IAAI,CAAChB,YAAY;OAC1B,cAAc,EAAE;MAChB;KACD,MAAMiB,gBAAgB,GAAG;OACxB,CAAC3Y,sBAAU,CAAC4Y,WAAW,GAAG,CAAC5Y,sBAAU,CAAC4Y,WAAW,EAAEF,sBAAsB;MACzE;KAED,IAAI,CAACxZ,SAAS,EACd;OACCwZ,sBAAsB,CAACG,OAAO,GAAG,IAAI,CAAC3L,MAAM;OAC5CwL,sBAAsB,CAACI,SAAS,GAAG,IAAI,CAACnB,QAAQ;MAChD,MAED;OACCgB,gBAAgB,CAAC3Y,sBAAU,CAAC+Y,iBAAiB,CAAC,GAAG,CAAC/Y,sBAAU,CAAC+Y,iBAAiB,EAAE,EAAE,CAAC;;KAGpF,OAAO,IAAIja,OAAO,CAACC,OAAO,IAAI;OAC7B,IAAI,CAAC0Y,UAAU,CAACrH,SAAS,CAACuI,gBAAgB,EAAG3D,QAAQ,IAAK;SACzDpW,uBAAM,CAACC,IAAI,CAAC,uBAAuB,EAAEmW,QAAQ,CAAC;SAC9CjW,OAAO,CAAC,IAAI,CAACia,cAAc,CAAChE,QAAQ,CAAC,CAAC;QACtC,CAAC;MACF,CAAC;;GAGHgE,cAAc,CAAChE,QAAgB,EAC/B;KACC,MAAMiE,mBAAmB,GAAGjE,QAAQ,CAAChV,sBAAU,CAAC4Y,WAAW,CAAC,CAACnY,IAAI,EAAE;KACnE,IAAI,CAACpC,kBAAkB,GAAG,CAAC,IAAI,CAAC6a,UAAU,CAACD,mBAAmB,CAACE,aAAa,CAAC;KAC7E,IAAIF,mBAAmB,CAACE,aAAa,CAACzX,MAAM,KAAK,CAAC,EAClD;OACC9C,uBAAM,CAACC,IAAI,CAAC,iCAAiC,EAAEoa,mBAAmB,CAAC;OAEnE,OAAOna,OAAO,CAACC,OAAO,EAAE;;KAGzB,IAAI,CAACmO,MAAM,GAAG,IAAI,CAACkM,aAAa,CAACH,mBAAmB,CAACE,aAAa,CAAC;KACnE,IAAI,CAACxB,QAAQ,GAAG,IAAI,CAAC0B,eAAe,CAACJ,mBAAmB,CAACE,aAAa,CAAC;KAEvE,OAAO,IAAI,CAAC5Z,YAAY,CAAC0Z,mBAAmB,CAAC,CAACrU,IAAI,CAAC,MAAM;OACxD,IAAI,CAACzG,SAAS,GAAG,KAAK;OAEtB,IAAI6W,QAAQ,CAAChV,sBAAU,CAAC+Y,iBAAiB,CAAC,EAC1C;SACC,OAAO/D,QAAQ,CAAChV,sBAAU,CAAC+Y,iBAAiB,CAAC,CAACtY,IAAI,EAAE;;OAGrD,OAAO,EAAE;MACT,CAAC;;GAGHlB,YAAY,CAAC0Z,mBAA8C,EAC3D;KACC,IAAI,CAAC3T,WAAW,CAACgM,eAAe,CAAC2H,mBAAmB,CAAC9d,KAAK,CAAC;KAE3D,OAAO,IAAI,CAACqc,KAAK,CAAC9X,QAAQ,CAAC,0BAA0B,EAAEuZ,mBAAmB,CAAC;;GAG5EG,aAAa,CAACE,UAAkC,EAChD;KACC,OAAOA,UAAU,CAACA,UAAU,CAAC5X,MAAM,GAAG,CAAC,CAAC,CAAC/F,EAAE;;GAG5C0d,eAAe,CAACC,UAAkC,EAClD;KACC,OAAO,IAAI,CAACC,WAAW,CAACD,UAAU,CAACA,UAAU,CAAC5X,MAAM,GAAG,CAAC,CAAC,CAAC;;GAG3D6X,WAAW,CAACre,IAA0B,EACtC;KACC,OAAOA,IAAI,CAACse,WAAW,KAAKC,kCAAsB,CAACC,OAAO,GACvDD,kCAAsB,CAACC,OAAO,GAC9BD,kCAAsB,CAACE,MAAM;;GAIjCT,UAAU,CAACC,aAAoB,EAC/B;KACC,IAAI,CAAC1c,cAAI,CAACK,aAAa,CAACqc,aAAa,CAAC,IAAIA,aAAa,CAACzX,MAAM,GAAG,IAAI,CAACgW,YAAY,EAClF;OACC,OAAO,IAAI;;KAGZ,OAAO,KAAK;;GAGbkC,OAAO,GACP;KACChb,uBAAM,CAACC,IAAI,CAAC,gCAAgC,CAAC;;CAE/C;;CCzNuC;AAEvC,CAAO,MAAMgb,WAAW,CACxB;GAGClf,WAAW,GACX;KAAA;OAAA;OAAA;;KACC,4CAAI,kCAAemB,2BAAI,CAACgE,aAAa,EAAE;;GAGxCiY,MAAM,CAAC;KAAC3a,MAAM;KAAEoX;IAAO,EACvB;KACC,MAAMlU,WAAW,GAAG;OAACjD,OAAO,EAAED,MAAM;OAAE0c,OAAO,EAAEtF;MAAO;KACtD,OAAO,4CAAI,gCAAazU,UAAU,CAACC,sBAAU,CAAC+Z,gBAAgB,EAAEzZ,WAAW,CAAC,CAACH,KAAK,CAACC,KAAK,IAAI;OAC3FC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,CAAC;;GAGH4Z,IAAI,CAACxF,MAAc,EACnB;KACC,MAAMlU,WAAW,GAAG;OAACwZ,OAAO,EAAEtF;MAAO;KACrC,OAAO,4CAAI,gCAAazU,UAAU,CAACC,sBAAU,CAACia,cAAc,EAAE3Z,WAAW,CAAC,CAACH,KAAK,CAACC,KAAK,IAAI;OACzFC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D,CAAC;;CAEJ;;CCzBO,MAAM8Z,mBAAmB,SAASnc,aAAa,CACtD;GAGC,OAAOQ,WAAW,GAClB;KACC,IAAI,CAAC,IAAI,CAACC,QAAQ,EAClB;OACC,IAAI,CAACA,QAAQ,GAAG,IAAI,IAAI,EAAE;;KAG3B,OAAO,IAAI,CAACA,QAAQ;;GAGrBC,aAAa,GACb;KACC,OAAO,IAAI,CAAC+Y,KAAK,CAACxb,OAAO,CAAC,4BAA4B,CAAC;;GAGxD0C,aAAa,CAAC;KAACC,oBAAoB,GAAG;IAAM,GAAG,EAAE,EACjD;KACC,IAAI,CAACR,SAAS,GAAG,IAAI;KAErB,OAAO,IAAI,CAACc,YAAY,CAAC;OAACC,SAAS,EAAE;MAAK,CAAC;;GAG5CK,YAAY,CAAC1E,OAAO,EACpB;KACC,MAAM;OAACM,KAAK;OAAEgf,SAAS;OAAEC;MAAO,GAAG,IAAI,CAACC,oBAAoB,CAACxf,OAAO,CAAC;KAErE,MAAMuG,YAAY,GAAG,IAAI,CAACoW,KAAK,CAAC9X,QAAQ,CAAC,WAAW,EAAEvE,KAAK,CAAC;KAC5D,MAAMkG,gBAAgB,GAAG,IAAI,CAACmW,KAAK,CAAC9X,QAAQ,CAAC,WAAW,EAAEya,SAAS,CAAC;KAEpE,MAAMG,UAAU,GAAG,IAAI,CAACC,WAAW,CAACH,MAAM,CAAC;KAC3C,MAAM5Y,aAAa,GAAG,IAAI,CAACgW,KAAK,CAAC9X,QAAQ,CAAC,kBAAkB,EAAE4a,UAAU,CAAC;KAEzE,OAAOxb,OAAO,CAAC2C,GAAG,CAAC,CAACL,YAAY,EAAEC,gBAAgB,EAAEG,aAAa,CAAC,CAAC;;GAGpE+Y,WAAW,CAACC,aAAuB,EACnC;KACCA,aAAa,GAAGA,aAAa,CAAC7Y,KAAK,CAAC,CAAC,CAAC,CAAC;KACvC6Y,aAAa,CAACvf,OAAO,CAACC,IAAI,IAAI;OAC7B,IAAI,CAACsc,KAAK,CAAC9X,QAAQ,CAAC,cAAc,EAAE;SACnCvC,QAAQ,EAAEjC,IAAI,CAACS,EAAE;SACjB8J,MAAM,EAAE;WACPvI,OAAO,EAAE;;QAEV,CAAC;MACF,CAAC;KAEF,OAAOsd,aAAa;;GAGrBC,aAAa,CAAC;KAACha;IAAK,EACpB;;;CAGD;CA1DayZ,mBAAmB,CAExB1b,QAAQ,GAAG,IAAI;;CCHiB;CAAA;CAAA;CAAA;CAAA;AAUxC,CAAO,MAAMkc,eAAe,SAAS1H,6BAAY,CACjD;GAiBCrY,WAAW,GACX;KACC,KAAK,EAAE;KAAC;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA,OAlB6C;;KAAE;OAAA;OAAA;;KAmBvD,IAAI,CAACggB,iBAAiB,CAACD,eAAe,CAACE,cAAc,CAAC;KAEtD,4CAAI,oDAA0B,4CAAI,oCAAiBC,IAAI,CAAC,IAAI,CAAC;KAC7D7H,6BAAY,CAAC8H,SAAS,CAAC5H,qBAAS,CAAC6H,QAAQ,CAACC,MAAM,0CAAE,IAAI,kDAAwB;;GAG/EC,cAAc,CAAChf,OAA+B,EAC9C;KACC,MAAM;OAAEif,YAAY;OAAEC,UAAU;OAAEC;MAAY,GAAGnf,OAAO;KAExD,4CAAI,wCAAmBkf,UAAU,CAAC,GAAG,IAAIE,yBAAQ,CAAC;OACjDD,UAAU;OACVE,UAAU,EAAE,4CAA4C;OACxDC,QAAQ,EAAE,IAAI;OACdC,iBAAiB,EAAE;SAClBC,QAAQ,EAAEP;QACV;OACDQ,gBAAgB,EAAE,IAAI;OACtBC,iBAAiB,EAAE,IAAI;OACvBC,eAAe,EAAE,SAAS;OAC1BC,iBAAiB,EAAGlf,IAAkB,IAAK;SAC1C,OAAO,CAACA,IAAI,CAACmf,aAAa,CAAC,YAAY,CAAC,IAAInf,IAAI,CAACof,YAAY,EAAE,KAAK,KAAK;QACzE;OACDC,mBAAmB,EAAE,YAAY;OACjCC,uBAAuB,EAAE,OAAO;OAChCC,kBAAkB,EAAE,GAAG;OACvBC,iBAAiB,EAAE,GAAG;OACtBC,wBAAwB,EAAE,IAAI;OAC9BC,uBAAuB,EAAE,IAAI;OAC7BC,WAAW,EAAE,IAAI;OACjBC,MAAM,EAAE;SACP,CAACC,8BAAa,CAACC,cAAc,GAAIC,KAAK,IAAK;WAC1C,IAAI,CAACzJ,IAAI,CAACyH,eAAe,CAAC6B,MAAM,CAACI,cAAc,EAAED,KAAK,CAAC;UACvD;SACD,CAACF,8BAAa,CAACI,iBAAiB,GAAIF,KAAK,IAAK;WAC7C,IAAI,CAACzJ,IAAI,CAACyH,eAAe,CAAC6B,MAAM,CAACM,iBAAiB,EAAEH,KAAK,CAAC;UAC1D;SACD,CAACF,8BAAa,CAACM,QAAQ,GAAIJ,KAAK,IAAK;WACpC,MAAM;aAAE/f;YAAM,GAAG+f,KAAK,CAACK,OAAO,EAAE;WAChC,IAAI,CAAC9J,IAAI,CAACyH,eAAe,CAAC6B,MAAM,CAACS,SAAS,EAAE;aAAErgB,IAAI;aAAEwe;YAAY,CAAC;UACjE;SACD,CAACqB,8BAAa,CAACS,oBAAoB,GAAIP,KAAK,IAAK;WAChD,IAAI,CAACzJ,IAAI,CAACyH,eAAe,CAAC6B,MAAM,CAACW,oBAAoB,EAAER,KAAK,CAAC;UAC7D;SACD,CAACF,8BAAa,CAACW,oBAAoB,GAAIT,KAAK,IAAK;WAChD,MAAM;aAAE/f;YAAM,GAAG+f,KAAK,CAACK,OAAO,EAAE;WAChC,IAAI,CAAC9J,IAAI,CAACyH,eAAe,CAAC6B,MAAM,CAACa,oBAAoB,EAAE;aAAEzgB,IAAI;aAAEwe;YAAY,CAAC;UAC5E;SACD,CAACqB,8BAAa,CAACa,KAAK,GAAIX,KAAK,IAAK;WACjC,IAAI,CAACzJ,IAAI,CAACyH,eAAe,CAAC6B,MAAM,CAACe,iBAAiB,EAAEZ,KAAK,CAAC;UAC1D;SACD,CAACF,8BAAa,CAACe,UAAU,GAAIb,KAAK,IAAK;WACtC,IAAI,CAACzJ,IAAI,CAACyH,eAAe,CAAC6B,MAAM,CAACe,iBAAiB,EAAEZ,KAAK,CAAC;UAC1D;SACD,CAACF,8BAAa,CAACgB,uBAAuB,GAAId,KAAK,IAAK;WACnD,IAAI,CAACzJ,IAAI,CAACyH,eAAe,CAAC6B,MAAM,CAACkB,sBAAsB,EAAEf,KAAK,CAAC;UAC/D;SACD,CAACF,8BAAa,CAACkB,eAAe,GAAG,MAAM;WACtC,4CAAI,wCAAmBvC,UAAU,CAAC,CAACvB,OAAO,CAAC;aAAE+D,qBAAqB,EAAE;YAAO,CAAC;;;MAG9E,CAAC;;GAGHC,KAAK,CAACzC,UAAkB,EACxB;KACC,4CAAI,wCAAmBA,UAAU,CAAC,CAAC0C,aAAa,CAAC,IAAI,CAAC;KACtD,4CAAI,wCAAmB1C,UAAU,CAAC,CAACyC,KAAK,EAAE;;GAG3CE,QAAQ,CAACC,KAAwB,EACjC;KACC,MAAMC,UAAU,GAAG,EAAE;KACrBD,KAAK,CAAC9iB,OAAO,CAAEgjB,IAAI,IAAK;OACvB,MAAMthB,IAAI,2CAAG,IAAI,sBAAUshB,IAAI,CAAC;OAChC,IAAIthB,IAAI,EACR;SACCqhB,UAAU,CAACxa,IAAI,CAAC7G,IAAI,CAAC;;MAEtB,CAAC;KAEF,OAAOqhB,UAAU;;GAGlBrb,QAAQ,CAACwY,UAAU,EACnB;KACC,OAAO,4CAAI,wCAAmBA,UAAU,CAAC,CAACxY,QAAQ,EAAE;;GAmDrDiX,OAAO,GACP;KACC5G,6BAAY,CAACkL,WAAW,CAAChL,qBAAS,CAAC6H,QAAQ,CAACC,MAAM,0CAAE,IAAI,kDAAwB;;CAElF;CAAC,mBApDSiD,IAAqB,EAC9B;GACC,OAAO,4CAAI,wCAAmBA,IAAI,CAAC9C,UAAU,CAAC,CAACgD,OAAO,CACrDF,IAAI,CAACthB,IAAI,EACT;KACChB,EAAE,EAAEsiB,IAAI,CAACG,UAAU;KACnBC,UAAU,EAAE;OACXlhB,QAAQ,EAAE8gB,IAAI,CAAC9gB,QAAQ;OACvBC,MAAM,EAAE6gB,IAAI,CAAC7gB,MAAM;OACnB+X,aAAa,EAAE8I,IAAI,CAAC9I,aAAa;OACjCmJ,UAAU,EAAEL,IAAI,CAACK;;IAElB,CACD;CACF;CAAC,0BAEe5B,KAAgB,EAChC;GACC,MAAM;KAAE0B,UAAU;KAAEjJ;IAAe,GAAGuH,KAAK,CAACK,OAAO,EAAE;GACrD,IAAI,CAACqB,UAAU,IAAI,CAACjJ,aAAa,EACjC;KACC;;GAGD,4CAAI,oDAAyBiJ,UAAU;GACvC,IAAI,CAACnL,IAAI,CAACyH,eAAe,CAAC6B,MAAM,CAACgC,kBAAkB,EAAE;KAAEpJ,aAAa;KAAEiJ;IAAY,CAAC;CACpF;CAAC,kCAEuBA,UAAkB,EAC1C;GACC,MAAMI,YAAY,GAAGpjB,MAAM,CAACC,MAAM,yCAAC,IAAI,wCAAmB;GAC1D,KAAK,MAAM0f,QAAQ,IAAIyD,YAAY,EACnC;KACC,IAAI,CAACzD,QAAQ,CAAC0D,OAAO,EACrB;OACC;;KAGD,MAAM9hB,IAAI,GAAGoe,QAAQ,CAAC0D,OAAO,CAACL,UAAU,CAAC;KACzC,IAAIzhB,IAAI,EACR;OACCA,IAAI,CAAC+hB,MAAM,EAAE;OAEb;;;CAGH;CA5JYhE,eAAe,CAKpBE,cAAc,GAAG,mDAAmD;CAL/DF,eAAe,CAOpB6B,MAAM,GAAG;GACfI,cAAc,EAAE,gBAAgB;GAChCK,SAAS,EAAE,WAAW;GACtBH,iBAAiB,EAAE,mBAAmB;GACtCK,oBAAoB,EAAE,sBAAsB;GAC5CE,oBAAoB,EAAE,sBAAsB;GAC5CE,iBAAiB,EAAE,mBAAmB;GACtCiB,kBAAkB,EAAE,oBAAoB;GACxCd,sBAAsB,EAAE;CACzB,CAAC;;CCnB0C;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AA+C5C,CAAO,MAAMkB,mBAAgB,CAC7B;GAmBC,OAAOpgB,WAAW,GAClB;KACC,IAAI,CAAC,IAAI,CAACC,QAAQ,EAClB;OACC,IAAI,CAACA,QAAQ,GAAG,IAAI,IAAI,EAAE;;KAG3B,OAAO,IAAI,CAACA,QAAQ;;GAGrB7D,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA,OA3BqC;;KAAK;OAAA;OAAA,OACW;;KAAE;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA,OAWnD;;KAgBH,4CAAI,wBAAUmB,2BAAI,CAACC,QAAQ,EAAE;KAC7B,4CAAI,kCAAeD,2BAAI,CAACgE,aAAa,EAAE;KACvC,4CAAI,sCAAmBuU,iBAAc,CAAC9V,WAAW,EAAE;KACnD,4CAAI;;GAoBLqgB,qBAAqB,CAACC,aAA2B,EAAE1hB,QAAQ,EAC3D;KACC,OAAO2hB,yCAAwB,CAACD,aAAa,CAAC,CAACja,IAAI,CAAEpJ,KAAa,IAAK;OACtE,MAAMujB,UAAU,GAAGvjB,KAAK,CAACyT,MAAM,CAAEtS,IAAI,IAAK2H,qBAAK,CAAC3H,IAAI,CAACqiB,OAAO,CAACriB,IAAI,CAACa,IAAI,CAAC,CAAC;OACxE,IAAIuhB,UAAU,CAACrd,MAAM,KAAK,CAAC,EAC3B;SACC,OAAO;WACNlG,KAAK,EAAE,EAAE;WACT2f,UAAU,EAAE;UACZ;;OAGF,OAAO,IAAI,CAAC2C,QAAQ,CAAC;SACpBtiB,KAAK,EAAEujB,UAAU;SACjB5hB,QAAQ;SACRie,UAAU,EAAE;QACZ,CAAC;MACF,CAAC;;GAGH6D,iBAAiB,CAACzjB,KAAa,EAAE2B,QAAgB,EAAEmhB,UAAmB,EACtE;KACC,IAAI9iB,KAAK,CAACkG,MAAM,KAAK,CAAC,EACtB;OACC;;KAGD,IAAI,CAACoc,QAAQ,CAAC;OAAEtiB,KAAK;OAAE2B,QAAQ;OAAEie,UAAU,EAAE,IAAI;OAAEkD;MAAY,CAAC,CAAC1Z,IAAI,CAAC,CAAC;OAAEuW;MAAY,KAAK;OACzF,4CAAI,0CAAoBA,UAAU;MAClC,CAAC,CAAChb,KAAK,CAAEC,KAAK,IAAK;OACnBxB,uBAAM,CAACwB,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAC/D,CAAC;;GAGH0d,QAAQ,CAACljB,MAAyB,EAClC;KACC,MAAM;OAAEY,KAAK;OAAE2B,QAAQ;OAAEie,UAAU;OAAEkD,UAAU,GAAG;MAAO,GAAG1jB,MAAM;KAElE,OAAO,4CAAI,oCAAiB;OAAEuC,QAAQ;OAAEie;MAAY,EAAExW,IAAI,CAAEuW,UAAkB,IAAK;OAClF,MAAM+D,gBAAgB,GAAG,EAAE;OAC3B1jB,KAAK,CAACP,OAAO,CAAE0B,IAAI,IAAK;SACvB,MAAMwiB,eAAe,2CAAG,IAAI,wDAAyBxiB,IAAI,EAAEQ,QAAQ,EAAEge,UAAU,EAAEmD,UAAU,CAAC;SAC5FY,gBAAgB,CAAC1b,IAAI,CAAC2b,eAAe,CAAC;QACtC,CAAC;OAEF,MAAMnB,UAAU,GAAG,4CAAI,sCAAkBF,QAAQ,CAACoB,gBAAgB,CAAC;OACnE,4CAAI,kCAAgB/D,UAAU,EAAE6C,UAAU,EAAE7gB,QAAQ,EAAEie,UAAU;OAEhE,OAAO;SACN5f,KAAK,EAAEwiB,UAAU;SACjB7C;QACA;MACD,CAAC;;GAGHxY,QAAQ,CAACwY,UAAU,EACnB;KACC,OAAO,4CAAI,sCAAkBxY,QAAQ,CAACwY,UAAU,CAAC;;GAGlDyC,KAAK,CAACzC,UAAkB,EACxB;KACC,4CAAI,kDAAwBA,UAAU,CAAC,CAACC,UAAU,GAAG,IAAI;KACzD,4CAAI,sCAAkBwC,KAAK,CAACzC,UAAU,CAAC;;GAGxCiE,kBAAkB,CAAC5jB,KAAK,EAAE2B,QAAQ,EAClC;KACC/B,MAAM,CAACC,MAAM,CAACG,KAAK,CAAC,CAACP,OAAO,CAAE0B,IAAI,IAAK;OACtC,MAAMwiB,eAAe,2CAAG,IAAI,8CAAsBxiB,IAAI,EAAEQ,QAAQ,CAAC;OAEjE,4CAAI,oDAAyBgiB,eAAe,EAAEva,IAAI,CAAC,MAAM;SACxD,MAAMzI,OAAO,GAAG;WACfgZ,aAAa,EAAEgK,eAAe,CAAChK,aAAa;WAC5CX,MAAM,EAAE2K,eAAe,CAACf,UAAU;WAClCjhB,QAAQ,EAAEgiB,eAAe,CAAChiB;UAC1B;SAED,OAAO,4CAAI,oCAAiBoX,mBAAmB,CAACpY,OAAO,CAAC;QACxD,CAAC,CAACyI,IAAI,CAAC,MAAM;SACb,IAAI,CAACya,UAAU,CAAC;WACfjiB,MAAM,EAAE+hB,eAAe,CAAC/hB,MAAM;WAC9BkiB,eAAe,EAAEH,eAAe,CAACf,UAAU;WAC3CjJ,aAAa,EAAEgK,eAAe,CAAChK,aAAa;WAC5CoK,UAAU,EAAEJ,eAAe,CAACxiB,IAAI,CAAChB,EAAE,CAACgG,KAAK,CAAC,CAAC,CAAC;WAC5C6d,QAAQ,EAAE;UACV,CAAC;QACF,CAAC,CAACrf,KAAK,CAAEC,KAAK,IAAK;SACnBC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;QAChE,CAAC;MACF,CAAC;;GAyEHqf,iBAAiB,CAACtiB,QAAgB,EAClC;KACC,IAAI,4CAAI,sCAAkBA,QAAQ,IAAI,CAAC,EACvC;OACC,OAAO2B,OAAO,CAACC,OAAO,yCAAC,IAAI,sCAAkB5B,QAAQ,EAAE;;KAGxD,4CAAI,IAAI,yDACR;OACC,OAAO,4CAAI,4DAA6BA,QAAQ,CAAC;;KAGlD,4CAAI,4DAA6BA,QAAQ,CAAC,2CAAG,IAAI,8CAAsBA,QAAQ,CAAC;KAEhF,OAAO,4CAAI,4DAA6BA,QAAQ,CAAC;;GA0BlDkiB,UAAU,CAACzkB,MAAwB,EACnC;KACC,MAAM;OAAE0kB,eAAe;OAAEnK,aAAa;OAAE/X,MAAM;OAAEmiB,UAAU;OAAEC,QAAQ;OAAEE,WAAW,GAAG,EAAE;OAAEpB,UAAU,GAAG;MAAO,GAAG1jB,MAAM;KAErH,MAAM+kB,YAAY,GAAG,EAAE;KACvB,IAAIH,QAAQ,EACZ;OACCG,YAAY,CAACC,OAAO,GAAGL,UAAU;MACjC,MAED;OACCI,YAAY,CAACE,SAAS,GAAGN,UAAU,CAACpJ,QAAQ,EAAE,CAACxU,KAAK,CAAC,CAAC,CAAC;;KAGxD,4CAAI,gCAAa5B,UAAU,CAACC,sBAAU,CAAC8f,gBAAgB,EAAE;OACxDziB,OAAO,EAAED,MAAM;OACfjB,OAAO,EAAEujB,WAAW;OACpBK,WAAW,EAAE5K,aAAa;OAC1B6K,gBAAgB,EAAEV,eAAe;OACjCW,OAAO,EAAE3B,UAAU,GAAG,GAAG,GAAG,GAAG;OAC/B,GAAGqB;MACH,CAAC,CAACxf,KAAK,CAAEC,KAAK,IAAK;OACnB,4CAAI,sCAAkB+U,aAAa;OACnC,4CAAI,4CAAqBmK,eAAe,EAAE,CAAC,EAAEY,sBAAU,CAAC9f,KAAK;OAC7DxB,uBAAM,CAACwB,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACvC,CAAC;;GA2NH+f,6BAA6B,CAACvlB,MAA2C,EACzE;KACC,MAAM;OAAEugB,UAAU;OAAElJ;MAAM,GAAGrX,MAAM;KAEnC,4CAAI,sCAAkBugB,UAAU,EAAElJ,IAAI;KACtC,4CAAI,kCAAgBkJ,UAAU,EAAE,IAAI;KACpC,4CAAI,0CAAoBA,UAAU;;GAqHnCvB,OAAO,GACP;KACC,4CAAI,sCAAkBA,OAAO,EAAE;;CAEjC;CAAC,0BA/kBgBhf,MAAiD,EACjE;GACC,MAAM;KAAEuC,QAAQ;KAAEie;IAAY,GAAGxgB,MAAM;GAEvC,MAAMugB,UAAU,GAAG7W,qBAAK,CAAC2N,IAAI,CAAC4D,SAAS,EAAE;GAEzC,OAAO,IAAI,CAAC4J,iBAAiB,CAACtiB,QAAQ,CAAC,CAACyH,IAAI,CAAEsW,YAAoB,IAAK;KACtE,4CAAI,sCAAkBD,cAAc,CAAC;OACpCC,YAAY;OACZC,UAAU;OACVC;MACA,CAAC;KAEF,OAAOD,UAAU;IACjB,CAAC;CACH;CAAC,kCA+FuBgE,eAAgC,EACxD;GACC,OAAO,4CAAI,sBAAQzf,QAAQ,CAAC,WAAW,EAAE;KACxC/D,EAAE,EAAEwjB,eAAe,CAACf,UAAU;KAC9BhhB,MAAM,EAAE+hB,eAAe,CAAC/hB,MAAM;KAC9BuY,QAAQ,EAAE7Z,2BAAI,CAACwS,SAAS,EAAE;KAC1B9Q,IAAI,EAAE2hB,eAAe,CAACxiB,IAAI,CAACa,IAAI;KAC/BC,IAAI,EAAE6G,qBAAK,CAAC3H,IAAI,CAACyjB,sBAAsB,CAACjB,eAAe,CAACxiB,IAAI,CAAC0jB,GAAG,CAAC;KACjEC,SAAS,EAAEnB,eAAe,CAACxiB,IAAI,CAAC0jB,GAAG;KACnC3T,IAAI,EAAEyS,eAAe,CAACxiB,IAAI,CAAC4jB,OAAO;KAClCjkB,MAAM,EAAE4jB,sBAAU,CAACM,IAAI;KACvBC,QAAQ,EAAE,CAAC;KACXC,UAAU,EAAE,4CAAI,sCAAmBljB;IACnC,CAAC;CACH;CAAC,0BAGD;GACC,4CAAI,wCAAoB,IAAIkd,eAAe,EAAE;GAC7C,4CAAI,sCAAkBI,SAAS,CAACJ,eAAe,CAAC6B,MAAM,CAACI,cAAc,EAAGD,KAAgB,IAAK;KAC5F,MAAM;OAAE/f;MAAM,GAAG+f,KAAK,CAACK,OAAO,EAAE;KAChC,4CAAI,oCAAiBpgB,IAAI;IACzB,CAAC;GAEF,4CAAI,sCAAkBme,SAAS,CAACJ,eAAe,CAAC6B,MAAM,CAACS,SAAS,EAAGN,KAAgB,IAAK;KACvF,MAAM;OAAE/f,IAAI;OAAEwe;MAAY,GAAGuB,KAAK,CAACK,OAAO,EAAE;KAC5C,4CAAI,wDAA2BpgB,IAAI;KACnC,4CAAI,8CAAsBwe,UAAU,EAAExe,IAAI,CAACgkB,KAAK,EAAE;KAClD,4CAAI,0CAAoBxF,UAAU;IAClC,CAAC;GACF,4CAAI,sCAAkBL,SAAS,CAACJ,eAAe,CAAC6B,MAAM,CAACM,iBAAiB,EAAGH,KAAgB,IAAK;KAC/F,MAAM;OAAE/f;MAAM,GAAG+f,KAAK,CAACK,OAAO,EAAE;KAChC,4CAAI,kDAAwBpgB,IAAI;IAChC,CAAC;GAEF,4CAAI,sCAAkBme,SAAS,CAACJ,eAAe,CAAC6B,MAAM,CAACW,oBAAoB,EAAGR,KAAgB,IAAK;KAClG,MAAM;OAAE/f;MAAM,GAAG+f,KAAK,CAACK,OAAO,EAAE;KAChC,4CAAI,4CAAqBpgB,IAAI,CAACgkB,KAAK,EAAE,EAAEhkB,IAAI,CAACikB,WAAW,EAAE,EAAEV,sBAAU,CAACW,MAAM;IAC5E,CAAC;GAEF,4CAAI,sCAAkB/F,SAAS,CAACJ,eAAe,CAAC6B,MAAM,CAACa,oBAAoB,EAAGV,KAAgB,IAAK;KAClG,MAAM;OAAE/f;MAA4B,GAAG+f,KAAK,CAACK,OAAO,EAAE;KACtD,4CAAI,4CAAqBpgB,IAAI,CAACgkB,KAAK,EAAE,EAAEhkB,IAAI,CAACikB,WAAW,EAAE,EAAEV,sBAAU,CAACM,IAAI;KAC1E,4CAAI,kCAAgB7jB,IAAI,EAAEiI,IAAI,CAAC,MAAM;OAAA;OACpC,IAAI,CAACya,UAAU,CAAC;SACfE,UAAU,EAAE5iB,IAAI,CAACmkB,eAAe,EAAE;SAClCxB,eAAe,EAAE3iB,IAAI,CAACgkB,KAAK,EAAE;SAC7BvjB,MAAM,EAAET,IAAI,CAACmf,aAAa,CAAC,QAAQ,CAAC;SACpC3G,aAAa,EAAExY,IAAI,CAACmf,aAAa,CAAC,eAAe,CAAC;SAClD4D,WAAW,yBAAE/iB,IAAI,CAACmf,aAAa,CAAC,aAAa,CAAC,kCAAI,EAAE;SACpDwC,UAAU,EAAE3hB,IAAI,CAACmf,aAAa,CAAC,YAAY,CAAC;SAC5C0D,QAAQ,EAAE;QACV,CAAC;MACF,CAAC,CAACrf,KAAK,CAAEC,KAAK,IAAK;OACnBxB,uBAAM,CAACC,IAAI,CAAC,wCAAwC,EAAEuB,KAAK,CAAC;MAC5D,CAAC;IACF,CAAC;GACF,4CAAI,sCAAkB0a,SAAS,CAACJ,eAAe,CAAC6B,MAAM,CAACe,iBAAiB,EAAGZ,KAAgB,IAAK;KAC/F,MAAM;OAAE/f,IAAI;OAAEyD;MAAO,GAAGsc,KAAK,CAACK,OAAO,EAAE;KACvC,4CAAI,4CAAqBpgB,IAAI,CAACgkB,KAAK,EAAE,EAAE,CAAC,EAAET,sBAAU,CAAC9f,KAAK;KAC1D,4CAAI,sCAAkBzD,IAAI,CAACmf,aAAa,CAAC,eAAe,CAAC;KACzD,4CAAI,0BAAY1b,KAAK;KACrBxB,uBAAM,CAACwB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACrD,CAAC;GACF,4CAAI,sCAAkB0a,SAAS,CAACJ,eAAe,CAAC6B,MAAM,CAACgC,kBAAkB,EAAG7B,KAAgB,IAAK;KAChG,MAAM;OAAEvH,aAAa;OAAEiJ;MAAY,GAAG1B,KAAK,CAACK,OAAO,EAAE;KACrD,4CAAI,gCAAe5H,aAAa,EAAEiJ,UAAU;IAC5C,CAAC;CACH;CAAC,+BAmBoBjhB,QAAgB,EACrC;GACC,OAAO,IAAI2B,OAAO,CAAC,CAACC,OAAO,EAAEwK,MAAM,KAAK;KACvC,4CAAI,0DAA6B,IAAI;KAErC,MAAMnM,MAAM,2CAAG,IAAI,0BAAYD,QAAQ,CAAC;KACxC,4CAAI,gCAAa4C,UAAU,CAACC,sBAAU,CAAC+gB,eAAe,EAAE;OAAE1jB,OAAO,EAAED;MAAQ,CAAC,CAACwH,IAAI,CAAEoQ,QAAQ,IAAK;OAC/F,MAAM;SAAEgM,EAAE,EAAE9F;QAAc,GAAGlG,QAAQ,CAACvU,IAAI,EAAE;OAC5C,4CAAI,0DAA6B,KAAK;OACtC,4CAAI,sBAAQwgB,MAAM,CAAC,cAAc,EAAE;SAClC9jB,QAAQ;SACRsI,MAAM,EAAE;WACPyV;;QAED,CAAC;OACFnc,OAAO,CAACmc,YAAY,CAAC;MACrB,CAAC,CAAC/a,KAAK,CAAEC,KAAK,IAAK;OACnB,4CAAI,0DAA6B,KAAK;OACtCmJ,MAAM,CAACnJ,KAAK,CAAC;MACb,CAAC;IACF,CAAC;CACH;CAAC,yBA8BczD,IAAkB,EACjC;GACC,IACC,4CAAI,8BAAcA,IAAI,CAACukB,SAAS,EAAE,MAAMC,oBAAQ,CAACxkB,IAAI,IAClDA,IAAI,CAACof,YAAY,EAAE,KAAK,KAAK,EAEjC;KACC,OAAOjd,OAAO,CAACC,OAAO,EAAE;;GAGzB,MAAMpD,EAAE,GAAGgB,IAAI,CAACmkB,eAAe,EAAE,CAAC3K,QAAQ,EAAE,CAACxU,KAAK,CAAC,CAAC,CAAC;GACrD,MAAMyf,WAAW,GAAGzkB,IAAI,CAAC0kB,gBAAgB,EAAE;GAC3C,IAAI,CAACD,WAAW,EAChB;KACCzkB,IAAI,CAAC2kB,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC;KAEtC,OAAOxiB,OAAO,CAACC,OAAO,EAAE;;GAGzB,MAAMwiB,QAAQ,GAAG,IAAIC,QAAQ,EAAE;GAC/BD,QAAQ,CAACE,MAAM,CAAC,IAAI,EAAE9lB,EAAE,CAAC;GACzB4lB,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEL,WAAW,EAAG,WAAUzkB,IAAI,CAAC+kB,OAAO,EAAG,MAAK,CAAC;GAE5E,OAAOjd,wBAAS,CAACzE,sBAAU,CAAC2hB,uBAAuB,EAAE;KAAElhB,IAAI,EAAE8gB;IAAU,CAAC,CAACphB,KAAK,CAAEC,KAAK,IAAK;KACzFxB,uBAAM,CAACwB,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC5D,CAAC;CACH;CAAC,oCAEuBzD,IAAU,EAAEQ,QAAgB,EAAEge,UAAU,EAAEmD,UAAmB,EACrF;GACC,MAAMnJ,aAAa,GAAG7Q,qBAAK,CAAC2N,IAAI,CAAC4D,SAAS,EAAE;GAC5C,MAAMuI,UAAU,GAAG9Z,qBAAK,CAAC2N,IAAI,CAAC4D,SAAS,EAAE;GACzC,MAAMzY,MAAM,2CAAG,IAAI,0BAAYD,QAAQ,CAAC;GAExC,OAAO;KACNgY,aAAa;KACbiJ,UAAU;KACVzhB,IAAI;KACJQ,QAAQ;KACRC,MAAM;KACN+d,UAAU;KACVmD,UAAU,EAAEA,UAAU,IAAI,4CAAI,8BAAc3hB,IAAI,MAAMwkB,oBAAQ,CAACxkB;IAC/D;CACF;CAAC,8BAEmBhB,EAAU,EAAE8kB,QAAgB,EAAEnkB,MAAc,EAChE;GACC,4CAAI,sBAAQoD,QAAQ,CAAC,cAAc,EAAE;KACpC/D,EAAE;KACF8J,MAAM,EAAE;OACPgb,QAAQ,EAAGA,QAAQ,KAAK,GAAG,GAAG,EAAE,GAAGA,QAAS;OAC5CnkB;;IAED,CAAC;CACH;CAAC,wBAEa6Y,aAAqB,EAAEiJ,UAAU,EAC/C;GACC,4CAAI,sBAAQ1e,QAAQ,CAAC,iBAAiB,EAAE;KAAE/D,EAAE,EAAEwZ;IAAe,CAAC;GAC9D,4CAAI,sBAAQzV,QAAQ,CAAC,cAAc,EAAE;KAAE/D,EAAE,EAAEyiB;IAAY,CAAC;CACzD;CAAC,0BAEezhB,IAAkB,EAClC;GACC,MAAMilB,MAAM,GAAGjlB,IAAI,CAACgkB,KAAK,EAAE;GAC3B,MAAMkB,UAAU,GAAGllB,IAAI,CAACukB,SAAS,EAAE;GACnC,MAAMY,WAAW,2CAAG,IAAI,oCAAiBnlB,IAAI,CAAC;GAE9C,4CAAI,sBAAQ+C,QAAQ,CAAC,WAAW,EAAE;KACjC/D,EAAE,EAAEimB,MAAM;KACVxkB,MAAM,EAAET,IAAI,CAACmf,aAAa,CAAC,QAAQ,CAAC;KACpCnG,QAAQ,EAAE7Z,2BAAI,CAACwS,SAAS,EAAE;KAC1B9Q,IAAI,EAAEqkB,UAAU,CAACrkB,IAAI;KACrBC,IAAI,0CAAE,IAAI,8BAAcokB,UAAU,CAAC;KACnCvB,SAAS,0CAAE,IAAI,wCAAmBuB,UAAU,CAAC;KAC7CvlB,MAAM,EAAEK,IAAI,CAAColB,QAAQ,EAAE,GAAG7B,sBAAU,CAAC9f,KAAK,GAAG8f,sBAAU,CAACO,QAAQ;KAChEA,QAAQ,EAAE,CAAC;KACXC,UAAU,EAAE,4CAAI,sCAAmBljB,IAAI;KACvC,GAAGskB;IACH,CAAC;CACH;CAAC,oCAEyBnlB,IAAkB,EAC5C;GACC,MAAMmlB,WAAW,2CAAG,IAAI,oCAAiBnlB,IAAI,CAAC;GAE9C,4CAAI,sBAAQ+C,QAAQ,CAAC,cAAc,EAAE;KACpC/D,EAAE,EAAEgB,IAAI,CAACgkB,KAAK,EAAE;KAChBlb,MAAM,EAAE;OACP,GAAGqc;;IAEJ,CAAC;CACH;CAAC,iCAEsBnlB,IAAkB,EACzC;GACC,4CAAI,sBAAQ+C,QAAQ,CAAC,cAAc,EAAE;KACpC/D,EAAE,EAAEgB,IAAI,CAACgkB,KAAK,EAAE;KAChBlb,MAAM,EAAE;OACPiH,IAAI,EAAE/P,IAAI,CAACqlB,OAAO;;IAEnB,CAAC;CACH;CAAC,0BAEerlB,IAAkB,EAClC;GACC,IAAIA,IAAI,CAACmf,aAAa,CAAC,YAAY,CAAC,EACpC;KACC,OAAO,EAAE;;GAGV,MAAMtS,OAAO,GAAG;KACfyY,IAAI,EAAEtlB,IAAI,CAACulB,aAAa,EAAE;KAC1BvY,KAAK,EAAEhN,IAAI,CAACwlB,eAAe,EAAE;KAC7BvY,MAAM,EAAEjN,IAAI,CAACylB,gBAAgB;IAC7B;GAED,MAAMN,WAAW,GAAG,EAAE;GACtB,IAAItY,OAAO,CAACyY,IAAI,EAChB;KACCH,WAAW,CAACO,KAAK,GAAG;OACnB1Y,KAAK,EAAEH,OAAO,CAACG,KAAK;OACpBC,MAAM,EAAEJ,OAAO,CAACI;MAChB;KAEDkY,WAAW,CAACQ,UAAU,GAAG9Y,OAAO,CAACyY,IAAI;;GAGtC,IAAItlB,IAAI,CAAC0kB,gBAAgB,EAAE,EAC3B;KACCS,WAAW,CAACS,OAAO,GAAGC,GAAG,CAACC,eAAe,CAAC9lB,IAAI,CAACukB,SAAS,EAAE,CAAC;;GAG5D,OAAOY,WAAW;CACnB;CAAC,2BAEgB3kB,QAAgB,EACjC;GACC,OAAO,4CAAI,8BAAYA,QAAQ,EAAE+d,YAAY;CAC9C;CAAC,uBAEYve,IAAU,EACvB;GACC,IAAI+lB,QAAQ,GAAGvB,oBAAQ,CAACxkB,IAAI;GAC5B,IAAIA,IAAI,CAACc,IAAI,CAAC0Z,UAAU,CAAC,OAAO,CAAC,EACjC;KACCuL,QAAQ,GAAGvB,oBAAQ,CAACkB,KAAK;IACzB,MACI,IAAI1lB,IAAI,CAACc,IAAI,CAAC0Z,UAAU,CAAC,OAAO,CAAC,EACtC;KACCuL,QAAQ,GAAGvB,oBAAQ,CAACwB,KAAK;;GAG1B,OAAOD,QAAQ;CAChB;CAAC,4BAEiB/lB,IAAU,EAC5B;GACC,OAAOA,IAAI,CAACa,IAAI,CAAColB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC1C;CAAC,uBAEU1lB,QAAgB,EAC3B;GACC,OAAO,4CAAI,sBAAQnB,OAAO,CAAC,WAAW,CAAC,CAACmB,QAAQ,CAAC;CAClD;CAAC,4BAGD;GACC,MAAMgR,MAAM,GAAGrS,2BAAI,CAACwS,SAAS,EAAE;GAE/B,OAAO,4CAAI,sBAAQtS,OAAO,CAAC,WAAW,CAAC,CAACmS,MAAM,CAAC;CAChD;CAAC,qBAEUhR,QAAgB,EAC3B;GAAA;GACC,wEAAO,IAAI,8BAAYA,QAAQ,sBAAxB,sBAA2BC,MAAM;CACzC;CAAC,yBAEc+d,UAAkB,EAAE3f,KAAqB,EAAE2B,QAAgB,EAAEie,UAAmB,EAC/F;GACC,IAAI,CAAC,4CAAI,kDAAwBD,UAAU,CAAC,EAC5C;KACC,4CAAI,kDAAwBA,UAAU,CAAC,GAAG;OACzC2H,kBAAkB,EAAE,EAAE;OACtB3lB,QAAQ;OACR8U,IAAI,EAAE,EAAE;OACRmJ;MACA;;GAGF5f,KAAK,CAACP,OAAO,CAAE0B,IAAI,IAAK;KACvB,MAAM6X,MAAM,GAAG7X,IAAI,CAACgkB,KAAK,EAAE;KAC3B,IAAI,CAAC,4CAAI,kDAAwBxF,UAAU,CAAC,CAAC2H,kBAAkB,EAC/D;OACC,4CAAI,kDAAwB3H,UAAU,CAAC,CAAC2H,kBAAkB,GAAG,EAAE;;KAGhE,4CAAI,kDAAwB3H,UAAU,CAAC,CAAC2H,kBAAkB,CAACtO,MAAM,CAAC,GAAG,KAAK;IAC1E,CAAC;CACH;CAAC,+BAEoB2G,UAAkB,EAAE3G,MAAc,EACvD;GACC,4CAAI,kDAAwB2G,UAAU,CAAC,CAAC2H,kBAAkB,CAACtO,MAAM,CAAC,GAAG,IAAI;CAC1E;CAAC,2BAEgB2G,UAAkB,EAAElJ,IAAY,EACjD;GACC,4CAAI,kDAAwBkJ,UAAU,CAAC,CAAClJ,IAAI,GAAGA,IAAI;CACpD;CAAC,yBAEckJ,UAAkB,EAAE4H,cAAuB,EAC1D;GACC,4CAAI,kDAAwB5H,UAAU,CAAC,CAACC,UAAU,GAAG2H,cAAc;CACpE;CAAC,mCAWwB5H,UAAU,EACnC;GACC,MAAM6H,cAAc,GAAG;KACtB1V,OAAO,EAAE,EAAE;KACX9R,KAAK,EAAE;IACP;GAED,MAAMA,KAAK,GAAG,IAAI,CAACmH,QAAQ,CAACwY,UAAU,CAAC;GACvC,MAAMlJ,IAAI,GAAG,4CAAI,kDAAwBkJ,UAAU,CAAC,CAAClJ,IAAI;GACzD,MAAM9U,QAAQ,GAAG,4CAAI,kDAAwBge,UAAU,CAAC,CAAChe,QAAQ;GACjE,MAAM8lB,OAAO,GAAGhR,IAAI,CAACvQ,MAAM,GAAG,CAAC;;;GAG/B,IAAIlG,KAAK,CAACkG,MAAM,GAAG,CAAC,IAAIuhB,OAAO,EAC/B;KACCD,cAAc,CAAC1V,OAAO,GAAG;OAAEnQ,QAAQ;OAAE8U;MAAM;;GAG5CzW,KAAK,CAACP,OAAO,CAAE0B,IAAI,IAAK;KAAA;KACvB,IAAIA,IAAI,CAACumB,QAAQ,EAAE,EACnB;OACC;;KAGD,MAAMlmB,SAAS,GAAGsH,qBAAK,CAAC2N,IAAI,CAAC4D,SAAS,EAAE;KAExClZ,IAAI,CAAC2kB,aAAa,CAAC,WAAW,EAAEtkB,SAAS,CAAC;KAC1C,IAAIxB,KAAK,CAACkG,MAAM,KAAK,CAAC,IAAIuhB,OAAO,EACjC;OACCtmB,IAAI,CAAC2kB,aAAa,CAAC,aAAa,EAAErP,IAAI,CAAC;;KAGxC+Q,cAAc,CAACxnB,KAAK,CAACgI,IAAI,CAAC;OACzBgR,MAAM,EAAE7X,IAAI,CAACgkB,KAAK,EAAE;OACpBxL,aAAa,EAAExY,IAAI,CAACmf,aAAa,CAAC,eAAe,CAAC;OAClD3e,QAAQ;OACR8U,IAAI,0BAAEtV,IAAI,CAACmf,aAAa,CAAC,aAAa,CAAC,mCAAI;MAC3C,CAAC;IACF,CAAC;GAEF,OAAOkH,cAAc;CACtB;CAAC,8BAEmB7H,UAAU,EAC9B;GACC,IACC,CAAC,4CAAI,kDAAwBA,UAAU,CAAC,IACrC,CAAC,4CAAI,kDAAwBA,UAAU,CAAC,CAACC,UAAU,IACnD,4CAAI,kDAAwBD,UAAU,CAAC,CAACgI,OAAO,EAEnD;KACC,OAAO,KAAK;;GAGb,MAAM;KAAEL;IAAoB,GAAG,4CAAI,kDAAwB3H,UAAU,CAAC;GAEtE,OAAO/f,MAAM,CAACC,MAAM,CAACynB,kBAAkB,CAAC,CAACM,KAAK,CAAE1R,IAAI,IAAKA,IAAI,KAAK,IAAI,CAAC;CACxE;CAAC,6BAEkByJ,UAAkB,EACrC;GACC,IAAI,yCAAC,IAAI,4CAAqBA,UAAU,CAAC,EACzC;KACC;;GAGD,4CAAI,kDAAwBA,UAAU,CAAC,CAACgI,OAAO,GAAG,IAAI;GACtD,MAAM;KAAE7V,OAAO;KAAE9R;IAAO,2CAAG,IAAI,sDAA0B2f,UAAU,CAAC;GACpE,IAAI7N,OAAO,CAAC2E,IAAI,EAChB;KACC,KAAK,4CAAI,oCAAiBqC,WAAW,CAAChH,OAAO,CAAC;;GAG/C9R,KAAK,CAACP,OAAO,CAAEkB,OAAO,IAAK;KAC1B,KAAK,4CAAI,oCAAiBoY,mBAAmB,CAACpY,OAAO,CAAC;IACtD,CAAC;GACF,IAAI,CAACyhB,KAAK,CAACzC,UAAU,CAAC;CACvB;CAAC,+BAEoBxe,IAAkB,EAAEQ,QAAgB,EACzD;GACC,MAAMgY,aAAa,GAAG7Q,qBAAK,CAAC2N,IAAI,CAAC4D,SAAS,EAAE;GAC5C,MAAM0J,UAAU,GAAG5iB,IAAI,CAAChB,EAAE,CAACgG,KAAK,CAAC,CAAC,CAAC,CAAC;GACpC,MAAMyc,UAAU,GAAI,GAAEjJ,aAAc,IAAGoK,UAAW,EAAC;GAEnD,OAAO;KACNpK,aAAa;KACbiJ,UAAU;KACVjhB,QAAQ;KACRR,IAAI;KACJS,MAAM,EAAE,4CAAI,8BAAYD,QAAQ,EAAEC;IAClC;CACF;CAAC,qBAEUgD,KAAoB,EAC/B;GACC,IAAIA,KAAK,CAACijB,OAAO,EAAE,KAAK,wBAAwB,EAChD;KACC1P,EAAE,CAACC,EAAE,CAACC,YAAY,CAACC,MAAM,CAACC,MAAM,CAAC;OAChCC,OAAO,EAAG,GAAE5T,KAAK,CAAC8T,UAAU,EAAG,OAAM9T,KAAK,CAACkjB,cAAc,EAAG;MAC5D,CAAC;;CAEJ;CAAC,2BAEgBnO,aAAqB,EACtC;GACC,4CAAI,sBAAQzV,QAAQ,CAAC,iBAAiB,EAAE;KACvC/D,EAAE,EAAEwZ,aAAa;KACjB1P,MAAM,EAAE;OACPrF,KAAK,EAAE;;IAER,CAAC;CACH;AA/mBYue,oBAAgB,CAkBrBngB,QAAQ,GAAG,IAAI;;CCtEhB,MAAM+kB,eAAe,CAC5B;GACCC,aAAa,CAACC,WAAmB,EAAE9a,KAAU,EAC7C;KACC/J,uBAAM,CAACC,IAAI,CAAC,gCAAgC,EAAE4kB,WAAW,EAAE9a,KAAK,CAAC;KACjE7M,2BAAI,CAACC,QAAQ,EAAE,CAAC2D,QAAQ,CAAC,0BAA0B,EAAE;OACpD,CAAC+jB,WAAW,GAAG9a;MACf,CAAC;KAEF,OAAOlE,wBAAS,CAACzE,sBAAU,CAAC0jB,yBAAyB,EAAE;OACtDjjB,IAAI,EAAE;SACL0N,MAAM,EAAErS,2BAAI,CAACwS,SAAS,EAAE;SACxB9Q,IAAI,EAAEimB,WAAW;SACjB9a,KAAK,EAAEA;;MAER,CAAC,CAACxI,KAAK,CAAEC,KAAK,IAAK;;OAEnBC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,CAAC;;CAEJ;;CCtBO,MAAMujB,YAAY,CACzB;GACCC,qBAAqB,CAACC,QAAgB,EACtC;KACC,OAAO/nB,2BAAI,CAACgE,aAAa,EAAE,CAACC,UAAU,CAACC,sBAAU,CAAC8jB,cAAc,EAAE;OACjEC,SAAS,EAAEF;MACX,CAAC,CAACjf,IAAI,CAAE5F,MAAM,IAAK;OACnB,MAAM;SAAEqL,SAAS,EAAElN;QAAU,GAAG6B,MAAM,CAACyB,IAAI,EAAE;OAE7C,OAAOtD,QAAQ;MACf,CAAC,CAACgD,KAAK,CAAEC,KAAK,IAAK;;OAEnBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,CAAC;;CAEJ;;CCfqC;CAAA;AAErC,CAAO,MAAM4jB,cAAc,CAC3B;GAAA;KAAA;OAAA;;KAAA;OAAA;;;GACC,MAAMld,UAAU,GAChB;KACC,MAAMmd,WAAW,GAAG,IAAIxZ,WAAW,EAAE;KACrC,MAAM;OAAEpD,WAAW;OAAED;MAAW,GAAG,MAAM6c,WAAW,CAACnd,UAAU,CAAC;OAAErJ,IAAI,EAAEC,oBAAQ,CAAC0E;MAAS,CAAC,CACzFjC,KAAK,CAAEC,KAAK,IAAK;OACjB,4CAAI,kCAAgBA,KAAK;MACzB,CAAC;KAEH,4CAAI,kCAAgB;OAAEhD,MAAM,EAAEgK,SAAS;OAAEjK,QAAQ,EAAEkK;MAAa;KAEhE,MAAM4c,WAAW,CAACngB,oBAAoB,CAACuD,WAAW,CAAC,CACjDlH,KAAK,CAAEC,KAAK,IAAK;OACjB,4CAAI,kCAAgBA,KAAK;MACzB,CAAC;KAEH,OAAOiH,WAAW;;CAcpB;CAAC,yBAXejH,KAAY,EAC3B;;GAECC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;GACjD,MAAM,IAAI+G,KAAK,CAAC,2BAA2B,CAAC;CAC7C;CAAC,yBAEc;GAAE/J,MAAM;GAAED;CAAS,CAAC,EACnC;GACC+mB,6BAAS,CAAC3lB,WAAW,EAAE,CAACuI,UAAU,CAAC;KAAE1J,MAAM;KAAED;IAAU,CAAC;CACzD;;;;;;;;;;;;;;;;;;"}