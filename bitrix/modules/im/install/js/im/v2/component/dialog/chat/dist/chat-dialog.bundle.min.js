this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,i,o,a,r,n,l,g,c,d,h,u,p,m,M,v,b,S){"use strict";const f="BX.Messenger.v2.Dialog.ScrollManager";const w=1500;const I=40;const B=400;const T=52;class P extends l.EventEmitter{constructor(){super();this.isScrolling=false;this.currentScroll=0;this.lastScroll=0;this.chatIsScrolledUp=false;this.scrollButtonClicked=false;this.setEventNamespace(f)}setContainer(e){this.container=e}onScroll(e){if(this.isScrolling||!e.target){return}this.currentScroll=e.target.scrollTop;const t=this.lastScroll<this.currentScroll;const s=!t;if(s){this.scrollButtonClicked=false}const i=e.target.scrollHeight-e.target.scrollTop-e.target.clientHeight;if(t&&this.lastScroll>0&&i<w){this.emit(P.events.onScrollTriggerDown)}else if(s&&this.currentScroll<=w){this.emit(P.events.onScrollTriggerUp)}this.lastScroll=this.currentScroll;this.checkIfChatIsScrolledUp()}checkIfChatIsScrolledUp(){const e=this.container.scrollHeight-this.container.clientHeight;const t=this.currentScroll+B<e;if(t!==this.chatIsScrolledUp){this.emit(P.events.onScrollThresholdPass,t)}this.chatIsScrolledUp=t}scrollToBottom(){g.Logger.warn("Dialog: ScrollManager: scroll to bottom");this.forceScrollTo(this.container.scrollHeight-this.container.clientHeight)}animatedScrollToBottom(){g.Logger.warn("Dialog: ScrollManager: animated scroll to bottom");this.animatedScrollTo(this.container.scrollHeight-this.container.clientHeight)}scrollToMessage(e,t={}){g.Logger.warn("Dialog: ScrollManager: scroll to message - ",e);const{withDateOffset:s=true}=t;const i=s?-T:-10;const o=this.getDomElementById(e);if(!o){g.Logger.warn("Dialog: ScrollManager: message not found - ",e);return}const a=o.offsetTop+i;this.forceScrollTo(a)}animatedScrollToMessage(e,t={}){g.Logger.warn("Dialog: ScrollManager: animated scroll to message - ",e);const{withDateOffset:s=true}=t;const i=s?-T:-10;const o=this.getDomElementById(e);if(!o){g.Logger.warn("Dialog: ScrollManager: message not found - ",e);return Promise.resolve()}const a=o.offsetTop+i;return this.animatedScrollTo(a)}forceScrollTo(e){g.Logger.warn("Dialog: ScrollManager: Force scroll to - ",e);this.cancelAnimatedScroll();this.container.scroll({top:e,behavior:"instant"})}adjustScrollOnHistoryAddition(e){g.Logger.warn("Dialog: ScrollManager: Adjusting scroll after history addition");const t=this.container.scrollHeight-this.container.clientHeight;const s=this.container.scrollTop+t-e;this.forceScrollTo(s)}animatedScrollTo(e){g.Logger.warn("Dialog: ScrollManager: Animated scroll to - ",e);return new Promise((t=>{c.Animation.start({start:this.container.scrollTop,end:e,element:this.container,elementProperty:"scrollTop",callback:()=>{this.checkIfChatIsScrolledUp();t()}})}))}cancelAnimatedScroll(){if(!this.isScrolling){return}c.Animation.cancel();this.isScrolling=false}isAtTheTop(){return this.container.scrollTop===0}isAtTheBottom(){return this.container.scrollTop+this.container.clientHeight>=this.container.scrollHeight}isAroundBottom(){return this.container.scrollHeight-this.container.scrollTop-this.container.clientHeight<I}getDomElementById(e){return this.container.querySelector(`[data-id="${e}"]`)}}P.events={onScrollTriggerUp:"onScrollTriggerUp",onScrollTriggerDown:"onScrollTriggerDown",onScrollThresholdPass:"onScrollThresholdPass"};const C="IM_PUBLIC_";const L="IM_PUBLIC_COMMENT_";var y=babelHelpers.classPrivateFieldLooseKey("dialog");var x=babelHelpers.classPrivateFieldLooseKey("pullClient");var E=babelHelpers.classPrivateFieldLooseKey("subscribeChannel");var F=babelHelpers.classPrivateFieldLooseKey("subscribeOpenChat");var H=babelHelpers.classPrivateFieldLooseKey("requestWatchStart");var D=babelHelpers.classPrivateFieldLooseKey("isGuest");var _=babelHelpers.classPrivateFieldLooseKey("isChannel");var U=babelHelpers.classPrivateFieldLooseKey("isCommentsChat");class ${constructor(e){Object.defineProperty(this,U,{value:N});Object.defineProperty(this,_,{value:V});Object.defineProperty(this,D,{value:O});Object.defineProperty(this,H,{value:X});Object.defineProperty(this,F,{value:A});Object.defineProperty(this,E,{value:k});Object.defineProperty(this,y,{writable:true,value:void 0});Object.defineProperty(this,x,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,y)[y]=d.Core.getStore().getters["chats/get"](e,true);babelHelpers.classPrivateFieldLooseBase(this,x)[x]=d.Core.getPullClient()}subscribe(){if(babelHelpers.classPrivateFieldLooseBase(this,_)[_]()){babelHelpers.classPrivateFieldLooseBase(this,E)[E]();return}if(babelHelpers.classPrivateFieldLooseBase(this,U)[U]()||!babelHelpers.classPrivateFieldLooseBase(this,D)[D]()){return}babelHelpers.classPrivateFieldLooseBase(this,F)[F]()}unsubscribe(){babelHelpers.classPrivateFieldLooseBase(this,x)[x].clearWatch(`${C}${babelHelpers.classPrivateFieldLooseBase(this,y)[y].chatId}`);babelHelpers.classPrivateFieldLooseBase(this,x)[x].clearWatch(`${L}${babelHelpers.classPrivateFieldLooseBase(this,y)[y].chatId}`)}}function k(){babelHelpers.classPrivateFieldLooseBase(this,H)[H]();babelHelpers.classPrivateFieldLooseBase(this,x)[x].extendWatch(`${C}${babelHelpers.classPrivateFieldLooseBase(this,y)[y].chatId}`);babelHelpers.classPrivateFieldLooseBase(this,x)[x].extendWatch(`${L}${babelHelpers.classPrivateFieldLooseBase(this,y)[y].chatId}`)}function A(){babelHelpers.classPrivateFieldLooseBase(this,H)[H]();babelHelpers.classPrivateFieldLooseBase(this,x)[x].extendWatch(`${C}${babelHelpers.classPrivateFieldLooseBase(this,y)[y].chatId}`)}function X(){h.runAction(u.RestMethod.imV2ChatExtendPullWatch,{data:{dialogId:babelHelpers.classPrivateFieldLooseBase(this,y)[y].dialogId}})}function O(){var e,t;return((e=babelHelpers.classPrivateFieldLooseBase(this,y)[y])==null?void 0:e.role)===u.UserRole.guest&&((t=babelHelpers.classPrivateFieldLooseBase(this,y)[y])==null?void 0:t.dialogId)!=="settings"}function V(){var e;return[u.ChatType.openChannel,u.ChatType.channel].includes((e=babelHelpers.classPrivateFieldLooseBase(this,y)[y])==null?void 0:e.type)}function N(){var e;return((e=babelHelpers.classPrivateFieldLooseBase(this,y)[y])==null?void 0:e.type)===u.ChatType.comment}var W=babelHelpers.classPrivateFieldLooseKey("visibleMessages");class R{constructor(){Object.defineProperty(this,W,{writable:true,value:new Set})}setMessageAsVisible(e){babelHelpers.classPrivateFieldLooseBase(this,W)[W].add(e)}setMessageAsNotVisible(e){babelHelpers.classPrivateFieldLooseBase(this,W)[W].delete(e)}getFirstMessageId(){if(babelHelpers.classPrivateFieldLooseBase(this,W)[W].size===0){return 0}const[e]=[...babelHelpers.classPrivateFieldLooseBase(this,W)[W]].sort(((e,t)=>e-t));return e}}const Q={props:{message:{type:Object,required:true}},data(){return{}},computed:{internalMessage(){return this.message},text(){return m.Parser.purifyMessage(this.internalMessage)},authorId(){return this.internalMessage.authorId},author(){return this.$store.getters["users/get"](this.authorId)}},template:`\n\t\t<div class="bx-im-dialog-chat__pinned_item">\n\t\t\t<span v-if="author" class="bx-im-dialog-chat__pinned_item_user">{{ author.name }}:</span> {{ text }}\n\t\t</div>\n\t`};const q={name:"PinnedMessages",components:{PinnedMessage:Q},props:{dialogId:{type:String,default:""},messages:{type:Array,required:true}},emits:["messageClick","messageUnpin"],data(){return{}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},firstMessage(){return this.messagesToShow[0]},messagesToShow(){return this.messages.slice(-1)},canUnpin(){return p.PermissionManager.getInstance().canPerformAction(u.ChatActionType.pinMessage,this.dialogId)},showUnpin(){return!this.isCommentChat&&this.canUnpin},isCommentChat(){return this.dialog.type===u.ChatType.comment}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div @click="$emit('messageClick', firstMessage.id)" class="bx-im-dialog-chat__pinned_container">\n\t\t\t<div class="bx-im-dialog-chat__pinned_title">{{ loc('IM_DIALOG_CHAT_PINNED_TITLE') }}</div>\n\t\t\t<PinnedMessage\n\t\t\t\tv-for="message in messagesToShow"\n\t\t\t\t:message="message"\n\t\t\t\t:key="message.id"\n\t\t\t/>\n\t\t\t<div v-if="showUnpin" @click.stop="$emit('messageUnpin', firstMessage.id)" class="bx-im-dialog-chat__pinned_unpin"></div>\n\t\t</div>\n\t`};var j;const K=44;const G=60;const Y=10;const z=S.MessengerSlider.getInstance().getCurrent();const J=z==null?void 0:z.layout.container.getBoundingClientRect();const Z=(j=J==null?void 0:J.top)!=null?j:0;const ee=".bx-im-message-default-content__text";const te={name:"QuoteButton",props:{dialogId:{type:String,default:""}},data(){return{text:"",message:null,mouseX:0,mouseY:0}},computed:{containerStyle(){return{top:`${this.mouseY-K-Y-Z}px`,left:`${this.mouseX-G/2}px`,width:`${G}px`,height:`${K}px`}}},mounted(){M.Event.bind(window,"mousedown",this.onMouseDown)},methods:{onMessageMouseUp(e,t){if(t.button===2){return}this.prepareSelectedText();this.message=e;this.mouseX=t.clientX;this.mouseY=t.clientY},onMouseDown(e){const t=this.$refs.container;if(!t||t.contains(e.target)){return}this.$emit("close")},prepareSelectedText(){if(b.Utils.browser.isFirefox()){this.text=window.getSelection().toString();return}const e=window.getSelection().getRangeAt(0);const t=e.cloneContents();let s=t.childNodes;const i=t.querySelector(ee);if(i){s=i.childNodes}for(const e of s){if(this.isImage(e)){var o;this.text+=(o=e.getAttribute("data-code"))!=null?o:e.getAttribute("alt")}else if(this.isLineBreak(e)){this.text+="\n"}else{this.text+=e.textContent}}},isImage(e){if(!(e instanceof HTMLElement)){return false}return e.tagName.toLowerCase()==="img"},isLineBreak(e){return e.nodeName.toLowerCase()==="br"},isText(e){return e.nodeName==="#text"},isMessageTextNode(e){if(!(e instanceof HTMLElement)){return false}const t=e.matches(ee);return Boolean(t)},extractTextFromMessageNode(e){const t=e.querySelector(ee);if(!t){return e.textContent}return t.textContent},onQuoteClick(){v.Quote.sendQuoteEvent(this.message,this.text,this.dialogId);this.$emit("close")}},template:`\n\t\t<div ref="container" @click="onQuoteClick" :style="containerStyle" class="bx-im-dialog-chat__quote-button">\n\t\t\t<div class="bx-im-dialog-chat__quote-icon"></div>\n\t\t\t<div class="bx-im-dialog-chat__quote-icon --hover"></div>\n\t\t</div>\n\t`};const se={name:"ScrollButton",props:{dialogId:{type:String,required:true}},data(){return{}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},formattedCounter(){if(this.dialog.counter===0){return""}if(this.dialog.counter>99){return"99+"}return String(this.dialog.counter)}},template:`\n\t\t<div class="bx-im-dialog-chat__scroll-button">\n\t\t\t<div v-if="dialog.counter" class="bx-im-dialog-chat__scroll-button_counter">\n\t\t\t\t{{ formattedCounter }}\n\t\t\t</div>\n\t\t</div>\n\t`};const ie={name:"ChatDialog",components:{MessageList:i.MessageList,PinnedMessages:q,QuoteButton:te,ScrollButton:se,PullStatus:s.PullStatus,ForwardPopup:o.ForwardPopup},props:{dialogId:{type:String,default:""},saveScrollOnExit:{type:Boolean,default:true},resetOnExit:{type:Boolean,default:false}},data(){return{forwardPopup:{show:false,messageId:0},contextMode:{active:false,messageIsLoaded:false},isScrolledUp:false,windowFocused:false,showQuoteButton:false,messagesToRead:new Set}},computed:{layout(){return this.$store.getters["application/getLayout"]},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},dialogInited(){return this.dialog.inited},messageCollection(){return this.$store.getters["messages/getByChatId"](this.dialog.chatId)},pinnedMessages(){return this.$store.getters["messages/pin/getPinned"](this.dialog.chatId)},isOpened(){const e=this.$store.getters["application/getLayout"].entityId;return this.dialogId===e},isGuest(){return this.dialog.role===u.UserRole.guest},debouncedScrollHandler(){const e=200;return M.Runtime.debounce(this.getScrollManager().onScroll,e,this.getScrollManager())},debouncedReadHandler(){return M.Runtime.debounce(this.readVisibleMessages,50,this)},messageListComponent(){return i.MessageList},showScrollButton(){return this.isScrolledUp||this.dialog.hasNextPage}},watch:{dialogInited(e,t){if(!e||t){return}this.getPullWatchManager().subscribe();this.onChatInited()}},created(){g.Logger.warn("Dialog: Chat created",this.dialogId);this.initContextMode()},mounted(){this.getScrollManager().setContainer(this.getContainer());if(this.dialogInited){this.getPullWatchManager().subscribe();this.onChatInited()}else if(!this.dialogInited&&this.messageCollection.length>0){this.scrollOnStart()}this.windowFocused=document.hasFocus();this.subscribeToEvents()},beforeUnmount(){this.unsubscribeFromEvents();if(this.dialogInited){this.saveScrollPosition();this.handleMessagesOnExit()}this.getPullWatchManager().unsubscribe();this.closeDialogPopups();this.forwardPopup.show=false},methods:{readVisibleMessages(){if(!this.dialogInited||!this.windowFocused||this.hasVisibleCall()){return}const e=p.PermissionManager.getInstance();if(!e.canPerformAction(u.ChatActionType.readMessage,this.dialogId)){return}const t=[...this.messagesToRead];t.forEach((e=>{this.getChatService().readMessage(this.dialog.chatId,e);this.messagesToRead.delete(e)}))},async scrollOnStart(){await this.$nextTick();if(this.contextMode.active&&this.contextMode.messageIsLoaded){this.getScrollManager().scrollToMessage(this.layout.contextId);void this.$nextTick((()=>{this.highlightMessage(this.layout.contextId)}));return}if(this.contextMode.active&&!this.contextMode.messageIsLoaded){this.goToMessageContext(this.layout.contextId);return}if(this.dialog.markedId){this.getScrollManager().scrollToMessage(u.DialogBlockType.newMessages);return}if(this.dialog.savedPositionMessageId&&!this.isGuest){g.Logger.warn("Dialog: saved scroll position, scrolling to",this.dialog.savedPositionMessageId);this.getScrollManager().scrollToMessage(this.dialog.savedPositionMessageId,{withDateOffset:false});return}const e=this.$store.getters["chats/getLastReadId"](this.dialogId);const t=e===this.dialog.lastMessageId;if(e>0&&!t){g.Logger.warn('Dialog: scroll to "New messages" mark, lastReadId -',e,"lastMessageId",this.dialog.lastMessageId);this.getScrollManager().scrollToMessage(u.DialogBlockType.newMessages);return}const s=this.$store.getters["messages/getFirstUnread"](this.dialog.chatId);if(e===0||s){g.Logger.warn("Dialog: dont scroll, hasUnread -",s,"lastReadId",e);return}this.getScrollManager().scrollToBottom()},showLoadingBar(){l.EventEmitter.emit(u.EventType.dialog.showLoadingBar,{dialogId:this.dialogId})},hideLoadingBar(){l.EventEmitter.emit(u.EventType.dialog.hideLoadingBar,{dialogId:this.dialogId})},async goToMessageContext(e){const t=this.$store.getters["messages/hasMessage"]({chatId:this.dialog.chatId,messageId:e});if(t){g.Logger.warn("Dialog: we have this message, scrolling to it",e);await this.getScrollManager().animatedScrollToMessage(e);this.highlightMessage(e);return}this.showLoadingBar();await this.getMessageService().loadContext(e).catch((e=>{g.Logger.error("goToMessageContext error",e)}));await this.$nextTick();this.hideLoadingBar();this.getScrollManager().scrollToMessage(e);await this.$nextTick();this.highlightMessage(e)},highlightMessage(e){const t="bx-im-dialog-chat__highlighted-message";const s=2e3;const i=this.getScrollManager().getDomElementById(e);if(!i){return}M.Dom.addClass(i,t);setTimeout((()=>{M.Dom.removeClass(i,t)}),s)},saveScrollPosition(){if(!this.saveScrollOnExit){return}let e=this.getVisibleMessagesManager().getFirstMessageId();if(this.getScrollManager().isAroundBottom()){e=0}this.$store.dispatch("chats/update",{dialogId:this.dialogId,fields:{savedPositionMessageId:e}})},handleMessagesOnExit(){if(this.resetOnExit){this.getChatService().resetChat(this.dialogId);return}const e=200;setTimeout((()=>{void this.getMessageService().reloadMessageList()}),e)},onChatInited(){this.scrollOnStart();this.readVisibleMessages();void this.$nextTick((()=>{this.getChatService().clearDialogMark(this.dialogId)}));l.EventEmitter.emit(u.EventType.dialog.onDialogInited,{dialogId:this.dialogId})},async onScrollTriggerUp(){if(!this.dialogInited||!this.getContainer()){return}g.Logger.warn("Dialog: scroll triggered UP");const e=this.getContainer();const t=e.scrollHeight-e.clientHeight;if(this.getMessageService().hasPreparedHistoryMessages()){await this.getMessageService().drawPreparedHistoryMessages();this.getScrollManager().adjustScrollOnHistoryAddition(t);return}if(this.getMessageService().isLoading()||!this.dialog.hasPrevPage){return}this.showLoadingBar();await this.getMessageService().loadHistory();this.hideLoadingBar();if(this.getScrollManager().isAtTheTop()){g.Logger.warn("Dialog: we are at the top after history request, inserting messages");await this.getMessageService().drawPreparedHistoryMessages();this.getScrollManager().adjustScrollOnHistoryAddition(t)}},async onScrollTriggerDown(){if(!this.dialogInited||!this.getContainer()){return}g.Logger.warn("Dialog: scroll triggered DOWN");if(this.getMessageService().hasPreparedUnreadMessages()){await this.getMessageService().drawPreparedUnreadMessages();return}if(this.getMessageService().isLoading()||!this.dialog.hasNextPage){return}this.showLoadingBar();await this.getMessageService().loadUnread();this.hideLoadingBar();if(this.getScrollManager().isAroundBottom()){g.Logger.warn("Dialog: we are at the bottom after unread request, inserting messages");await this.getMessageService().drawPreparedUnreadMessages();this.getScrollManager().checkIfChatIsScrolledUp()}},async onScrollToBottom(e){const{chatId:t,threshold:s=u.DialogScrollThreshold.halfScreenUp,animation:i=true}=e.getData();if(this.dialog.chatId!==t){return}if(!this.windowFocused||this.hasVisibleCall()){const e=this.$store.getters["messages/getFirstUnread"](this.dialog.chatId);if(e){await this.$nextTick();this.getScrollManager().scrollToMessage(e);return}}g.Logger.warn("Dialog: scroll to bottom",t,s);if(s===u.DialogScrollThreshold.halfScreenUp&&this.isScrolledUp){return}if(s===u.DialogScrollThreshold.nearTheBottom&&!this.getScrollManager().isAroundBottom()){return}await this.$nextTick();if(i){this.getScrollManager().animatedScrollToBottom();return}this.getScrollManager().scrollToBottom()},onGoToMessageContext(e){const{dialogId:t,messageId:s}=e.getData();if(this.dialog.dialogId!==t){return}this.goToMessageContext(s)},onPinnedMessageClick(e){this.goToMessageContext(e)},onPinnedMessageUnpin(e){this.getMessageService().unpinMessage(this.dialog.chatId,e)},onScroll(e){this.closeDialogPopups();this.debouncedScrollHandler(e)},async onScrollButtonClick(){if(this.getScrollManager().scrollButtonClicked){void this.handleSecondScrollButtonClick();return}this.getScrollManager().scrollButtonClicked=true;if(this.dialog.counter===0){this.showLoadingBar();await this.getMessageService().loadInitialMessages();this.hideLoadingBar();this.getScrollManager().scrollToBottom();return}const e=this.$store.getters["messages/getFirstUnread"](this.dialog.chatId);if(!e){this.showLoadingBar();await this.getMessageService().loadInitialMessages();this.hideLoadingBar();await this.getScrollManager().animatedScrollToMessage(e)}await this.getScrollManager().animatedScrollToMessage(e)},onWindowFocus(){this.windowFocused=true;this.readVisibleMessages()},onWindowBlur(){this.windowFocused=false},onCallFold(){const e=a.CallManager.getInstance().getCurrentCallDialogId();if(e!==this.dialogId){return}this.readVisibleMessages()},async onShowQuoteButton(e){const{message:t,event:s}=e.getData();const i=p.PermissionManager.getInstance();if(!i.canPerformAction(u.ChatActionType.send,this.dialogId)){return}this.showQuoteButton=true;await this.$nextTick();this.$refs.quoteButton.onMessageMouseUp(t,s)},async handleSecondScrollButtonClick(){this.getScrollManager().scrollButtonClicked=false;if(this.dialog.hasNextPage){this.showLoadingBar();await this.getMessageService().loadContext(this.dialog.lastMessageId).catch((e=>{g.Logger.error("ChatDialog: scroll to chat end loadContext error",e)}));this.hideLoadingBar();l.EventEmitter.emit(u.EventType.dialog.scrollToBottom,{chatId:this.dialog.chatId});return}void this.getScrollManager().animatedScrollToMessage(this.dialog.lastMessageId,{withDateOffset:false})},onShowForwardPopup(e){const{messageId:t}=e.getData();this.forwardPopup.messageId=t;this.forwardPopup.show=true},onCloseForwardPopup(){this.forwardPopup.messageId=0;this.forwardPopup.show=false},onMessageIsVisible(e){const{messageId:t,dialogId:s}=e.getData();if(s!==this.dialogId){return}this.getVisibleMessagesManager().setMessageAsVisible(t);const i=this.$store.getters["messages/getById"](t);if(!i.viewed){this.messagesToRead.add(t);this.debouncedReadHandler()}},onMessageIsNotVisible(e){const{messageId:t,dialogId:s}=e.getData();if(s!==this.dialogId){return}this.getVisibleMessagesManager().setMessageAsNotVisible(t)},initContextMode(){const e=r.LayoutManager.getInstance();if(!e.isChatContextAvailable(this.dialogId)){return}this.contextMode.active=true;this.contextMode.messageIsLoaded=!this.dialogInited},getMessageService(){if(!this.messageService){this.messageService=new n.MessageService({chatId:this.dialog.chatId})}return this.messageService},getChatService(){if(!this.chatService){this.chatService=new n.ChatService}return this.chatService},getScrollManager(){if(!this.scrollManager){this.scrollManager=new P;this.scrollManager.subscribe(P.events.onScrollTriggerUp,this.onScrollTriggerUp);this.scrollManager.subscribe(P.events.onScrollTriggerDown,this.onScrollTriggerDown);this.scrollManager.subscribe(P.events.onScrollThresholdPass,(e=>{this.isScrolledUp=e.getData()}))}return this.scrollManager},getPullWatchManager(){if(!this.pullWatchManager){this.pullWatchManager=new $(this.dialogId)}return this.pullWatchManager},getVisibleMessagesManager(){if(!this.visibleMessagesManager){this.visibleMessagesManager=new R}return this.visibleMessagesManager},hasVisibleCall(){return a.CallManager.getInstance().hasVisibleCall()},closeDialogPopups(){var e,s,i,o,a;this.showQuoteButton=false;(e=t.PopupManager.getPopupById(u.PopupType.dialogAvatarMenu))==null?void 0:e.close();(s=t.PopupManager.getPopupById(u.PopupType.dialogMessageMenu))==null?void 0:s.close();(i=t.PopupManager.getPopupById(u.PopupType.dialogReactionUsers))==null?void 0:i.close();(o=t.PopupManager.getPopupById(u.PopupType.dialogReadUsers))==null?void 0:o.close();(a=t.PopupManager.getPopupById(u.PopupType.messageBaseFileMenu))==null?void 0:a.close()},subscribeToEvents(){l.EventEmitter.subscribe(u.EventType.dialog.scrollToBottom,this.onScrollToBottom);l.EventEmitter.subscribe(u.EventType.dialog.goToMessageContext,this.onGoToMessageContext);l.EventEmitter.subscribe(u.EventType.call.onFold,this.onCallFold);l.EventEmitter.subscribe(u.EventType.dialog.showForwardPopup,this.onShowForwardPopup);l.EventEmitter.subscribe(u.EventType.dialog.showQuoteButton,this.onShowQuoteButton);l.EventEmitter.subscribe(u.EventType.dialog.onMessageIsVisible,this.onMessageIsVisible);l.EventEmitter.subscribe(u.EventType.dialog.onMessageIsNotVisible,this.onMessageIsNotVisible);M.Event.bind(window,"focus",this.onWindowFocus);M.Event.bind(window,"blur",this.onWindowBlur)},unsubscribeFromEvents(){l.EventEmitter.unsubscribe(u.EventType.dialog.scrollToBottom,this.onScrollToBottom);l.EventEmitter.unsubscribe(u.EventType.dialog.goToMessageContext,this.onGoToMessageContext);l.EventEmitter.unsubscribe(u.EventType.call.onFold,this.onCallFold);l.EventEmitter.unsubscribe(u.EventType.dialog.showForwardPopup,this.onShowForwardPopup);l.EventEmitter.unsubscribe(u.EventType.dialog.showQuoteButton,this.onShowQuoteButton);l.EventEmitter.unsubscribe(u.EventType.dialog.onMessageIsVisible,this.onMessageIsVisible);l.EventEmitter.unsubscribe(u.EventType.dialog.onMessageIsNotVisible,this.onMessageIsNotVisible);M.Event.unbind(window,"focus",this.onWindowFocus);M.Event.unbind(window,"blur",this.onWindowBlur)},getContainer(){return this.$refs.container}},template:`\n\t\t<div class="bx-im-dialog-chat__block bx-im-dialog-chat__scope">\n\t\t\t\x3c!-- Top --\x3e\n\t\t\t<slot name="pinned-panel">\n\t\t\t\t<PinnedMessages\n\t\t\t\t\tv-if="pinnedMessages.length > 0"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t:messages="pinnedMessages"\n\t\t\t\t\t@messageClick="onPinnedMessageClick"\n\t\t\t\t\t@messageUnpin="onPinnedMessageUnpin"\n\t\t\t\t/>\n\t\t\t</slot>\n\t\t\t<PullStatus/>\n\t\t\t\x3c!-- Message list --\x3e\n\t\t\t<div @scroll="onScroll" class="bx-im-dialog-chat__scroll-container" ref="container">\n\t\t\t\t<slot name="message-list">\n\t\t\t\t\t<component :is="messageListComponent" :dialogId="dialogId" />\n\t\t\t\t</slot>\n\t\t\t</div>\n\t\t\t\x3c!-- Float buttons --\x3e\n\t\t\t<slot name="additional-float-button"></slot>\n\t\t\t<Transition name="float-button-transition">\n\t\t\t\t<ScrollButton v-if="showScrollButton" :dialogId="dialogId" @click="onScrollButtonClick" />\n\t\t\t</Transition>\n\t\t\t\x3c!-- Absolute elements --\x3e\n\t\t\t<ForwardPopup\n\t\t\t\t:showPopup="forwardPopup.show"\n\t\t\t\t:messageId="forwardPopup.messageId"\n\t\t\t\t@close="onCloseForwardPopup"\n\t\t\t/>\n\t\t\t<Transition name="fade-up">\n\t\t\t\t<QuoteButton\n\t\t\t\t\tv-if="showQuoteButton"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t@close="showQuoteButton = false" \n\t\t\t\t\tclass="bx-im-message-base__quote-button"\n\t\t\t\t\tref="quoteButton"\n\t\t\t\t/>\n\t\t\t</Transition>\n\t\t</div>\n\t`};e.ChatDialog=ie;e.PinnedMessages=q})(this.BX.Messenger.v2.Component.Dialog=this.BX.Messenger.v2.Component.Dialog||{},BX.Main,window,BX.Messenger.v2.Component,BX.Messenger.v2.Component.EntitySelector,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=chat-dialog.bundle.map.js