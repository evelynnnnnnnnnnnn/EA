this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,i,r,a,n,o,c,l,d,m,u,h,g,p,v,b,_){"use strict";const I={name:"MessageStatus",props:{item:{type:Object,required:true},isOverlay:{type:Boolean,default:false}},computed:{message(){return this.item},formattedDate(){return t.DateFormatter.formatByCode(this.message.date,t.DateCode.shortTimeFormat)},isSelfMessage(){return this.message.authorId===l.Core.getUserId()},messageStatus(){if(this.message.error){return p.OwnMessageStatus.error}if(this.message.sending){return p.OwnMessageStatus.sending}if(this.message.viewedByOthers){return p.OwnMessageStatus.viewed}return p.OwnMessageStatus.sent}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-message-status__container bx-im-message-status__scope" :class="{'--overlay': isOverlay}">\n\t\t\t<div v-if="message.isEdited && !message.isDeleted" class="bx-im-message-status__edit-mark">\n\t\t\t\t{{ loc('IM_MESSENGER_MESSAGE_EDITED') }}\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-status__date" :class="{'--overlay': isOverlay}">\n\t\t\t\t{{ formattedDate }}\n\t\t\t</div>\n\t\t\t<div v-if="isSelfMessage" :class="'--' + messageStatus" class="bx-im-message-status__icon"></div>\n\t\t</div>\n\t`};const S={name:"MessageAttach",components:{Attach:v.Attach},props:{item:{type:Object,required:true},dialogId:{type:String,required:true}},computed:{message(){return this.item},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},user(){return this.$store.getters["users/get"](this.dialogId,true)},dialogColor(){return this.dialog.type===p.ChatType.user?this.user.color:this.dialog.color}},created(){s.provide("message",this.message)},template:`\n\t\t<div v-for="config in message.attach" :key="config.id" class="bx-im-message-attach__container">\n\t\t\t<Attach :baseColor="dialogColor" :config="config" />\n\t\t</div>\n\t`};const f={name:"MessageKeyboard",components:{Keyboard:v.Keyboard},props:{item:{type:Object,required:true},dialogId:{type:String,required:true}},computed:{message(){return this.item},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},user(){return this.$store.getters["users/get"](this.dialogId,true)}},template:`\n\t\t<div class="bx-im-message-keyboard__container">\n\t\t\t<Keyboard :buttons="message.keyboard" :dialogId="dialogId" :messageId="message.id" />\n\t\t</div>\n\t`};const y={components:{Avatar:v.Avatar},props:{userId:{type:Number,required:true}},computed:{AvatarSize:()=>v.AvatarSize,user(){return this.$store.getters["users/get"](this.userId)},avatarStyle(){if(!this.user.avatar){return{}}return{backgroundImage:`url('${this.user.avatar}')`}}},template:`\n\t\t<div class="bx-im-reaction-list__user_avatar">\n\t\t\t<Avatar \n\t\t\t\t:dialogId="userId" \n\t\t\t\t:size="AvatarSize.XS" \n\t\t\t\t:withAvatarLetters="false"\n\t\t\t\t:withTooltip="false"\n\t\t\t/>\n\t\t</div>\n\t`};var M=babelHelpers.classPrivateFieldLooseKey("store");var C=babelHelpers.classPrivateFieldLooseKey("restClient");var T=babelHelpers.classPrivateFieldLooseKey("userManager");class w{constructor(){Object.defineProperty(this,M,{writable:true,value:void 0});Object.defineProperty(this,C,{writable:true,value:void 0});Object.defineProperty(this,T,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,M)[M]=l.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,C)[C]=l.Core.getRestClient();babelHelpers.classPrivateFieldLooseBase(this,T)[T]=new r.UserManager}loadReactionUsers(e,t){let s=[];a.Logger.warn("Reactions: UserService: loadReactionUsers",e,t);const i={messageId:e,filter:{reaction:t}};return babelHelpers.classPrivateFieldLooseBase(this,C)[C].callMethod(p.RestMethod.imV2ChatMessageReactionTail,i).then((e=>{s=e.data().users;return babelHelpers.classPrivateFieldLooseBase(this,T)[T].setUsersToModel(Object.values(s))})).then((()=>s.map((e=>e.id)))).catch((e=>{console.error("Reactions: UserService: loadReactionUsers error",e);throw new Error(e)}))}}const E={components:{UserListPopup:v.UserListPopup},props:{messageId:{type:[String,Number],required:true},reaction:{type:String,required:true},show:{type:Boolean,required:true},bindElement:{type:Object,required:true}},emits:["close"],data(){return{showPopup:false,loadingAdditionalUsers:false,additionalUsers:[]}},watch:{show(e,t){if(!t&&e){this.showPopup=true;this.loadUsers()}}},methods:{loadUsers(){this.loadingAdditionalUsers=true;this.getUserService().loadReactionUsers(this.messageId,this.reaction).then((e=>{this.additionalUsers=e;this.loadingAdditionalUsers=false})).catch((()=>{this.loadingAdditionalUsers=false}))},onPopupClose(){this.showPopup=false;this.$emit("close")},prepareAdditionalUsers(e){const t=this.dialog.lastMessageViews.firstViewer.userId;return e.filter((e=>e!==l.Core.getUserId()&&e!==t))},getUserService(){if(!this.userService){this.userService=new w}return this.userService}},template:`\n\t\t<UserListPopup\n\t\t\tid="bx-im-message-reaction-users"\n\t\t\t:showPopup="showPopup"\n\t\t\t:loading="loadingAdditionalUsers"\n\t\t\t:userIds="additionalUsers"\n\t\t\t:bindElement="bindElement || {}"\n\t\t\t:withAngle="false"\n\t\t\t:offsetLeft="-112"\n\t\t\t:forceTop="true"\n\t\t\t@close="onPopupClose"\n\t\t/>\n\t`};const R=5;const A=500;const x={components:{ReactionUser:y,AdditionalUsers:E},props:{messageId:{type:[String,Number],required:true},type:{type:String,required:true},counter:{type:Number,required:true},users:{type:Array,required:true},selected:{type:Boolean,required:true},animate:{type:Boolean,required:true},showAvatars:{type:Boolean,required:false,default:true}},emits:["click"],data(){return{showAdditionalUsers:false}},computed:{showUsers(){if(!this.showAvatars){return false}const e=this.counter<=R;const t=this.counter===this.users.length;return e&&t},preparedUsers(){return[...this.users].sort(((e,t)=>e-t)).reverse()},reactionClass(){return n.reactionCssClass[this.type]}},mounted(){if(this.animate){this.playAnimation()}},methods:{playAnimation(){this.animation=i.Lottie.loadAnimation({animationData:n.ReactionsSelect.getLottieAnimation(this.type),container:this.$refs.reactionIcon,loop:false,autoplay:false,renderer:"svg",rendererSettings:{viewBoxOnly:true}});h.Event.bind(this.animation,"complete",(()=>{this.animation.destroy()}));h.Event.bind(this.animation,"destroy",(()=>{this.animation=null}));this.animation.play()},startShowUsersTimer(){this.showUsersTimeout=setTimeout((()=>{this.showAdditionalUsers=true}),A)},clearShowUsersTimer(){clearTimeout(this.showUsersTimeout)},onClick(){this.clearShowUsersTimer();this.$emit("click",{animateItemFunction:this.playAnimation})}},template:`\n\t\t<div\n\t\t\t@click="onClick" \n\t\t\t@mouseenter="startShowUsersTimer"\n\t\t\t@mouseleave="clearShowUsersTimer"\n\t\t\tclass="bx-im-reaction-list__item"\n\t\t\t:class="{'--selected': selected}"\n\t\t>\n\t\t\t<div class="bx-im-reaction-list__item_icon" :class="reactionClass" ref="reactionIcon"></div>\n\t\t\t<div v-if="showUsers" class="bx-im-reaction-list__user_container" ref="users">\n\t\t\t\t<TransitionGroup name="bx-im-reaction-list__user_animation">\n\t\t\t\t\t<ReactionUser v-for="user in preparedUsers" :key="user" :userId="user" />\n\t\t\t\t</TransitionGroup>\n\t\t\t</div>\n\t\t\t<div v-else class="bx-im-reaction-list__item_counter" ref="counter">{{ counter }}</div>\n\t\t\t<AdditionalUsers\n\t\t\t\t:show="showAdditionalUsers"\n\t\t\t\t:bindElement="$refs['users'] || $refs['counter'] || {}"\n\t\t\t\t:messageId="messageId"\n\t\t\t\t:reaction="type"\n\t\t\t\t@close="showAdditionalUsers = false"\n\t\t\t/>\n\t\t</div>\n\t`};var B=babelHelpers.classPrivateFieldLooseKey("store");var U=babelHelpers.classPrivateFieldLooseKey("restClient");class L{constructor(){Object.defineProperty(this,B,{writable:true,value:void 0});Object.defineProperty(this,U,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,B)[B]=l.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,U)[U]=l.Core.getRestClient()}setReaction(e,t){a.Logger.warn("ReactionService: setReaction",e,t);babelHelpers.classPrivateFieldLooseBase(this,B)[B].dispatch("messages/reactions/setReaction",{messageId:e,reaction:t,userId:l.Core.getUserId()});babelHelpers.classPrivateFieldLooseBase(this,U)[U].callMethod(p.RestMethod.imV2ChatMessageReactionAdd,{messageId:e,reaction:t}).catch((e=>{console.error("ReactionService: error setting reaction",e)}))}removeReaction(e,t){a.Logger.warn("ReactionService: removeReaction",e,t);babelHelpers.classPrivateFieldLooseBase(this,B)[B].dispatch("messages/reactions/removeReaction",{messageId:e,reaction:t,userId:l.Core.getUserId()});babelHelpers.classPrivateFieldLooseBase(this,U)[U].callMethod(p.RestMethod.imV2ChatMessageReactionDelete,{messageId:e,reaction:t}).catch((e=>{console.error("ReactionService: error removing reaction",e)}))}}const P={name:"ReactionList",components:{ReactionItem:x},props:{messageId:{type:[String,Number],required:true}},data(){return{mounted:false}},computed:{Reaction:()=>n.reactionType,message(){return this.$store.getters["messages/getById"](this.messageId)},dialog(){return this.$store.getters["chats/getByChatId"](this.message.chatId)},reactionsData(){return this.$store.getters["messages/reactions/getByMessageId"](this.messageId)},reactionCounters(){var e,t;return(e=(t=this.reactionsData)==null?void 0:t.reactionCounters)!=null?e:{}},ownReactions(){var e,t;return(e=(t=this.reactionsData)==null?void 0:t.ownReactions)!=null?e:new Set},showReactionsContainer(){return Object.keys(this.reactionCounters).length>0},isChannel(){return[p.ChatType.openChannel,p.ChatType.channel].includes(this.dialog.type)},showAvatars(){return!this.isChannel}},watch:{showReactionsContainer(e,t){if(!t&&e){g.EventEmitter.emit(p.EventType.dialog.scrollToBottom,{chatId:this.message.chatId,threshold:p.DialogScrollThreshold.nearTheBottom,animation:false})}}},mounted(){this.mounted=true},methods:{onReactionSelect(e,t){var s;const i=b.PermissionManager.getInstance();if(!i.canPerformAction(p.ChatActionType.setReaction,this.dialog.dialogId)){return}const{animateItemFunction:r}=t;if((s=this.ownReactions)!=null&&s.has(e)){this.getReactionService().removeReaction(this.messageId,e);return}this.getReactionService().setReaction(this.messageId,e);r()},getReactionUsers(e){const t=this.reactionsData.reactionUsers[e];if(!t){return[]}return[...t]},getReactionService(){if(!this.reactionService){this.reactionService=new L}return this.reactionService}},template:`\n\t\t<div v-if="showReactionsContainer" class="bx-im-reaction-list__container bx-im-reaction-list__scope">\n\t\t\t<template v-for="reactionType in Reaction">\n\t\t\t\t<ReactionItem\n\t\t\t\t\tv-if="reactionCounters[reactionType] > 0"\n\t\t\t\t\t:key="reactionType + messageId"\n\t\t\t\t\t:messageId="messageId"\n\t\t\t\t\t:type="reactionType"\n\t\t\t\t\t:counter="reactionCounters[reactionType]"\n\t\t\t\t\t:users="getReactionUsers(reactionType)"\n\t\t\t\t\t:selected="ownReactions.has(reactionType)"\n\t\t\t\t\t:animate="mounted"\n\t\t\t\t\t:showAvatars="showAvatars"\n\t\t\t\t\t@click="onReactionSelect(reactionType, $event)"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</div>\n\t`};const F=500;const N=800;const O=new Set([p.ChatType.copilot]);const H={name:"ReactionSelector",props:{messageId:{type:[String,Number],required:true}},computed:{message(){return this.$store.getters["messages/getById"](this.messageId)},dialog(){return this.$store.getters["chats/getByChatId"](this.message.chatId)},reactionsData(){return this.$store.getters["messages/reactions/getByMessageId"](this.messageId)},ownReactionSet(){var e,t;return((e=this.reactionsData)==null?void 0:(t=e.ownReactions)==null?void 0:t.size)>0},isBot(){const e=this.$store.getters["users/get"](this.dialog.dialogId);return(e==null?void 0:e.bot)===true},hasError(){return this.message.error},canSetReactions(){return h.Type.isNumber(this.messageId)&&this.canSetReactionsByRole&&!this.isBot&&!this.hasError&&this.areReactionsEnabledForType},canSetReactionsByRole(){const e=b.PermissionManager.getInstance();return e.canPerformAction(p.ChatActionType.setReaction,this.dialog.dialogId)},areReactionsEnabledForType(){return!O.has(this.dialog.type)}},methods:{startShowTimer(){var e;this.clearHideTimer();if((e=this.selector)!=null&&e.isShown()){return}this.showTimeout=setTimeout((()=>{this.showSelector()}),F)},clearShowTimer(){clearTimeout(this.showTimeout);this.startHideTimer()},showSelector(){this.selector=new n.ReactionsSelect({name:"im-base-message-reaction-selector",position:this.$refs.selector});this.subscribeToSelectorEvents();this.selector.show()},subscribeToSelectorEvents(){this.selector.subscribe("select",(e=>{var t;const{reaction:s}=e.getData();this.getReactionService().setReaction(this.messageId,s);(t=this.selector)==null?void 0:t.hide()}));this.selector.subscribe("mouseleave",this.startHideTimer);this.selector.subscribe("mouseenter",(()=>{clearTimeout(this.hideTimeout)}));this.selector.subscribe("hide",(()=>{clearTimeout(this.hideTimeout);this.selector=null}))},startHideTimer(){this.hideTimeout=setTimeout((()=>{var e;(e=this.selector)==null?void 0:e.hide()}),N)},clearHideTimer(){clearTimeout(this.hideTimeout)},onIconClick(){this.clearShowTimer();if(this.ownReactionSet){const[e]=[...this.reactionsData.ownReactions];this.getReactionService().removeReaction(this.messageId,e);return}this.getReactionService().setReaction(this.messageId,n.reactionType.like)},getReactionService(){if(!this.reactionService){this.reactionService=new L}return this.reactionService}},template:`\n\t\t<div v-if="canSetReactions" class="bx-im-reaction-selector__container">\n\t\t\t<div\n\t\t\t\t@click="onIconClick"\n\t\t\t\t@mouseenter="startShowTimer"\n\t\t\t\t@mouseleave="clearShowTimer"\n\t\t\t\tclass="bx-im-reaction-selector__selector"\n\t\t\t\tref="selector"\n\t\t\t>\n\t\t\t\t<div class="bx-im-reaction-selector__icon" :class="{'--active': ownReactionSet}"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const k={name:"DefaultMessageContent",components:{Reactions:o.Reactions,MessageStatus:I,MessageAttach:S,ReactionList:P},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withMessageStatus:{type:Boolean,default:true},withText:{type:Boolean,default:true},withAttach:{type:Boolean,default:true}},computed:{message(){return this.item},formattedText(){return u.Parser.decodeMessage(this.item)},canSetReactions(){return h.Type.isNumber(this.message.id)}},template:`\n\t\t<div class="bx-im-message-default-content__container bx-im-message-default-content__scope" :class="{'--no-text': !withText}">\n\t\t\t<div v-if="withText" class="bx-im-message-default-content__text" v-html="formattedText"></div>\n\t\t\t<div v-if="withAttach && message.attach.length > 0" class="bx-im-message-default-content__attach">\n\t\t\t\t<MessageAttach :item="message" :dialogId="dialogId" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-default-content__bottom-panel">\n\t\t\t\t<ReactionList \n\t\t\t\t\tv-if="canSetReactions" \n\t\t\t\t\t:messageId="message.id" \n\t\t\t\t\tclass="bx-im-message-default-content__reaction-list" \n\t\t\t\t/>\n\t\t\t\t<div v-if="withMessageStatus" class="bx-im-message-default-content__status-container">\n\t\t\t\t\t<MessageStatus :item="message" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const D={name:"AuthorTitle",components:{ChatTitle:v.ChatTitle},props:{item:{type:Object,required:true}},computed:{message(){return this.item},dialog(){return this.$store.getters["chats/getByChatId"](this.message.chatId)},user(){return this.$store.getters["users/get"](this.message.authorId,true)},isSystemMessage(){return this.message.authorId===0},isSelfMessage(){return this.message.authorId===l.Core.getUserId()},isUserChat(){return this.dialog.type===p.ChatType.user&&!this.isBotWithFakeAuthorNames},isBotWithFakeAuthorNames(){return this.isSupportBot||this.isNetworkBot},isNetworkBot(){return this.$store.getters["users/bots/isNetwork"](this.dialog.dialogId)},isSupportBot(){return this.$store.getters["users/bots/isSupport"](this.dialog.dialogId)},showTitle(){return!this.isSystemMessage&&!this.isSelfMessage&&!this.isUserChat},authorDialogId(){if(this.message.authorId){return this.message.authorId.toString()}return this.dialogId}},methods:{onAuthorNameClick(){const e=Number.parseInt(this.authorDialogId,10);if(!e||e===l.Core.getUserId()){return}g.EventEmitter.emit(p.EventType.textarea.insertMention,{mentionText:this.user.name,mentionReplacement:c.Utils.text.getMentionBbCode(this.user.id,this.user.name),dialogId:this.dialog.dialogId})}},template:`\n\t\t<div v-if="showTitle" @click="onAuthorNameClick" class="bx-im-message-author-title__container">\n\t\t\t<ChatTitle\n\t\t\t\t:dialogId="authorDialogId"\n\t\t\t\t:showItsYou="false"\n\t\t\t\t:withColor="true"\n\t\t\t\t:withLeftIcon="true"\n\t\t\t/>\n\t\t</div>\n\t`};const $={name:"ContextMenu",props:{dialogId:{type:String,required:true},message:{type:Object,required:true},menuIsActiveForId:{type:[String,Number],default:0}},computed:{menuTitle(){return this.$Bitrix.Loc.getMessage("IM_MESSENGER_MESSAGE_MENU_TITLE",{"#SHORTCUT#":c.Utils.platform.isMac()?"CMD":"CTRL"})},messageItem(){return this.message},messageHasError(){return this.messageItem.error}},methods:{onMenuClick(e){g.EventEmitter.emit(p.EventType.dialog.onClickMessageContextMenu,{message:this.message,dialogId:this.dialogId,event:e})}},template:`\n\t\t<div v-if="!messageHasError" class="bx-im-message-context-menu__container bx-im-message-context-menu__scope">\n\t\t\t<button\n\t\t\t\t:title="menuTitle"\n\t\t\t\t@click="onMenuClick"\n\t\t\t\t@contextmenu.prevent\n\t\t\t\t:class="{'--active': menuIsActiveForId === message.id}"\n\t\t\t\tclass="bx-im-message-context-menu__button"\n\t\t\t></button>\n\t\t</div>\n\t`};var X=babelHelpers.classPrivateFieldLooseKey("isOwnMessage");var q=babelHelpers.classPrivateFieldLooseKey("hasError");var G=babelHelpers.classPrivateFieldLooseKey("retrySend");var j=babelHelpers.classPrivateFieldLooseKey("retrySendMessage");class K extends d.BaseMenu{constructor(){super();Object.defineProperty(this,j,{value:Y});Object.defineProperty(this,G,{value:W});Object.defineProperty(this,q,{value:V});Object.defineProperty(this,X,{value:z});this.id="bx-im-message-retry-context-menu"}getMenuItems(){return[this.getRetryItem(),this.getDeleteItem()]}getRetryItem(){if(!babelHelpers.classPrivateFieldLooseBase(this,X)[X]()||!babelHelpers.classPrivateFieldLooseBase(this,q)[q]()){return null}return{text:h.Loc.getMessage("IM_MESSENGER_MESSAGE_CONTEXT_MENU_RETRY"),onclick:()=>{babelHelpers.classPrivateFieldLooseBase(this,G)[G]();this.menuInstance.close()}}}getDeleteItem(){if(!babelHelpers.classPrivateFieldLooseBase(this,X)[X]()||!babelHelpers.classPrivateFieldLooseBase(this,q)[q]()){return null}const e=h.Loc.getMessage("IM_MESSENGER_MESSAGE_CONTEXT_MENU_DELETE");return{html:`<span class="bx-im-message-retry-button__context-menu-delete">${e}</span>`,onclick:()=>{const e=new m.MessageService({chatId:this.context.chatId});e.deleteMessage(this.context.id);this.menuInstance.close()}}}}function z(){return this.context.authorId===l.Core.getUserId()}function V(){return this.context.error}function W(){const e=this.context.files.length>0;if(e){return}babelHelpers.classPrivateFieldLooseBase(this,j)[j]()}function Y(){(new m.SendingService).retrySendMessage({tempMessageId:this.context.id,dialogId:this.context.dialogId})}const J={name:"RetryButton",props:{message:{type:Object,required:true},dialogId:{type:String,required:true}},computed:{messageItem(){return this.message},menuTitle(){return this.$Bitrix.Loc.getMessage("IM_MESSENGER_MESSAGE_CONTEXT_MENU_RETRY")}},created(){this.contextMenu=new K},methods:{onClick(e){const t={dialogId:this.dialogId,...this.messageItem};this.contextMenu.openMenu(t,e.currentTarget)}},template:`\n\t\t<div class="bx-im-message-retry-button__container bx-im-message-retry-button__scope">\n\t\t\t<button\n\t\t\t\t:title="menuTitle"\n\t\t\t\t@click="onClick"\n\t\t\t\tclass="bx-im-message-retry-button__arrow"\n\t\t\t></button>\n\t\t</div>\n\t`};const Q={name:"MessageHeader",components:{AuthorTitle:D},props:{item:{type:Object,required:true},withTitle:{type:Boolean,default:false}},computed:{message(){return this.item},forwardAuthorId(){return this.message.forward.userId},forwardContextId(){return this.message.forward.id},isForwarded(){return this.$store.getters["messages/isForward"](this.message.id)},isChannelForward(){return[p.ChatType.openChannel,p.ChatType.channel].includes(this.message.forward.chatType)},forwardAuthorName(){return this.$store.getters["users/get"](this.forwardAuthorId,true).name},forwardChatName(){var e;return(e=this.message.forward.chatTitle)!=null?e:this.loc("IM_MESSENGER_MESSAGE_HEADER_FORWARDED_CLOSED_CHANNEL")},isSystemMessage(){return this.message.forward.userId===0},forwardAuthorTitle(){return h.Loc.getMessage("IM_MESSENGER_MESSAGE_HEADER_FORWARDED_FROM_CHAT",{"[user_name]":'<span class="bx-im-message-header__author-name">',"#USER_NAME#":h.Text.encode(this.forwardAuthorName),"[/user_name]":"</span>"})},forwardChannelTitle(){return h.Loc.getMessage("IM_MESSENGER_MESSAGE_HEADER_FORWARDED_FROM_CHANNEL",{"[user_name]":'<span class="bx-im-message-header__author-name">',"#USER_NAME#":h.Text.encode(this.forwardAuthorName),"[/user_name]":"</span>","[channel_name]":'<span class="bx-im-message-header__author-name">',"#CHANNEL_NAME#":h.Text.encode(this.forwardChatName),"[/channel_name]":"</span>"})}},methods:{loc(e,t={}){return this.$Bitrix.Loc.getMessage(e,t)},onForwardClick(){const e=u.Parser.getContextCodeFromForwardId(this.forwardContextId);if(e.length===0){return}const[t,s]=e.split("/");g.EventEmitter.emit(p.EventType.dialog.goToMessageContext,{messageId:Number.parseInt(s,10),dialogId:t.toString()})}},template:`\n\t\t<div v-if="isForwarded" class="bx-im-message-header__container" @click="onForwardClick">\n\t\t\t<span v-if="isSystemMessage">{{ loc('IM_MESSENGER_MESSAGE_HEADER_FORWARDED_FROM_SYSTEM')}}</span>\n\t\t\t<span v-else-if="isChannelForward" v-html="forwardChannelTitle"></span>\n\t\t\t<span v-else v-html="forwardAuthorTitle"></span>\n\t\t</div>\n\t\t<AuthorTitle v-else-if="withTitle" :item="item" />\n\t`};const Z={name:"CommentsPanel",components:{Avatar:v.Avatar,FadeAnimation:_.FadeAnimation},props:{item:{type:Object,required:true},dialogId:{type:String,required:true}},data(){return{}},computed:{AvatarSize:()=>v.AvatarSize,dialog(){return this.$store.getters["chats/get"](this.dialogId)},message(){return this.item},commentInfo(){return this.$store.getters["messages/comments/getByMessageId"](this.message.id)},commentsChatId(){return this.commentInfo.chatId},commentsCount(){if(this.commentInfo.messageCount>0){return this.commentInfo.messageCount-1}return this.commentInfo.messageCount},commentsCountText(){return h.Loc.getMessagePlural("IM_MESSAGE_COMMENTS_PANEL_COMMENT_COUNT",this.commentsCount,{"#COUNT#":this.commentsCount})},noComments(){return this.commentsCount===0},lastUsers(){return[...this.commentInfo.lastUserIds].map((e=>this.$store.getters["users/get"](e))).reverse()},unreadCount(){return this.$store.getters["counters/getSpecificCommentsCounter"]({channelId:this.dialog.chatId,commentChatId:this.commentsChatId})}},methods:{onCommentsClick(){const e=b.PermissionManager.getInstance();if(!e.canPerformAction(p.ChatActionType.openComments,this.dialogId)){return}g.EventEmitter.emit(p.EventType.dialog.openComments,{messageId:this.message.id})},loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-message-comments-panel__container" @click="onCommentsClick">\n\t\t\t<div class="bx-im-message-comments-panel__left">\n\t\t\t\t<div v-if="noComments" class="bx-im-message-comments-panel__empty_container">\n\t\t\t\t\t<div class="bx-im-message-comments-panel__empty_icon"></div>\n\t\t\t\t\t<div class="bx-im-message-comments-panel__text">{{ loc('IM_MESSAGE_COMMENTS_PANEL_EMPTY_TEXT') }}</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-else class="bx-im-message-comments-panel__meta_container">\n\t\t\t\t\t<div class="bx-im-message-comments-panel__user_container">\n\t\t\t\t\t\t<TransitionGroup name="bx-im-message-comments-panel__user_animation">\n\t\t\t\t\t\t\t<div v-for="user in lastUsers" :key="user.id" class="bx-im-message-comments-panel__user_avatar">\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t:dialogId="user.id"\n\t\t\t\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t\t\t\t:withTooltip="false"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</TransitionGroup>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-message-comments-panel__text">{{ commentsCountText }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-comments-panel__right">\n\t\t\t\t<FadeAnimation :duration="200">\n\t\t\t\t\t<div v-if="unreadCount" class="bx-im-message-comments-panel__unread-counter">{{ unreadCount }}</div>\n\t\t\t\t</FadeAnimation>\n\t\t\t\t<div class="bx-im-message-comments-panel__open-icon"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const ee={name:"MessageFooter",components:{CommentsPanel:Z},props:{item:{type:Object,required:true},dialogId:{type:String,required:true}},data(){return{}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId)},message(){return this.item},isChannelPost(){return[p.ChatType.channel,p.ChatType.openChannel].includes(this.dialog.type)},isSystemMessage(){return this.message.authorId===0},showCommentsPanel(){return this.isChannelPost&&!this.isSystemMessage}},template:`\n\t\t<CommentsPanel v-if="showCommentsPanel" :dialogId="dialogId" :item="item" />\n\t`};e.MessageStatus=I;e.MessageAttach=S;e.MessageKeyboard=f;e.ReactionList=P;e.ReactionSelector=H;e.DefaultMessageContent=k;e.AuthorTitle=D;e.ContextMenu=$;e.RetryButton=J;e.MessageHeader=Q;e.MessageFooter=ee})(this.BX.Messenger.v2.Component.Message=this.BX.Messenger.v2.Component.Message||{},BX.Messenger.v2.Lib,BX.Vue3,BX.UI,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Ui,BX.Vue3.Components,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX,BX.Event,BX.Messenger.v2.Const,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Animation);
//# sourceMappingURL=registry.bundle.map.js